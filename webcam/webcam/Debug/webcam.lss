
webcam.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00009024  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00409024  00409024  00019024  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009bc  20000000  0040902c  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00001288  200009bc  004099e8  000209bc  2**2
                  ALLOC
  4 .stack        00003004  20001c44  0040ac70  000209bc  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  000209bc  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  000209e6  2**0
                  CONTENTS, READONLY
  7 .debug_info   000129c9  00000000  00000000  00020a3f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000027e5  00000000  00000000  00033408  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000060f4  00000000  00000000  00035bed  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000ab0  00000000  00000000  0003bce1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000a10  00000000  00000000  0003c791  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  000062fc  00000000  00000000  0003d1a1  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000ca90  00000000  00000000  0004349d  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0004f468  00000000  00000000  0004ff2d  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00003ca8  00000000  00000000  0009f398  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	48 4c 00 20 89 20 40 00 51 21 40 00 51 21 40 00     HL. . @.Q!@.Q!@.
  400010:	51 21 40 00 51 21 40 00 51 21 40 00 00 00 00 00     Q!@.Q!@.Q!@.....
	...
  40002c:	51 21 40 00 51 21 40 00 00 00 00 00 51 21 40 00     Q!@.Q!@.....Q!@.
  40003c:	51 21 40 00 51 21 40 00 51 21 40 00 51 21 40 00     Q!@.Q!@.Q!@.Q!@.
  40004c:	51 21 40 00 51 21 40 00 51 21 40 00 51 21 40 00     Q!@.Q!@.Q!@.Q!@.
  40005c:	00 00 00 00 51 21 40 00 51 21 40 00 00 00 00 00     ....Q!@.Q!@.....
  40006c:	95 05 40 00 ad 05 40 00 00 00 00 00 1d 0c 40 00     ..@...@.......@.
  40007c:	51 21 40 00 00 00 00 00 00 00 00 00 51 21 40 00     Q!@.........Q!@.
  40008c:	51 21 40 00 51 21 40 00 51 21 40 00 51 21 40 00     Q!@.Q!@.Q!@.Q!@.
  40009c:	f1 09 40 00 51 21 40 00 51 21 40 00 00 00 00 00     ..@.Q!@.Q!@.....
	...
  4000b4:	51 21 40 00 51 21 40 00 51 21 40 00 51 21 40 00     Q!@.Q!@.Q!@.Q!@.
  4000c4:	51 21 40 00 51 21 40 00                             Q!@.Q!@.

004000cc <__do_global_dtors_aux>:
  4000cc:	b510      	push	{r4, lr}
  4000ce:	4c05      	ldr	r4, [pc, #20]	; (4000e4 <__do_global_dtors_aux+0x18>)
  4000d0:	7823      	ldrb	r3, [r4, #0]
  4000d2:	b933      	cbnz	r3, 4000e2 <__do_global_dtors_aux+0x16>
  4000d4:	4b04      	ldr	r3, [pc, #16]	; (4000e8 <__do_global_dtors_aux+0x1c>)
  4000d6:	b113      	cbz	r3, 4000de <__do_global_dtors_aux+0x12>
  4000d8:	4804      	ldr	r0, [pc, #16]	; (4000ec <__do_global_dtors_aux+0x20>)
  4000da:	f3af 8000 	nop.w
  4000de:	2301      	movs	r3, #1
  4000e0:	7023      	strb	r3, [r4, #0]
  4000e2:	bd10      	pop	{r4, pc}
  4000e4:	200009bc 	.word	0x200009bc
  4000e8:	00000000 	.word	0x00000000
  4000ec:	0040902c 	.word	0x0040902c

004000f0 <frame_dummy>:
  4000f0:	4b0c      	ldr	r3, [pc, #48]	; (400124 <frame_dummy+0x34>)
  4000f2:	b143      	cbz	r3, 400106 <frame_dummy+0x16>
  4000f4:	480c      	ldr	r0, [pc, #48]	; (400128 <frame_dummy+0x38>)
  4000f6:	490d      	ldr	r1, [pc, #52]	; (40012c <frame_dummy+0x3c>)
  4000f8:	b510      	push	{r4, lr}
  4000fa:	f3af 8000 	nop.w
  4000fe:	480c      	ldr	r0, [pc, #48]	; (400130 <frame_dummy+0x40>)
  400100:	6803      	ldr	r3, [r0, #0]
  400102:	b923      	cbnz	r3, 40010e <frame_dummy+0x1e>
  400104:	bd10      	pop	{r4, pc}
  400106:	480a      	ldr	r0, [pc, #40]	; (400130 <frame_dummy+0x40>)
  400108:	6803      	ldr	r3, [r0, #0]
  40010a:	b933      	cbnz	r3, 40011a <frame_dummy+0x2a>
  40010c:	4770      	bx	lr
  40010e:	4b09      	ldr	r3, [pc, #36]	; (400134 <frame_dummy+0x44>)
  400110:	2b00      	cmp	r3, #0
  400112:	d0f7      	beq.n	400104 <frame_dummy+0x14>
  400114:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400118:	4718      	bx	r3
  40011a:	4b06      	ldr	r3, [pc, #24]	; (400134 <frame_dummy+0x44>)
  40011c:	2b00      	cmp	r3, #0
  40011e:	d0f5      	beq.n	40010c <frame_dummy+0x1c>
  400120:	4718      	bx	r3
  400122:	bf00      	nop
  400124:	00000000 	.word	0x00000000
  400128:	0040902c 	.word	0x0040902c
  40012c:	200009c0 	.word	0x200009c0
  400130:	0040902c 	.word	0x0040902c
  400134:	00000000 	.word	0x00000000

00400138 <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
  400138:	b480      	push	{r7}
  40013a:	b087      	sub	sp, #28
  40013c:	af00      	add	r7, sp, #0
  40013e:	60f8      	str	r0, [r7, #12]
  400140:	60b9      	str	r1, [r7, #8]
  400142:	607a      	str	r2, [r7, #4]

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  400144:	68fa      	ldr	r2, [r7, #12]
  400146:	68bb      	ldr	r3, [r7, #8]
  400148:	019b      	lsls	r3, r3, #6
  40014a:	4413      	add	r3, r2
  40014c:	617b      	str	r3, [r7, #20]

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
  40014e:	697b      	ldr	r3, [r7, #20]
  400150:	2202      	movs	r2, #2
  400152:	601a      	str	r2, [r3, #0]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
  400154:	697b      	ldr	r3, [r7, #20]
  400156:	f04f 32ff 	mov.w	r2, #4294967295
  40015a:	629a      	str	r2, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
  40015c:	697b      	ldr	r3, [r7, #20]
  40015e:	6a1b      	ldr	r3, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
  400160:	697b      	ldr	r3, [r7, #20]
  400162:	687a      	ldr	r2, [r7, #4]
  400164:	605a      	str	r2, [r3, #4]
}
  400166:	bf00      	nop
  400168:	371c      	adds	r7, #28
  40016a:	46bd      	mov	sp, r7
  40016c:	bc80      	pop	{r7}
  40016e:	4770      	bx	lr

00400170 <tc_start>:
 * \param[in] ul_channel Channel to configure
 */
void tc_start(
		Tc *p_tc,
		uint32_t ul_channel)
{
  400170:	b480      	push	{r7}
  400172:	b083      	sub	sp, #12
  400174:	af00      	add	r7, sp, #0
  400176:	6078      	str	r0, [r7, #4]
  400178:	6039      	str	r1, [r7, #0]
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
  40017a:	687a      	ldr	r2, [r7, #4]
  40017c:	683b      	ldr	r3, [r7, #0]
  40017e:	019b      	lsls	r3, r3, #6
  400180:	4413      	add	r3, r2
  400182:	2205      	movs	r2, #5
  400184:	601a      	str	r2, [r3, #0]
}
  400186:	bf00      	nop
  400188:	370c      	adds	r7, #12
  40018a:	46bd      	mov	sp, r7
  40018c:	bc80      	pop	{r7}
  40018e:	4770      	bx	lr

00400190 <tc_write_rc>:
 */
void tc_write_rc(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_value)
{
  400190:	b480      	push	{r7}
  400192:	b085      	sub	sp, #20
  400194:	af00      	add	r7, sp, #0
  400196:	60f8      	str	r0, [r7, #12]
  400198:	60b9      	str	r1, [r7, #8]
  40019a:	607a      	str	r2, [r7, #4]
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
  40019c:	68fa      	ldr	r2, [r7, #12]
  40019e:	68bb      	ldr	r3, [r7, #8]
  4001a0:	019b      	lsls	r3, r3, #6
  4001a2:	4413      	add	r3, r2
  4001a4:	331c      	adds	r3, #28
  4001a6:	687a      	ldr	r2, [r7, #4]
  4001a8:	601a      	str	r2, [r3, #0]
}
  4001aa:	bf00      	nop
  4001ac:	3714      	adds	r7, #20
  4001ae:	46bd      	mov	sp, r7
  4001b0:	bc80      	pop	{r7}
  4001b2:	4770      	bx	lr

004001b4 <tc_enable_interrupt>:
 */
void tc_enable_interrupt(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_sources)
{
  4001b4:	b480      	push	{r7}
  4001b6:	b087      	sub	sp, #28
  4001b8:	af00      	add	r7, sp, #0
  4001ba:	60f8      	str	r0, [r7, #12]
  4001bc:	60b9      	str	r1, [r7, #8]
  4001be:	607a      	str	r2, [r7, #4]

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  4001c0:	68fa      	ldr	r2, [r7, #12]
  4001c2:	68bb      	ldr	r3, [r7, #8]
  4001c4:	019b      	lsls	r3, r3, #6
  4001c6:	4413      	add	r3, r2
  4001c8:	617b      	str	r3, [r7, #20]
	tc_channel->TC_IER = ul_sources;
  4001ca:	697b      	ldr	r3, [r7, #20]
  4001cc:	687a      	ldr	r2, [r7, #4]
  4001ce:	625a      	str	r2, [r3, #36]	; 0x24
}
  4001d0:	bf00      	nop
  4001d2:	371c      	adds	r7, #28
  4001d4:	46bd      	mov	sp, r7
  4001d6:	bc80      	pop	{r7}
  4001d8:	4770      	bx	lr

004001da <tc_get_status>:
 * \return The current TC status.
 */
uint32_t tc_get_status(
		Tc *p_tc,
		uint32_t ul_channel)
{
  4001da:	b480      	push	{r7}
  4001dc:	b085      	sub	sp, #20
  4001de:	af00      	add	r7, sp, #0
  4001e0:	6078      	str	r0, [r7, #4]
  4001e2:	6039      	str	r1, [r7, #0]
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  4001e4:	687a      	ldr	r2, [r7, #4]
  4001e6:	683b      	ldr	r3, [r7, #0]
  4001e8:	019b      	lsls	r3, r3, #6
  4001ea:	4413      	add	r3, r2
  4001ec:	60fb      	str	r3, [r7, #12]
	return tc_channel->TC_SR;
  4001ee:	68fb      	ldr	r3, [r7, #12]
  4001f0:	6a1b      	ldr	r3, [r3, #32]
}
  4001f2:	4618      	mov	r0, r3
  4001f4:	3714      	adds	r7, #20
  4001f6:	46bd      	mov	sp, r7
  4001f8:	bc80      	pop	{r7}
  4001fa:	4770      	bx	lr

004001fc <tc_find_mck_divisor>:
		uint32_t ul_freq,
		uint32_t ul_mck,
		uint32_t *p_uldiv,
		uint32_t *p_ultcclks,
		uint32_t ul_boardmck)
{
  4001fc:	b480      	push	{r7}
  4001fe:	b08d      	sub	sp, #52	; 0x34
  400200:	af00      	add	r7, sp, #0
  400202:	60f8      	str	r0, [r7, #12]
  400204:	60b9      	str	r1, [r7, #8]
  400206:	607a      	str	r2, [r7, #4]
  400208:	603b      	str	r3, [r7, #0]
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  40020a:	2302      	movs	r3, #2
  40020c:	613b      	str	r3, [r7, #16]
  40020e:	2308      	movs	r3, #8
  400210:	617b      	str	r3, [r7, #20]
  400212:	2320      	movs	r3, #32
  400214:	61bb      	str	r3, [r7, #24]
  400216:	2380      	movs	r3, #128	; 0x80
  400218:	61fb      	str	r3, [r7, #28]
			ul_boardmck / FREQ_SLOW_CLOCK_EXT };
  40021a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
  40021c:	0bdb      	lsrs	r3, r3, #15
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  40021e:	623b      	str	r3, [r7, #32]
	uint32_t ul_index;
	uint32_t ul_high, ul_low;

	/*  Satisfy frequency bound. */
	for (ul_index = 0;
  400220:	2300      	movs	r3, #0
  400222:	62fb      	str	r3, [r7, #44]	; 0x2c
  400224:	e01a      	b.n	40025c <tc_find_mck_divisor+0x60>
			ul_index < (sizeof(divisors) / sizeof(divisors[0]));
			ul_index++) {
		ul_high = ul_mck / divisors[ul_index];
  400226:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  400228:	009b      	lsls	r3, r3, #2
  40022a:	f107 0230 	add.w	r2, r7, #48	; 0x30
  40022e:	4413      	add	r3, r2
  400230:	f853 3c20 	ldr.w	r3, [r3, #-32]
  400234:	68ba      	ldr	r2, [r7, #8]
  400236:	fbb2 f3f3 	udiv	r3, r2, r3
  40023a:	62bb      	str	r3, [r7, #40]	; 0x28
		ul_low  = ul_high / TC_DIV_FACTOR;
  40023c:	6abb      	ldr	r3, [r7, #40]	; 0x28
  40023e:	0c1b      	lsrs	r3, r3, #16
  400240:	627b      	str	r3, [r7, #36]	; 0x24
		if (ul_freq > ul_high) {
  400242:	68fa      	ldr	r2, [r7, #12]
  400244:	6abb      	ldr	r3, [r7, #40]	; 0x28
  400246:	429a      	cmp	r2, r3
  400248:	d901      	bls.n	40024e <tc_find_mck_divisor+0x52>
			return 0;
  40024a:	2300      	movs	r3, #0
  40024c:	e023      	b.n	400296 <tc_find_mck_divisor+0x9a>
		} else if (ul_freq >= ul_low) {
  40024e:	68fa      	ldr	r2, [r7, #12]
  400250:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  400252:	429a      	cmp	r2, r3
  400254:	d206      	bcs.n	400264 <tc_find_mck_divisor+0x68>
			ul_index++) {
  400256:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  400258:	3301      	adds	r3, #1
  40025a:	62fb      	str	r3, [r7, #44]	; 0x2c
	for (ul_index = 0;
  40025c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  40025e:	2b04      	cmp	r3, #4
  400260:	d9e1      	bls.n	400226 <tc_find_mck_divisor+0x2a>
  400262:	e000      	b.n	400266 <tc_find_mck_divisor+0x6a>
			break;
  400264:	bf00      	nop
		}
	}
	if (ul_index >= (sizeof(divisors) / sizeof(divisors[0]))) {
  400266:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  400268:	2b04      	cmp	r3, #4
  40026a:	d901      	bls.n	400270 <tc_find_mck_divisor+0x74>
		return 0;
  40026c:	2300      	movs	r3, #0
  40026e:	e012      	b.n	400296 <tc_find_mck_divisor+0x9a>
	}

	/*  Store results. */
	if (p_uldiv) {
  400270:	687b      	ldr	r3, [r7, #4]
  400272:	2b00      	cmp	r3, #0
  400274:	d008      	beq.n	400288 <tc_find_mck_divisor+0x8c>
		*p_uldiv = divisors[ul_index];
  400276:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  400278:	009b      	lsls	r3, r3, #2
  40027a:	f107 0230 	add.w	r2, r7, #48	; 0x30
  40027e:	4413      	add	r3, r2
  400280:	f853 2c20 	ldr.w	r2, [r3, #-32]
  400284:	687b      	ldr	r3, [r7, #4]
  400286:	601a      	str	r2, [r3, #0]
	}

	if (p_ultcclks) {
  400288:	683b      	ldr	r3, [r7, #0]
  40028a:	2b00      	cmp	r3, #0
  40028c:	d002      	beq.n	400294 <tc_find_mck_divisor+0x98>
		*p_ultcclks = ul_index;
  40028e:	683b      	ldr	r3, [r7, #0]
  400290:	6afa      	ldr	r2, [r7, #44]	; 0x2c
  400292:	601a      	str	r2, [r3, #0]
	}

	return 1;
  400294:	2301      	movs	r3, #1
}
  400296:	4618      	mov	r0, r3
  400298:	3734      	adds	r7, #52	; 0x34
  40029a:	46bd      	mov	sp, r7
  40029c:	bc80      	pop	{r7}
  40029e:	4770      	bx	lr

004002a0 <wdt_disable>:

/**
 * \brief Disable the watchdog timer.
 */
void wdt_disable(Wdt *p_wdt)
{
  4002a0:	b480      	push	{r7}
  4002a2:	b083      	sub	sp, #12
  4002a4:	af00      	add	r7, sp, #0
  4002a6:	6078      	str	r0, [r7, #4]
	p_wdt->WDT_MR = WDT_MR_WDDIS;
  4002a8:	687b      	ldr	r3, [r7, #4]
  4002aa:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4002ae:	605a      	str	r2, [r3, #4]

}
  4002b0:	bf00      	nop
  4002b2:	370c      	adds	r7, #12
  4002b4:	46bd      	mov	sp, r7
  4002b6:	bc80      	pop	{r7}
  4002b8:	4770      	bx	lr
  4002ba:	0000      	movs	r0, r0
  4002bc:	0000      	movs	r0, r0
	...

004002c0 <generate_spoof>:

#include "microphone.h"
int wave_samples[NUMBER_OF_SAMPLES] = {0};

// generates sine wave with given number of samples at given frequency
char *generate_spoof(int tone_frequency) {
  4002c0:	b5f0      	push	{r4, r5, r6, r7, lr}
  4002c2:	b085      	sub	sp, #20
  4002c4:	af00      	add	r7, sp, #0
  4002c6:	6078      	str	r0, [r7, #4]
	int sampling_frequency = 32000;
  4002c8:	f44f 43fa 	mov.w	r3, #32000	; 0x7d00
  4002cc:	60bb      	str	r3, [r7, #8]
	
	for (int i = 0; i < NUMBER_OF_SAMPLES; i++)
  4002ce:	2300      	movs	r3, #0
  4002d0:	60fb      	str	r3, [r7, #12]
  4002d2:	e03f      	b.n	400354 <generate_spoof+0x94>
		wave_samples[i] = ((int) 127*sinf(2*M_PI*tone_frequency*i/sampling_frequency));
  4002d4:	4b26      	ldr	r3, [pc, #152]	; (400370 <generate_spoof+0xb0>)
  4002d6:	6878      	ldr	r0, [r7, #4]
  4002d8:	4798      	blx	r3
  4002da:	4c26      	ldr	r4, [pc, #152]	; (400374 <generate_spoof+0xb4>)
  4002dc:	a322      	add	r3, pc, #136	; (adr r3, 400368 <generate_spoof+0xa8>)
  4002de:	e9d3 2300 	ldrd	r2, r3, [r3]
  4002e2:	47a0      	blx	r4
  4002e4:	4603      	mov	r3, r0
  4002e6:	460c      	mov	r4, r1
  4002e8:	461d      	mov	r5, r3
  4002ea:	4626      	mov	r6, r4
  4002ec:	4b20      	ldr	r3, [pc, #128]	; (400370 <generate_spoof+0xb0>)
  4002ee:	68f8      	ldr	r0, [r7, #12]
  4002f0:	4798      	blx	r3
  4002f2:	4602      	mov	r2, r0
  4002f4:	460b      	mov	r3, r1
  4002f6:	4c1f      	ldr	r4, [pc, #124]	; (400374 <generate_spoof+0xb4>)
  4002f8:	4628      	mov	r0, r5
  4002fa:	4631      	mov	r1, r6
  4002fc:	47a0      	blx	r4
  4002fe:	4603      	mov	r3, r0
  400300:	460c      	mov	r4, r1
  400302:	461d      	mov	r5, r3
  400304:	4626      	mov	r6, r4
  400306:	4b1a      	ldr	r3, [pc, #104]	; (400370 <generate_spoof+0xb0>)
  400308:	68b8      	ldr	r0, [r7, #8]
  40030a:	4798      	blx	r3
  40030c:	4602      	mov	r2, r0
  40030e:	460b      	mov	r3, r1
  400310:	4c19      	ldr	r4, [pc, #100]	; (400378 <generate_spoof+0xb8>)
  400312:	4628      	mov	r0, r5
  400314:	4631      	mov	r1, r6
  400316:	47a0      	blx	r4
  400318:	4603      	mov	r3, r0
  40031a:	460c      	mov	r4, r1
  40031c:	4619      	mov	r1, r3
  40031e:	4622      	mov	r2, r4
  400320:	4b16      	ldr	r3, [pc, #88]	; (40037c <generate_spoof+0xbc>)
  400322:	4608      	mov	r0, r1
  400324:	4611      	mov	r1, r2
  400326:	4798      	blx	r3
  400328:	4603      	mov	r3, r0
  40032a:	4618      	mov	r0, r3
  40032c:	4b14      	ldr	r3, [pc, #80]	; (400380 <generate_spoof+0xc0>)
  40032e:	4798      	blx	r3
  400330:	4602      	mov	r2, r0
  400332:	4b14      	ldr	r3, [pc, #80]	; (400384 <generate_spoof+0xc4>)
  400334:	4914      	ldr	r1, [pc, #80]	; (400388 <generate_spoof+0xc8>)
  400336:	4610      	mov	r0, r2
  400338:	4798      	blx	r3
  40033a:	4603      	mov	r3, r0
  40033c:	461a      	mov	r2, r3
  40033e:	4b13      	ldr	r3, [pc, #76]	; (40038c <generate_spoof+0xcc>)
  400340:	4610      	mov	r0, r2
  400342:	4798      	blx	r3
  400344:	4601      	mov	r1, r0
  400346:	4a12      	ldr	r2, [pc, #72]	; (400390 <generate_spoof+0xd0>)
  400348:	68fb      	ldr	r3, [r7, #12]
  40034a:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	for (int i = 0; i < NUMBER_OF_SAMPLES; i++)
  40034e:	68fb      	ldr	r3, [r7, #12]
  400350:	3301      	adds	r3, #1
  400352:	60fb      	str	r3, [r7, #12]
  400354:	68fb      	ldr	r3, [r7, #12]
  400356:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
  40035a:	dbbb      	blt.n	4002d4 <generate_spoof+0x14>
	
	return wave_samples;
  40035c:	4b0c      	ldr	r3, [pc, #48]	; (400390 <generate_spoof+0xd0>)
}
  40035e:	4618      	mov	r0, r3
  400360:	3714      	adds	r7, #20
  400362:	46bd      	mov	sp, r7
  400364:	bdf0      	pop	{r4, r5, r6, r7, pc}
  400366:	bf00      	nop
  400368:	54442d18 	.word	0x54442d18
  40036c:	401921fb 	.word	0x401921fb
  400370:	00403519 	.word	0x00403519
  400374:	004035e5 	.word	0x004035e5
  400378:	00403839 	.word	0x00403839
  40037c:	00403a09 	.word	0x00403a09
  400380:	0040244d 	.word	0x0040244d
  400384:	00403cc5 	.word	0x00403cc5
  400388:	42fe0000 	.word	0x42fe0000
  40038c:	00404051 	.word	0x00404051
  400390:	200009d8 	.word	0x200009d8

00400394 <send_data>:

void send_data(uint8_t* samples_data) {
  400394:	b580      	push	{r7, lr}
  400396:	b0a6      	sub	sp, #152	; 0x98
  400398:	af00      	add	r7, sp, #0
  40039a:	6078      	str	r0, [r7, #4]
	write_wifi_command("close all\r\n", 2);
  40039c:	2102      	movs	r1, #2
  40039e:	4818      	ldr	r0, [pc, #96]	; (400400 <send_data+0x6c>)
  4003a0:	4b18      	ldr	r3, [pc, #96]	; (400404 <send_data+0x70>)
  4003a2:	4798      	blx	r3
	write_wifi_command("websocket_client wss://bigbrothersees.me/source_audio_socket", 2);
  4003a4:	2102      	movs	r1, #2
  4003a6:	4818      	ldr	r0, [pc, #96]	; (400408 <send_data+0x74>)
  4003a8:	4b16      	ldr	r3, [pc, #88]	; (400404 <send_data+0x70>)
  4003aa:	4798      	blx	r3

	char* templated_command[35];
	sprintf(templated_command, "write 0 %d\r\n", NUMBER_OF_SAMPLES);
  4003ac:	f107 0308 	add.w	r3, r7, #8
  4003b0:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
  4003b4:	4915      	ldr	r1, [pc, #84]	; (40040c <send_data+0x78>)
  4003b6:	4618      	mov	r0, r3
  4003b8:	4b15      	ldr	r3, [pc, #84]	; (400410 <send_data+0x7c>)
  4003ba:	4798      	blx	r3
	usart_write_line(BOARD_USART, templated_command);
  4003bc:	f107 0308 	add.w	r3, r7, #8
  4003c0:	4619      	mov	r1, r3
  4003c2:	4814      	ldr	r0, [pc, #80]	; (400414 <send_data+0x80>)
  4003c4:	4b14      	ldr	r3, [pc, #80]	; (400418 <send_data+0x84>)
  4003c6:	4798      	blx	r3
	
	for (int i = 0; i < NUMBER_OF_SAMPLES; i++)
  4003c8:	2300      	movs	r3, #0
  4003ca:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
  4003ce:	e00d      	b.n	4003ec <send_data+0x58>
	{
		usart_putchar(BOARD_USART, samples_data[i]);
  4003d0:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
  4003d4:	687a      	ldr	r2, [r7, #4]
  4003d6:	4413      	add	r3, r2
  4003d8:	781b      	ldrb	r3, [r3, #0]
  4003da:	4619      	mov	r1, r3
  4003dc:	480d      	ldr	r0, [pc, #52]	; (400414 <send_data+0x80>)
  4003de:	4b0f      	ldr	r3, [pc, #60]	; (40041c <send_data+0x88>)
  4003e0:	4798      	blx	r3
	for (int i = 0; i < NUMBER_OF_SAMPLES; i++)
  4003e2:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
  4003e6:	3301      	adds	r3, #1
  4003e8:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
  4003ec:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
  4003f0:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
  4003f4:	dbec      	blt.n	4003d0 <send_data+0x3c>
	}
  4003f6:	bf00      	nop
  4003f8:	3798      	adds	r7, #152	; 0x98
  4003fa:	46bd      	mov	sp, r7
  4003fc:	bd80      	pop	{r7, pc}
  4003fe:	bf00      	nop
  400400:	004087f0 	.word	0x004087f0
  400404:	00400e49 	.word	0x00400e49
  400408:	004087fc 	.word	0x004087fc
  40040c:	0040883c 	.word	0x0040883c
  400410:	00404499 	.word	0x00404499
  400414:	40024000 	.word	0x40024000
  400418:	00400899 	.word	0x00400899
  40041c:	00400869 	.word	0x00400869

00400420 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400420:	b580      	push	{r7, lr}
  400422:	b084      	sub	sp, #16
  400424:	af00      	add	r7, sp, #0
  400426:	6078      	str	r0, [r7, #4]
  400428:	6039      	str	r1, [r7, #0]
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  40042a:	6878      	ldr	r0, [r7, #4]
  40042c:	4b2c      	ldr	r3, [pc, #176]	; (4004e0 <pio_handler_process+0xc0>)
  40042e:	4798      	blx	r3
  400430:	60f8      	str	r0, [r7, #12]
	status &= pio_get_interrupt_mask(p_pio);
  400432:	6878      	ldr	r0, [r7, #4]
  400434:	4b2b      	ldr	r3, [pc, #172]	; (4004e4 <pio_handler_process+0xc4>)
  400436:	4798      	blx	r3
  400438:	4602      	mov	r2, r0
  40043a:	68fb      	ldr	r3, [r7, #12]
  40043c:	4013      	ands	r3, r2
  40043e:	60fb      	str	r3, [r7, #12]

	/* Check pending events */
	if (status != 0) {
  400440:	68fb      	ldr	r3, [r7, #12]
  400442:	2b00      	cmp	r3, #0
  400444:	d03c      	beq.n	4004c0 <pio_handler_process+0xa0>
		/* Find triggering source */
		i = 0;
  400446:	2300      	movs	r3, #0
  400448:	60bb      	str	r3, [r7, #8]
		while (status != 0) {
  40044a:	e034      	b.n	4004b6 <pio_handler_process+0x96>
			/* Source is configured on the same controller */
			if (gs_interrupt_sources[i].id == ul_id) {
  40044c:	4a26      	ldr	r2, [pc, #152]	; (4004e8 <pio_handler_process+0xc8>)
  40044e:	68bb      	ldr	r3, [r7, #8]
  400450:	011b      	lsls	r3, r3, #4
  400452:	4413      	add	r3, r2
  400454:	681a      	ldr	r2, [r3, #0]
  400456:	683b      	ldr	r3, [r7, #0]
  400458:	429a      	cmp	r2, r3
  40045a:	d126      	bne.n	4004aa <pio_handler_process+0x8a>
				/* Source has PIOs whose statuses have changed */
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  40045c:	4a22      	ldr	r2, [pc, #136]	; (4004e8 <pio_handler_process+0xc8>)
  40045e:	68bb      	ldr	r3, [r7, #8]
  400460:	011b      	lsls	r3, r3, #4
  400462:	4413      	add	r3, r2
  400464:	3304      	adds	r3, #4
  400466:	681a      	ldr	r2, [r3, #0]
  400468:	68fb      	ldr	r3, [r7, #12]
  40046a:	4013      	ands	r3, r2
  40046c:	2b00      	cmp	r3, #0
  40046e:	d01c      	beq.n	4004aa <pio_handler_process+0x8a>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400470:	4a1d      	ldr	r2, [pc, #116]	; (4004e8 <pio_handler_process+0xc8>)
  400472:	68bb      	ldr	r3, [r7, #8]
  400474:	011b      	lsls	r3, r3, #4
  400476:	4413      	add	r3, r2
  400478:	330c      	adds	r3, #12
  40047a:	681b      	ldr	r3, [r3, #0]
  40047c:	491a      	ldr	r1, [pc, #104]	; (4004e8 <pio_handler_process+0xc8>)
  40047e:	68ba      	ldr	r2, [r7, #8]
  400480:	0112      	lsls	r2, r2, #4
  400482:	440a      	add	r2, r1
  400484:	6810      	ldr	r0, [r2, #0]
  400486:	4918      	ldr	r1, [pc, #96]	; (4004e8 <pio_handler_process+0xc8>)
  400488:	68ba      	ldr	r2, [r7, #8]
  40048a:	0112      	lsls	r2, r2, #4
  40048c:	440a      	add	r2, r1
  40048e:	3204      	adds	r2, #4
  400490:	6812      	ldr	r2, [r2, #0]
  400492:	4611      	mov	r1, r2
  400494:	4798      	blx	r3
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
  400496:	4a14      	ldr	r2, [pc, #80]	; (4004e8 <pio_handler_process+0xc8>)
  400498:	68bb      	ldr	r3, [r7, #8]
  40049a:	011b      	lsls	r3, r3, #4
  40049c:	4413      	add	r3, r2
  40049e:	3304      	adds	r3, #4
  4004a0:	681b      	ldr	r3, [r3, #0]
  4004a2:	43db      	mvns	r3, r3
  4004a4:	68fa      	ldr	r2, [r7, #12]
  4004a6:	4013      	ands	r3, r2
  4004a8:	60fb      	str	r3, [r7, #12]
				}
			}
			i++;
  4004aa:	68bb      	ldr	r3, [r7, #8]
  4004ac:	3301      	adds	r3, #1
  4004ae:	60bb      	str	r3, [r7, #8]
			if (i >= MAX_INTERRUPT_SOURCES) {
  4004b0:	68bb      	ldr	r3, [r7, #8]
  4004b2:	2b06      	cmp	r3, #6
  4004b4:	d803      	bhi.n	4004be <pio_handler_process+0x9e>
		while (status != 0) {
  4004b6:	68fb      	ldr	r3, [r7, #12]
  4004b8:	2b00      	cmp	r3, #0
  4004ba:	d1c7      	bne.n	40044c <pio_handler_process+0x2c>
  4004bc:	e000      	b.n	4004c0 <pio_handler_process+0xa0>
				break;
  4004be:	bf00      	nop
		}
	}

	/* Check capture events */
#if (SAM3S || SAM4S || SAM4E)
	if (pio_capture_enable_flag) {
  4004c0:	4b0a      	ldr	r3, [pc, #40]	; (4004ec <pio_handler_process+0xcc>)
  4004c2:	681b      	ldr	r3, [r3, #0]
  4004c4:	2b00      	cmp	r3, #0
  4004c6:	d007      	beq.n	4004d8 <pio_handler_process+0xb8>
		if (pio_capture_handler) {
  4004c8:	4b09      	ldr	r3, [pc, #36]	; (4004f0 <pio_handler_process+0xd0>)
  4004ca:	681b      	ldr	r3, [r3, #0]
  4004cc:	2b00      	cmp	r3, #0
  4004ce:	d003      	beq.n	4004d8 <pio_handler_process+0xb8>
			pio_capture_handler(p_pio);
  4004d0:	4b07      	ldr	r3, [pc, #28]	; (4004f0 <pio_handler_process+0xd0>)
  4004d2:	681b      	ldr	r3, [r3, #0]
  4004d4:	6878      	ldr	r0, [r7, #4]
  4004d6:	4798      	blx	r3
		}
	}
#endif
}
  4004d8:	bf00      	nop
  4004da:	3710      	adds	r7, #16
  4004dc:	46bd      	mov	sp, r7
  4004de:	bd80      	pop	{r7, pc}
  4004e0:	0040183f 	.word	0x0040183f
  4004e4:	00401855 	.word	0x00401855
  4004e8:	20001978 	.word	0x20001978
  4004ec:	20001c3c 	.word	0x20001c3c
  4004f0:	200019ec 	.word	0x200019ec

004004f4 <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  4004f4:	b580      	push	{r7, lr}
  4004f6:	b086      	sub	sp, #24
  4004f8:	af00      	add	r7, sp, #0
  4004fa:	60f8      	str	r0, [r7, #12]
  4004fc:	60b9      	str	r1, [r7, #8]
  4004fe:	607a      	str	r2, [r7, #4]
  400500:	603b      	str	r3, [r7, #0]
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  400502:	4b21      	ldr	r3, [pc, #132]	; (400588 <pio_handler_set+0x94>)
  400504:	681b      	ldr	r3, [r3, #0]
  400506:	2b06      	cmp	r3, #6
  400508:	d901      	bls.n	40050e <pio_handler_set+0x1a>
		return 1;
  40050a:	2301      	movs	r3, #1
  40050c:	e038      	b.n	400580 <pio_handler_set+0x8c>

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  40050e:	2300      	movs	r3, #0
  400510:	75fb      	strb	r3, [r7, #23]
  400512:	e011      	b.n	400538 <pio_handler_set+0x44>
		pSource = &(gs_interrupt_sources[i]);
  400514:	7dfb      	ldrb	r3, [r7, #23]
  400516:	011b      	lsls	r3, r3, #4
  400518:	4a1c      	ldr	r2, [pc, #112]	; (40058c <pio_handler_set+0x98>)
  40051a:	4413      	add	r3, r2
  40051c:	613b      	str	r3, [r7, #16]
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  40051e:	693b      	ldr	r3, [r7, #16]
  400520:	681a      	ldr	r2, [r3, #0]
  400522:	68bb      	ldr	r3, [r7, #8]
  400524:	429a      	cmp	r2, r3
  400526:	d104      	bne.n	400532 <pio_handler_set+0x3e>
  400528:	693b      	ldr	r3, [r7, #16]
  40052a:	685a      	ldr	r2, [r3, #4]
  40052c:	687b      	ldr	r3, [r7, #4]
  40052e:	429a      	cmp	r2, r3
  400530:	d008      	beq.n	400544 <pio_handler_set+0x50>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  400532:	7dfb      	ldrb	r3, [r7, #23]
  400534:	3301      	adds	r3, #1
  400536:	75fb      	strb	r3, [r7, #23]
  400538:	7dfa      	ldrb	r2, [r7, #23]
  40053a:	4b13      	ldr	r3, [pc, #76]	; (400588 <pio_handler_set+0x94>)
  40053c:	681b      	ldr	r3, [r3, #0]
  40053e:	429a      	cmp	r2, r3
  400540:	d9e8      	bls.n	400514 <pio_handler_set+0x20>
  400542:	e000      	b.n	400546 <pio_handler_set+0x52>
			break;
  400544:	bf00      	nop
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  400546:	693b      	ldr	r3, [r7, #16]
  400548:	68ba      	ldr	r2, [r7, #8]
  40054a:	601a      	str	r2, [r3, #0]
	pSource->mask = ul_mask;
  40054c:	693b      	ldr	r3, [r7, #16]
  40054e:	687a      	ldr	r2, [r7, #4]
  400550:	605a      	str	r2, [r3, #4]
	pSource->attr = ul_attr;
  400552:	693b      	ldr	r3, [r7, #16]
  400554:	683a      	ldr	r2, [r7, #0]
  400556:	609a      	str	r2, [r3, #8]
	pSource->handler = p_handler;
  400558:	693b      	ldr	r3, [r7, #16]
  40055a:	6a3a      	ldr	r2, [r7, #32]
  40055c:	60da      	str	r2, [r3, #12]
	if (i == gs_ul_nb_sources + 1) {
  40055e:	7dfa      	ldrb	r2, [r7, #23]
  400560:	4b09      	ldr	r3, [pc, #36]	; (400588 <pio_handler_set+0x94>)
  400562:	681b      	ldr	r3, [r3, #0]
  400564:	3301      	adds	r3, #1
  400566:	429a      	cmp	r2, r3
  400568:	d104      	bne.n	400574 <pio_handler_set+0x80>
		gs_ul_nb_sources++;
  40056a:	4b07      	ldr	r3, [pc, #28]	; (400588 <pio_handler_set+0x94>)
  40056c:	681b      	ldr	r3, [r3, #0]
  40056e:	3301      	adds	r3, #1
  400570:	4a05      	ldr	r2, [pc, #20]	; (400588 <pio_handler_set+0x94>)
  400572:	6013      	str	r3, [r2, #0]
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  400574:	683a      	ldr	r2, [r7, #0]
  400576:	6879      	ldr	r1, [r7, #4]
  400578:	68f8      	ldr	r0, [r7, #12]
  40057a:	4b05      	ldr	r3, [pc, #20]	; (400590 <pio_handler_set+0x9c>)
  40057c:	4798      	blx	r3

	return 0;
  40057e:	2300      	movs	r3, #0
}
  400580:	4618      	mov	r0, r3
  400582:	3718      	adds	r7, #24
  400584:	46bd      	mov	sp, r7
  400586:	bd80      	pop	{r7, pc}
  400588:	200019e8 	.word	0x200019e8
  40058c:	20001978 	.word	0x20001978
  400590:	004017a1 	.word	0x004017a1

00400594 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400594:	b580      	push	{r7, lr}
  400596:	af00      	add	r7, sp, #0
	pio_handler_process(PIOA, ID_PIOA);
  400598:	210b      	movs	r1, #11
  40059a:	4802      	ldr	r0, [pc, #8]	; (4005a4 <PIOA_Handler+0x10>)
  40059c:	4b02      	ldr	r3, [pc, #8]	; (4005a8 <PIOA_Handler+0x14>)
  40059e:	4798      	blx	r3
}
  4005a0:	bf00      	nop
  4005a2:	bd80      	pop	{r7, pc}
  4005a4:	400e0e00 	.word	0x400e0e00
  4005a8:	00400421 	.word	0x00400421

004005ac <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  4005ac:	b580      	push	{r7, lr}
  4005ae:	af00      	add	r7, sp, #0
    pio_handler_process(PIOB, ID_PIOB);
  4005b0:	210c      	movs	r1, #12
  4005b2:	4802      	ldr	r0, [pc, #8]	; (4005bc <PIOB_Handler+0x10>)
  4005b4:	4b02      	ldr	r3, [pc, #8]	; (4005c0 <PIOB_Handler+0x14>)
  4005b6:	4798      	blx	r3
}
  4005b8:	bf00      	nop
  4005ba:	bd80      	pop	{r7, pc}
  4005bc:	400e1000 	.word	0x400e1000
  4005c0:	00400421 	.word	0x00400421

004005c4 <usart_set_async_baudrate>:
 * \retval 1 Baud rate set point is out of range for the given input clock
 * frequency.
 */
uint32_t usart_set_async_baudrate(Usart *p_usart,
		uint32_t baudrate, uint32_t ul_mck)
{
  4005c4:	b480      	push	{r7}
  4005c6:	b089      	sub	sp, #36	; 0x24
  4005c8:	af00      	add	r7, sp, #0
  4005ca:	60f8      	str	r0, [r7, #12]
  4005cc:	60b9      	str	r1, [r7, #8]
  4005ce:	607a      	str	r2, [r7, #4]
	uint32_t cd_fp;
	uint32_t cd;
	uint32_t fp;

	/* Calculate the receiver sampling divide of baudrate clock. */
	if (ul_mck >= HIGH_FRQ_SAMPLE_DIV * baudrate) {
  4005d0:	68bb      	ldr	r3, [r7, #8]
  4005d2:	011a      	lsls	r2, r3, #4
  4005d4:	687b      	ldr	r3, [r7, #4]
  4005d6:	429a      	cmp	r2, r3
  4005d8:	d802      	bhi.n	4005e0 <usart_set_async_baudrate+0x1c>
		over = HIGH_FRQ_SAMPLE_DIV;
  4005da:	2310      	movs	r3, #16
  4005dc:	61fb      	str	r3, [r7, #28]
  4005de:	e001      	b.n	4005e4 <usart_set_async_baudrate+0x20>
	} else {
		over = LOW_FRQ_SAMPLE_DIV;
  4005e0:	2308      	movs	r3, #8
  4005e2:	61fb      	str	r3, [r7, #28]
	}

	/* Calculate clock divider according to the fraction calculated formula. */
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  4005e4:	687b      	ldr	r3, [r7, #4]
  4005e6:	00da      	lsls	r2, r3, #3
  4005e8:	69fb      	ldr	r3, [r7, #28]
  4005ea:	68b9      	ldr	r1, [r7, #8]
  4005ec:	fb01 f303 	mul.w	r3, r1, r3
  4005f0:	085b      	lsrs	r3, r3, #1
  4005f2:	441a      	add	r2, r3
  4005f4:	69fb      	ldr	r3, [r7, #28]
  4005f6:	68b9      	ldr	r1, [r7, #8]
  4005f8:	fb01 f303 	mul.w	r3, r1, r3
  4005fc:	fbb2 f3f3 	udiv	r3, r2, r3
  400600:	61bb      	str	r3, [r7, #24]
	cd = cd_fp >> 3;
  400602:	69bb      	ldr	r3, [r7, #24]
  400604:	08db      	lsrs	r3, r3, #3
  400606:	617b      	str	r3, [r7, #20]
	fp = cd_fp & 0x07;
  400608:	69bb      	ldr	r3, [r7, #24]
  40060a:	f003 0307 	and.w	r3, r3, #7
  40060e:	613b      	str	r3, [r7, #16]
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  400610:	697b      	ldr	r3, [r7, #20]
  400612:	2b00      	cmp	r3, #0
  400614:	d003      	beq.n	40061e <usart_set_async_baudrate+0x5a>
  400616:	697b      	ldr	r3, [r7, #20]
  400618:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
  40061c:	d301      	bcc.n	400622 <usart_set_async_baudrate+0x5e>
		return 1;
  40061e:	2301      	movs	r3, #1
  400620:	e00f      	b.n	400642 <usart_set_async_baudrate+0x7e>
	}

	/* Configure the OVER bit in MR register. */
	if (over == 8) {
  400622:	69fb      	ldr	r3, [r7, #28]
  400624:	2b08      	cmp	r3, #8
  400626:	d105      	bne.n	400634 <usart_set_async_baudrate+0x70>
		p_usart->US_MR |= US_MR_OVER;
  400628:	68fb      	ldr	r3, [r7, #12]
  40062a:	685b      	ldr	r3, [r3, #4]
  40062c:	f443 2200 	orr.w	r2, r3, #524288	; 0x80000
  400630:	68fb      	ldr	r3, [r7, #12]
  400632:	605a      	str	r2, [r3, #4]
	}

	/* Configure the baudrate generate register. */
	p_usart->US_BRGR = (cd << US_BRGR_CD_Pos) | (fp << US_BRGR_FP_Pos);
  400634:	693b      	ldr	r3, [r7, #16]
  400636:	041a      	lsls	r2, r3, #16
  400638:	697b      	ldr	r3, [r7, #20]
  40063a:	431a      	orrs	r2, r3
  40063c:	68fb      	ldr	r3, [r7, #12]
  40063e:	621a      	str	r2, [r3, #32]

	return 0;
  400640:	2300      	movs	r3, #0
}
  400642:	4618      	mov	r0, r3
  400644:	3724      	adds	r7, #36	; 0x24
  400646:	46bd      	mov	sp, r7
  400648:	bc80      	pop	{r7}
  40064a:	4770      	bx	lr

0040064c <usart_reset>:
 * \brief Reset the USART and disable TX and RX.
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_reset(Usart *p_usart)
{
  40064c:	b580      	push	{r7, lr}
  40064e:	b082      	sub	sp, #8
  400650:	af00      	add	r7, sp, #0
  400652:	6078      	str	r0, [r7, #4]
	/* Disable the Write Protect. */
	usart_disable_writeprotect(p_usart);
  400654:	6878      	ldr	r0, [r7, #4]
  400656:	4b0f      	ldr	r3, [pc, #60]	; (400694 <usart_reset+0x48>)
  400658:	4798      	blx	r3

	/* Reset registers that could cause unpredictable behavior after reset. */
	p_usart->US_MR = 0;
  40065a:	687b      	ldr	r3, [r7, #4]
  40065c:	2200      	movs	r2, #0
  40065e:	605a      	str	r2, [r3, #4]
	p_usart->US_RTOR = 0;
  400660:	687b      	ldr	r3, [r7, #4]
  400662:	2200      	movs	r2, #0
  400664:	625a      	str	r2, [r3, #36]	; 0x24
	p_usart->US_TTGR = 0;
  400666:	687b      	ldr	r3, [r7, #4]
  400668:	2200      	movs	r2, #0
  40066a:	629a      	str	r2, [r3, #40]	; 0x28

	/* Disable TX and RX. */
	usart_reset_tx(p_usart);
  40066c:	6878      	ldr	r0, [r7, #4]
  40066e:	4b0a      	ldr	r3, [pc, #40]	; (400698 <usart_reset+0x4c>)
  400670:	4798      	blx	r3
	usart_reset_rx(p_usart);
  400672:	6878      	ldr	r0, [r7, #4]
  400674:	4b09      	ldr	r3, [pc, #36]	; (40069c <usart_reset+0x50>)
  400676:	4798      	blx	r3
	/* Reset status bits. */
	usart_reset_status(p_usart);
  400678:	6878      	ldr	r0, [r7, #4]
  40067a:	4b09      	ldr	r3, [pc, #36]	; (4006a0 <usart_reset+0x54>)
  40067c:	4798      	blx	r3
	/* Turn off RTS and DTR if exist. */
	usart_drive_RTS_pin_high(p_usart);
  40067e:	6878      	ldr	r0, [r7, #4]
  400680:	4b08      	ldr	r3, [pc, #32]	; (4006a4 <usart_reset+0x58>)
  400682:	4798      	blx	r3
#if (SAM3S || SAM4S || SAM3U || SAM4L || SAM4E)
	usart_drive_DTR_pin_high(p_usart);
  400684:	6878      	ldr	r0, [r7, #4]
  400686:	4b08      	ldr	r3, [pc, #32]	; (4006a8 <usart_reset+0x5c>)
  400688:	4798      	blx	r3
#endif
}
  40068a:	bf00      	nop
  40068c:	3708      	adds	r7, #8
  40068e:	46bd      	mov	sp, r7
  400690:	bd80      	pop	{r7, pc}
  400692:	bf00      	nop
  400694:	004008fd 	.word	0x004008fd
  400698:	00400789 	.word	0x00400789
  40069c:	004007b9 	.word	0x004007b9
  4006a0:	0040081b 	.word	0x0040081b
  4006a4:	0040084f 	.word	0x0040084f
  4006a8:	00400835 	.word	0x00400835

004006ac <usart_init_rs232>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_init_rs232(Usart *p_usart,
		const sam_usart_opt_t *p_usart_opt, uint32_t ul_mck)
{
  4006ac:	b580      	push	{r7, lr}
  4006ae:	b084      	sub	sp, #16
  4006b0:	af00      	add	r7, sp, #0
  4006b2:	60f8      	str	r0, [r7, #12]
  4006b4:	60b9      	str	r1, [r7, #8]
  4006b6:	607a      	str	r2, [r7, #4]
	static uint32_t ul_reg_val;

	/* Reset the USART and shut down TX and RX. */
	usart_reset(p_usart);
  4006b8:	68f8      	ldr	r0, [r7, #12]
  4006ba:	4b1a      	ldr	r3, [pc, #104]	; (400724 <usart_init_rs232+0x78>)
  4006bc:	4798      	blx	r3

	ul_reg_val = 0;
  4006be:	4b1a      	ldr	r3, [pc, #104]	; (400728 <usart_init_rs232+0x7c>)
  4006c0:	2200      	movs	r2, #0
  4006c2:	601a      	str	r2, [r3, #0]
	/* Check whether the input values are legal. */
	if (!p_usart_opt || usart_set_async_baudrate(p_usart,
  4006c4:	68bb      	ldr	r3, [r7, #8]
  4006c6:	2b00      	cmp	r3, #0
  4006c8:	d009      	beq.n	4006de <usart_init_rs232+0x32>
  4006ca:	68bb      	ldr	r3, [r7, #8]
  4006cc:	681b      	ldr	r3, [r3, #0]
  4006ce:	687a      	ldr	r2, [r7, #4]
  4006d0:	4619      	mov	r1, r3
  4006d2:	68f8      	ldr	r0, [r7, #12]
  4006d4:	4b15      	ldr	r3, [pc, #84]	; (40072c <usart_init_rs232+0x80>)
  4006d6:	4798      	blx	r3
  4006d8:	4603      	mov	r3, r0
  4006da:	2b00      	cmp	r3, #0
  4006dc:	d001      	beq.n	4006e2 <usart_init_rs232+0x36>
			p_usart_opt->baudrate, ul_mck)) {
		return 1;
  4006de:	2301      	movs	r3, #1
  4006e0:	e01b      	b.n	40071a <usart_init_rs232+0x6e>
	}

	/* Configure the USART option. */
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  4006e2:	68bb      	ldr	r3, [r7, #8]
  4006e4:	685a      	ldr	r2, [r3, #4]
  4006e6:	68bb      	ldr	r3, [r7, #8]
  4006e8:	689b      	ldr	r3, [r3, #8]
  4006ea:	431a      	orrs	r2, r3
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
  4006ec:	68bb      	ldr	r3, [r7, #8]
  4006ee:	691b      	ldr	r3, [r3, #16]
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  4006f0:	431a      	orrs	r2, r3
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
  4006f2:	68bb      	ldr	r3, [r7, #8]
  4006f4:	68db      	ldr	r3, [r3, #12]
  4006f6:	431a      	orrs	r2, r3
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  4006f8:	4b0b      	ldr	r3, [pc, #44]	; (400728 <usart_init_rs232+0x7c>)
  4006fa:	681b      	ldr	r3, [r3, #0]
  4006fc:	4313      	orrs	r3, r2
  4006fe:	4a0a      	ldr	r2, [pc, #40]	; (400728 <usart_init_rs232+0x7c>)
  400700:	6013      	str	r3, [r2, #0]

	/* Configure the USART mode as normal mode. */
	ul_reg_val |= US_MR_USART_MODE_NORMAL;
  400702:	4b09      	ldr	r3, [pc, #36]	; (400728 <usart_init_rs232+0x7c>)
  400704:	681b      	ldr	r3, [r3, #0]
  400706:	4a08      	ldr	r2, [pc, #32]	; (400728 <usart_init_rs232+0x7c>)
  400708:	6013      	str	r3, [r2, #0]

	p_usart->US_MR |= ul_reg_val;
  40070a:	68fb      	ldr	r3, [r7, #12]
  40070c:	685a      	ldr	r2, [r3, #4]
  40070e:	4b06      	ldr	r3, [pc, #24]	; (400728 <usart_init_rs232+0x7c>)
  400710:	681b      	ldr	r3, [r3, #0]
  400712:	431a      	orrs	r2, r3
  400714:	68fb      	ldr	r3, [r7, #12]
  400716:	605a      	str	r2, [r3, #4]

	return 0;
  400718:	2300      	movs	r3, #0
}
  40071a:	4618      	mov	r0, r3
  40071c:	3710      	adds	r7, #16
  40071e:	46bd      	mov	sp, r7
  400720:	bd80      	pop	{r7, pc}
  400722:	bf00      	nop
  400724:	0040064d 	.word	0x0040064d
  400728:	200019f0 	.word	0x200019f0
  40072c:	004005c5 	.word	0x004005c5

00400730 <usart_init_hw_handshaking>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_init_hw_handshaking(Usart *p_usart,
		const sam_usart_opt_t *p_usart_opt, uint32_t ul_mck)
{
  400730:	b580      	push	{r7, lr}
  400732:	b084      	sub	sp, #16
  400734:	af00      	add	r7, sp, #0
  400736:	60f8      	str	r0, [r7, #12]
  400738:	60b9      	str	r1, [r7, #8]
  40073a:	607a      	str	r2, [r7, #4]
	/* Initialize the USART as standard RS232. */
	if (usart_init_rs232(p_usart, p_usart_opt, ul_mck)) {
  40073c:	687a      	ldr	r2, [r7, #4]
  40073e:	68b9      	ldr	r1, [r7, #8]
  400740:	68f8      	ldr	r0, [r7, #12]
  400742:	4b0a      	ldr	r3, [pc, #40]	; (40076c <usart_init_hw_handshaking+0x3c>)
  400744:	4798      	blx	r3
  400746:	4603      	mov	r3, r0
  400748:	2b00      	cmp	r3, #0
  40074a:	d001      	beq.n	400750 <usart_init_hw_handshaking+0x20>
		return 1;
  40074c:	2301      	movs	r3, #1
  40074e:	e008      	b.n	400762 <usart_init_hw_handshaking+0x32>
	}

	/* Set hardware handshaking mode. */
	p_usart->US_MR = (p_usart->US_MR & ~US_MR_USART_MODE_Msk) |
  400750:	68fb      	ldr	r3, [r7, #12]
  400752:	685b      	ldr	r3, [r3, #4]
  400754:	f023 030f 	bic.w	r3, r3, #15
  400758:	f043 0202 	orr.w	r2, r3, #2
  40075c:	68fb      	ldr	r3, [r7, #12]
  40075e:	605a      	str	r2, [r3, #4]
			US_MR_USART_MODE_HW_HANDSHAKING;

	return 0;
  400760:	2300      	movs	r3, #0
}
  400762:	4618      	mov	r0, r3
  400764:	3710      	adds	r7, #16
  400766:	46bd      	mov	sp, r7
  400768:	bd80      	pop	{r7, pc}
  40076a:	bf00      	nop
  40076c:	004006ad 	.word	0x004006ad

00400770 <usart_enable_tx>:
 * \brief Enable USART transmitter.
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_enable_tx(Usart *p_usart)
{
  400770:	b480      	push	{r7}
  400772:	b083      	sub	sp, #12
  400774:	af00      	add	r7, sp, #0
  400776:	6078      	str	r0, [r7, #4]
	p_usart->US_CR = US_CR_TXEN;
  400778:	687b      	ldr	r3, [r7, #4]
  40077a:	2240      	movs	r2, #64	; 0x40
  40077c:	601a      	str	r2, [r3, #0]
}
  40077e:	bf00      	nop
  400780:	370c      	adds	r7, #12
  400782:	46bd      	mov	sp, r7
  400784:	bc80      	pop	{r7}
  400786:	4770      	bx	lr

00400788 <usart_reset_tx>:
 * \brief Immediately stop and disable USART transmitter.
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_reset_tx(Usart *p_usart)
{
  400788:	b480      	push	{r7}
  40078a:	b083      	sub	sp, #12
  40078c:	af00      	add	r7, sp, #0
  40078e:	6078      	str	r0, [r7, #4]
	/* Reset transmitter */
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
  400790:	687b      	ldr	r3, [r7, #4]
  400792:	2288      	movs	r2, #136	; 0x88
  400794:	601a      	str	r2, [r3, #0]
}
  400796:	bf00      	nop
  400798:	370c      	adds	r7, #12
  40079a:	46bd      	mov	sp, r7
  40079c:	bc80      	pop	{r7}
  40079e:	4770      	bx	lr

004007a0 <usart_enable_rx>:
 * \brief Enable USART receiver.
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_enable_rx(Usart *p_usart)
{
  4007a0:	b480      	push	{r7}
  4007a2:	b083      	sub	sp, #12
  4007a4:	af00      	add	r7, sp, #0
  4007a6:	6078      	str	r0, [r7, #4]
	p_usart->US_CR = US_CR_RXEN;
  4007a8:	687b      	ldr	r3, [r7, #4]
  4007aa:	2210      	movs	r2, #16
  4007ac:	601a      	str	r2, [r3, #0]
}
  4007ae:	bf00      	nop
  4007b0:	370c      	adds	r7, #12
  4007b2:	46bd      	mov	sp, r7
  4007b4:	bc80      	pop	{r7}
  4007b6:	4770      	bx	lr

004007b8 <usart_reset_rx>:
 * \brief Immediately stop and disable USART receiver.
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_reset_rx(Usart *p_usart)
{
  4007b8:	b480      	push	{r7}
  4007ba:	b083      	sub	sp, #12
  4007bc:	af00      	add	r7, sp, #0
  4007be:	6078      	str	r0, [r7, #4]
	/* Reset Receiver */
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
  4007c0:	687b      	ldr	r3, [r7, #4]
  4007c2:	2224      	movs	r2, #36	; 0x24
  4007c4:	601a      	str	r2, [r3, #0]
}
  4007c6:	bf00      	nop
  4007c8:	370c      	adds	r7, #12
  4007ca:	46bd      	mov	sp, r7
  4007cc:	bc80      	pop	{r7}
  4007ce:	4770      	bx	lr

004007d0 <usart_enable_interrupt>:
 *
 * \param p_usart Pointer to a USART peripheral.
 * \param ul_sources Interrupt sources bit map.
 */
void usart_enable_interrupt(Usart *p_usart, uint32_t ul_sources)
{
  4007d0:	b480      	push	{r7}
  4007d2:	b083      	sub	sp, #12
  4007d4:	af00      	add	r7, sp, #0
  4007d6:	6078      	str	r0, [r7, #4]
  4007d8:	6039      	str	r1, [r7, #0]
	p_usart->US_IER = ul_sources;
  4007da:	687b      	ldr	r3, [r7, #4]
  4007dc:	683a      	ldr	r2, [r7, #0]
  4007de:	609a      	str	r2, [r3, #8]
}
  4007e0:	bf00      	nop
  4007e2:	370c      	adds	r7, #12
  4007e4:	46bd      	mov	sp, r7
  4007e6:	bc80      	pop	{r7}
  4007e8:	4770      	bx	lr

004007ea <usart_disable_interrupt>:
 *
 * \param p_usart Pointer to a USART peripheral.
 * \param ul_sources Interrupt sources bit map.
 */
void usart_disable_interrupt(Usart *p_usart, uint32_t ul_sources)
{
  4007ea:	b480      	push	{r7}
  4007ec:	b083      	sub	sp, #12
  4007ee:	af00      	add	r7, sp, #0
  4007f0:	6078      	str	r0, [r7, #4]
  4007f2:	6039      	str	r1, [r7, #0]
	p_usart->US_IDR = ul_sources;
  4007f4:	687b      	ldr	r3, [r7, #4]
  4007f6:	683a      	ldr	r2, [r7, #0]
  4007f8:	60da      	str	r2, [r3, #12]
}
  4007fa:	bf00      	nop
  4007fc:	370c      	adds	r7, #12
  4007fe:	46bd      	mov	sp, r7
  400800:	bc80      	pop	{r7}
  400802:	4770      	bx	lr

00400804 <usart_get_status>:
 * \param p_usart Pointer to a USART instance.
 *
 * \return The current USART status.
 */
uint32_t usart_get_status(Usart *p_usart)
{
  400804:	b480      	push	{r7}
  400806:	b083      	sub	sp, #12
  400808:	af00      	add	r7, sp, #0
  40080a:	6078      	str	r0, [r7, #4]
	return p_usart->US_CSR;
  40080c:	687b      	ldr	r3, [r7, #4]
  40080e:	695b      	ldr	r3, [r3, #20]
}
  400810:	4618      	mov	r0, r3
  400812:	370c      	adds	r7, #12
  400814:	46bd      	mov	sp, r7
  400816:	bc80      	pop	{r7}
  400818:	4770      	bx	lr

0040081a <usart_reset_status>:
 * \brief Reset status bits (PARE, OVER, MANERR, UNRE and PXBRK in US_CSR).
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_reset_status(Usart *p_usart)
{
  40081a:	b480      	push	{r7}
  40081c:	b083      	sub	sp, #12
  40081e:	af00      	add	r7, sp, #0
  400820:	6078      	str	r0, [r7, #4]
	p_usart->US_CR = US_CR_RSTSTA;
  400822:	687b      	ldr	r3, [r7, #4]
  400824:	f44f 7280 	mov.w	r2, #256	; 0x100
  400828:	601a      	str	r2, [r3, #0]
}
  40082a:	bf00      	nop
  40082c:	370c      	adds	r7, #12
  40082e:	46bd      	mov	sp, r7
  400830:	bc80      	pop	{r7}
  400832:	4770      	bx	lr

00400834 <usart_drive_DTR_pin_high>:
 * \brief Drive the pin DTR to 1.
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_drive_DTR_pin_high(Usart *p_usart)
{
  400834:	b480      	push	{r7}
  400836:	b083      	sub	sp, #12
  400838:	af00      	add	r7, sp, #0
  40083a:	6078      	str	r0, [r7, #4]
	p_usart->US_CR = US_CR_DTRDIS;
  40083c:	687b      	ldr	r3, [r7, #4]
  40083e:	f44f 3200 	mov.w	r2, #131072	; 0x20000
  400842:	601a      	str	r2, [r3, #0]
}
  400844:	bf00      	nop
  400846:	370c      	adds	r7, #12
  400848:	46bd      	mov	sp, r7
  40084a:	bc80      	pop	{r7}
  40084c:	4770      	bx	lr

0040084e <usart_drive_RTS_pin_high>:
 * \brief Drive the pin RTS to 1.
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_drive_RTS_pin_high(Usart *p_usart)
{
  40084e:	b480      	push	{r7}
  400850:	b083      	sub	sp, #12
  400852:	af00      	add	r7, sp, #0
  400854:	6078      	str	r0, [r7, #4]
	p_usart->US_CR = US_CR_RTSDIS;
  400856:	687b      	ldr	r3, [r7, #4]
  400858:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  40085c:	601a      	str	r2, [r3, #0]
}
  40085e:	bf00      	nop
  400860:	370c      	adds	r7, #12
  400862:	46bd      	mov	sp, r7
  400864:	bc80      	pop	{r7}
  400866:	4770      	bx	lr

00400868 <usart_putchar>:
 *
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_putchar(Usart *p_usart, uint32_t c)
{
  400868:	b480      	push	{r7}
  40086a:	b083      	sub	sp, #12
  40086c:	af00      	add	r7, sp, #0
  40086e:	6078      	str	r0, [r7, #4]
  400870:	6039      	str	r1, [r7, #0]
	while (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  400872:	bf00      	nop
  400874:	687b      	ldr	r3, [r7, #4]
  400876:	695b      	ldr	r3, [r3, #20]
  400878:	f003 0302 	and.w	r3, r3, #2
  40087c:	2b00      	cmp	r3, #0
  40087e:	d0f9      	beq.n	400874 <usart_putchar+0xc>
	}

	p_usart->US_THR = US_THR_TXCHR(c);
  400880:	683b      	ldr	r3, [r7, #0]
  400882:	f3c3 0208 	ubfx	r2, r3, #0, #9
  400886:	687b      	ldr	r3, [r7, #4]
  400888:	61da      	str	r2, [r3, #28]

	return 0;
  40088a:	2300      	movs	r3, #0
}
  40088c:	4618      	mov	r0, r3
  40088e:	370c      	adds	r7, #12
  400890:	46bd      	mov	sp, r7
  400892:	bc80      	pop	{r7}
  400894:	4770      	bx	lr
	...

00400898 <usart_write_line>:
 *
 * \param p_usart Pointer to a USART instance.
 * \param string Pointer to one-line string to be sent.
 */
void usart_write_line(Usart *p_usart, const char *string)
{
  400898:	b580      	push	{r7, lr}
  40089a:	b082      	sub	sp, #8
  40089c:	af00      	add	r7, sp, #0
  40089e:	6078      	str	r0, [r7, #4]
  4008a0:	6039      	str	r1, [r7, #0]
	while (*string != '\0') {
  4008a2:	e007      	b.n	4008b4 <usart_write_line+0x1c>
		usart_putchar(p_usart, *string++);
  4008a4:	683b      	ldr	r3, [r7, #0]
  4008a6:	1c5a      	adds	r2, r3, #1
  4008a8:	603a      	str	r2, [r7, #0]
  4008aa:	781b      	ldrb	r3, [r3, #0]
  4008ac:	4619      	mov	r1, r3
  4008ae:	6878      	ldr	r0, [r7, #4]
  4008b0:	4b04      	ldr	r3, [pc, #16]	; (4008c4 <usart_write_line+0x2c>)
  4008b2:	4798      	blx	r3
	while (*string != '\0') {
  4008b4:	683b      	ldr	r3, [r7, #0]
  4008b6:	781b      	ldrb	r3, [r3, #0]
  4008b8:	2b00      	cmp	r3, #0
  4008ba:	d1f3      	bne.n	4008a4 <usart_write_line+0xc>
	}
}
  4008bc:	bf00      	nop
  4008be:	3708      	adds	r7, #8
  4008c0:	46bd      	mov	sp, r7
  4008c2:	bd80      	pop	{r7, pc}
  4008c4:	00400869 	.word	0x00400869

004008c8 <usart_read>:
 *
 * \retval 0 on success.
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
  4008c8:	b480      	push	{r7}
  4008ca:	b083      	sub	sp, #12
  4008cc:	af00      	add	r7, sp, #0
  4008ce:	6078      	str	r0, [r7, #4]
  4008d0:	6039      	str	r1, [r7, #0]
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  4008d2:	687b      	ldr	r3, [r7, #4]
  4008d4:	695b      	ldr	r3, [r3, #20]
  4008d6:	f003 0301 	and.w	r3, r3, #1
  4008da:	2b00      	cmp	r3, #0
  4008dc:	d101      	bne.n	4008e2 <usart_read+0x1a>
		return 1;
  4008de:	2301      	movs	r3, #1
  4008e0:	e006      	b.n	4008f0 <usart_read+0x28>
	}

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  4008e2:	687b      	ldr	r3, [r7, #4]
  4008e4:	699b      	ldr	r3, [r3, #24]
  4008e6:	f3c3 0208 	ubfx	r2, r3, #0, #9
  4008ea:	683b      	ldr	r3, [r7, #0]
  4008ec:	601a      	str	r2, [r3, #0]

	return 0;
  4008ee:	2300      	movs	r3, #0
}
  4008f0:	4618      	mov	r0, r3
  4008f2:	370c      	adds	r7, #12
  4008f4:	46bd      	mov	sp, r7
  4008f6:	bc80      	pop	{r7}
  4008f8:	4770      	bx	lr
	...

004008fc <usart_disable_writeprotect>:
 * \brief Disable write protect of USART registers.
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_disable_writeprotect(Usart *p_usart)
{
  4008fc:	b480      	push	{r7}
  4008fe:	b083      	sub	sp, #12
  400900:	af00      	add	r7, sp, #0
  400902:	6078      	str	r0, [r7, #4]
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
  400904:	687b      	ldr	r3, [r7, #4]
  400906:	4a04      	ldr	r2, [pc, #16]	; (400918 <usart_disable_writeprotect+0x1c>)
  400908:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
}
  40090c:	bf00      	nop
  40090e:	370c      	adds	r7, #12
  400910:	46bd      	mov	sp, r7
  400912:	bc80      	pop	{r7}
  400914:	4770      	bx	lr
  400916:	bf00      	nop
  400918:	55534100 	.word	0x55534100

0040091c <NVIC_EnableIRQ>:
    The function enables a device-specific interrupt in the NVIC interrupt controller.

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  40091c:	b480      	push	{r7}
  40091e:	b083      	sub	sp, #12
  400920:	af00      	add	r7, sp, #0
  400922:	4603      	mov	r3, r0
  400924:	71fb      	strb	r3, [r7, #7]
/*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  400926:	4908      	ldr	r1, [pc, #32]	; (400948 <NVIC_EnableIRQ+0x2c>)
  400928:	f997 3007 	ldrsb.w	r3, [r7, #7]
  40092c:	095b      	lsrs	r3, r3, #5
  40092e:	79fa      	ldrb	r2, [r7, #7]
  400930:	f002 021f 	and.w	r2, r2, #31
  400934:	2001      	movs	r0, #1
  400936:	fa00 f202 	lsl.w	r2, r0, r2
  40093a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
  40093e:	bf00      	nop
  400940:	370c      	adds	r7, #12
  400942:	46bd      	mov	sp, r7
  400944:	bc80      	pop	{r7}
  400946:	4770      	bx	lr
  400948:	e000e100 	.word	0xe000e100

0040094c <osc_get_rate>:

	return 0;
}

static inline uint32_t osc_get_rate(uint32_t ul_id)
{
  40094c:	b480      	push	{r7}
  40094e:	b083      	sub	sp, #12
  400950:	af00      	add	r7, sp, #0
  400952:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
  400954:	687b      	ldr	r3, [r7, #4]
  400956:	2b07      	cmp	r3, #7
  400958:	d825      	bhi.n	4009a6 <osc_get_rate+0x5a>
  40095a:	a201      	add	r2, pc, #4	; (adr r2, 400960 <osc_get_rate+0x14>)
  40095c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  400960:	00400981 	.word	0x00400981
  400964:	00400987 	.word	0x00400987
  400968:	0040098d 	.word	0x0040098d
  40096c:	00400993 	.word	0x00400993
  400970:	00400997 	.word	0x00400997
  400974:	0040099b 	.word	0x0040099b
  400978:	0040099f 	.word	0x0040099f
  40097c:	004009a3 	.word	0x004009a3
	case OSC_SLCK_32K_RC:
		return OSC_SLCK_32K_RC_HZ;
  400980:	f44f 43fa 	mov.w	r3, #32000	; 0x7d00
  400984:	e010      	b.n	4009a8 <osc_get_rate+0x5c>

	case OSC_SLCK_32K_XTAL:
		return BOARD_FREQ_SLCK_XTAL;
  400986:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  40098a:	e00d      	b.n	4009a8 <osc_get_rate+0x5c>

	case OSC_SLCK_32K_BYPASS:
		return BOARD_FREQ_SLCK_BYPASS;
  40098c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  400990:	e00a      	b.n	4009a8 <osc_get_rate+0x5c>

	case OSC_MAINCK_4M_RC:
		return OSC_MAINCK_4M_RC_HZ;
  400992:	4b08      	ldr	r3, [pc, #32]	; (4009b4 <osc_get_rate+0x68>)
  400994:	e008      	b.n	4009a8 <osc_get_rate+0x5c>

	case OSC_MAINCK_8M_RC:
		return OSC_MAINCK_8M_RC_HZ;
  400996:	4b08      	ldr	r3, [pc, #32]	; (4009b8 <osc_get_rate+0x6c>)
  400998:	e006      	b.n	4009a8 <osc_get_rate+0x5c>

	case OSC_MAINCK_12M_RC:
		return OSC_MAINCK_12M_RC_HZ;
  40099a:	4b08      	ldr	r3, [pc, #32]	; (4009bc <osc_get_rate+0x70>)
  40099c:	e004      	b.n	4009a8 <osc_get_rate+0x5c>

	case OSC_MAINCK_XTAL:
		return BOARD_FREQ_MAINCK_XTAL;
  40099e:	4b07      	ldr	r3, [pc, #28]	; (4009bc <osc_get_rate+0x70>)
  4009a0:	e002      	b.n	4009a8 <osc_get_rate+0x5c>

	case OSC_MAINCK_BYPASS:
		return BOARD_FREQ_MAINCK_BYPASS;
  4009a2:	4b06      	ldr	r3, [pc, #24]	; (4009bc <osc_get_rate+0x70>)
  4009a4:	e000      	b.n	4009a8 <osc_get_rate+0x5c>
	}

	return 0;
  4009a6:	2300      	movs	r3, #0
}
  4009a8:	4618      	mov	r0, r3
  4009aa:	370c      	adds	r7, #12
  4009ac:	46bd      	mov	sp, r7
  4009ae:	bc80      	pop	{r7}
  4009b0:	4770      	bx	lr
  4009b2:	bf00      	nop
  4009b4:	003d0900 	.word	0x003d0900
  4009b8:	007a1200 	.word	0x007a1200
  4009bc:	00b71b00 	.word	0x00b71b00

004009c0 <sysclk_get_main_hz>:
 */
#if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
extern uint32_t sysclk_initialized;
#endif
static inline uint32_t sysclk_get_main_hz(void)
{
  4009c0:	b580      	push	{r7, lr}
  4009c2:	af00      	add	r7, sp, #0
	} else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_MAINCK_BYPASS) {
		return OSC_MAINCK_BYPASS_HZ;
	}
#ifdef CONFIG_PLL0_SOURCE
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		return pll_get_default_rate(0);
  4009c4:	2006      	movs	r0, #6
  4009c6:	4b04      	ldr	r3, [pc, #16]	; (4009d8 <sysclk_get_main_hz+0x18>)
  4009c8:	4798      	blx	r3
  4009ca:	4602      	mov	r2, r0
  4009cc:	4613      	mov	r3, r2
  4009ce:	009b      	lsls	r3, r3, #2
  4009d0:	4413      	add	r3, r2
  4009d2:	009b      	lsls	r3, r3, #2

	else {
		/* unhandled_case(CONFIG_SYSCLK_SOURCE); */
		return 0;
	}
}
  4009d4:	4618      	mov	r0, r3
  4009d6:	bd80      	pop	{r7, pc}
  4009d8:	0040094d 	.word	0x0040094d

004009dc <sysclk_get_cpu_hz>:
 * clocks.
 *
 * \return Frequency of the CPU clock, in Hz.
 */
static inline uint32_t sysclk_get_cpu_hz(void)
{
  4009dc:	b580      	push	{r7, lr}
  4009de:	af00      	add	r7, sp, #0
	/* CONFIG_SYSCLK_PRES is the register value for setting the expected */
	/* prescaler, not an immediate value. */
	return sysclk_get_main_hz() /
  4009e0:	4b02      	ldr	r3, [pc, #8]	; (4009ec <sysclk_get_cpu_hz+0x10>)
  4009e2:	4798      	blx	r3
  4009e4:	4603      	mov	r3, r0
  4009e6:	085b      	lsrs	r3, r3, #1
		((CONFIG_SYSCLK_PRES == SYSCLK_PRES_3) ? 3 :
			(1 << (CONFIG_SYSCLK_PRES >> PMC_MCKR_PRES_Pos)));
}
  4009e8:	4618      	mov	r0, r3
  4009ea:	bd80      	pop	{r7, pc}
  4009ec:	004009c1 	.word	0x004009c1

004009f0 <TC0_Handler>:
 */ 

#include "timer_interface.h"

void TC0_Handler(void)
{
  4009f0:	b580      	push	{r7, lr}
  4009f2:	b082      	sub	sp, #8
  4009f4:	af00      	add	r7, sp, #0
	uint32_t ul_status;

	/* Read TC0 status. */
	ul_status = tc_get_status(TC0, 0);
  4009f6:	2100      	movs	r1, #0
  4009f8:	4809      	ldr	r0, [pc, #36]	; (400a20 <TC0_Handler+0x30>)
  4009fa:	4b0a      	ldr	r3, [pc, #40]	; (400a24 <TC0_Handler+0x34>)
  4009fc:	4798      	blx	r3
  4009fe:	6078      	str	r0, [r7, #4]

	/* RC compare. */
	if ((ul_status & TC_SR_CPCS) == TC_SR_CPCS) {
  400a00:	687b      	ldr	r3, [r7, #4]
  400a02:	f003 0310 	and.w	r3, r3, #16
  400a06:	2b00      	cmp	r3, #0
  400a08:	d006      	beq.n	400a18 <TC0_Handler+0x28>
		counts++;
  400a0a:	4b07      	ldr	r3, [pc, #28]	; (400a28 <TC0_Handler+0x38>)
  400a0c:	781b      	ldrb	r3, [r3, #0]
  400a0e:	b2db      	uxtb	r3, r3
  400a10:	3301      	adds	r3, #1
  400a12:	b2da      	uxtb	r2, r3
  400a14:	4b04      	ldr	r3, [pc, #16]	; (400a28 <TC0_Handler+0x38>)
  400a16:	701a      	strb	r2, [r3, #0]
	}
}
  400a18:	bf00      	nop
  400a1a:	3708      	adds	r7, #8
  400a1c:	46bd      	mov	sp, r7
  400a1e:	bd80      	pop	{r7, pc}
  400a20:	40010000 	.word	0x40010000
  400a24:	004001db 	.word	0x004001db
  400a28:	20001c38 	.word	0x20001c38

00400a2c <configure_tc>:

void configure_tc(void)
{
  400a2c:	b590      	push	{r4, r7, lr}
  400a2e:	b087      	sub	sp, #28
  400a30:	af02      	add	r7, sp, #8
	uint32_t ul_div;
	uint32_t ul_tcclks;
	uint32_t ul_sysclk;

	/* Get system clock. */
	ul_sysclk = sysclk_get_cpu_hz();
  400a32:	4b16      	ldr	r3, [pc, #88]	; (400a8c <configure_tc+0x60>)
  400a34:	4798      	blx	r3
  400a36:	60f8      	str	r0, [r7, #12]

	/* Configure PMC. */
	pmc_enable_periph_clk(ID_TC0);
  400a38:	2017      	movs	r0, #23
  400a3a:	4b15      	ldr	r3, [pc, #84]	; (400a90 <configure_tc+0x64>)
  400a3c:	4798      	blx	r3

	/** Configure TC for a 1Hz frequency and trigger on RC compare. */
	tc_find_mck_divisor(TC_FREQ, ul_sysclk, &ul_div, &ul_tcclks, ul_sysclk);
  400a3e:	1d39      	adds	r1, r7, #4
  400a40:	f107 0208 	add.w	r2, r7, #8
  400a44:	68fb      	ldr	r3, [r7, #12]
  400a46:	9300      	str	r3, [sp, #0]
  400a48:	460b      	mov	r3, r1
  400a4a:	68f9      	ldr	r1, [r7, #12]
  400a4c:	2001      	movs	r0, #1
  400a4e:	4c11      	ldr	r4, [pc, #68]	; (400a94 <configure_tc+0x68>)
  400a50:	47a0      	blx	r4
	tc_init(TC0, 0, ul_tcclks | TC_CMR_CPCTRG);
  400a52:	687b      	ldr	r3, [r7, #4]
  400a54:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  400a58:	461a      	mov	r2, r3
  400a5a:	2100      	movs	r1, #0
  400a5c:	480e      	ldr	r0, [pc, #56]	; (400a98 <configure_tc+0x6c>)
  400a5e:	4b0f      	ldr	r3, [pc, #60]	; (400a9c <configure_tc+0x70>)
  400a60:	4798      	blx	r3
	tc_write_rc(TC0, 0, (ul_sysclk / ul_div) / TC_FREQ);
  400a62:	68bb      	ldr	r3, [r7, #8]
  400a64:	68fa      	ldr	r2, [r7, #12]
  400a66:	fbb2 f3f3 	udiv	r3, r2, r3
  400a6a:	461a      	mov	r2, r3
  400a6c:	2100      	movs	r1, #0
  400a6e:	480a      	ldr	r0, [pc, #40]	; (400a98 <configure_tc+0x6c>)
  400a70:	4b0b      	ldr	r3, [pc, #44]	; (400aa0 <configure_tc+0x74>)
  400a72:	4798      	blx	r3

	/* Configure and enable interrupt on RC compare. */
	NVIC_EnableIRQ((IRQn_Type) ID_TC0);
  400a74:	2017      	movs	r0, #23
  400a76:	4b0b      	ldr	r3, [pc, #44]	; (400aa4 <configure_tc+0x78>)
  400a78:	4798      	blx	r3
	tc_enable_interrupt(TC0, 0, TC_IER_CPCS);
  400a7a:	2210      	movs	r2, #16
  400a7c:	2100      	movs	r1, #0
  400a7e:	4806      	ldr	r0, [pc, #24]	; (400a98 <configure_tc+0x6c>)
  400a80:	4b09      	ldr	r3, [pc, #36]	; (400aa8 <configure_tc+0x7c>)
  400a82:	4798      	blx	r3
  400a84:	bf00      	nop
  400a86:	3714      	adds	r7, #20
  400a88:	46bd      	mov	sp, r7
  400a8a:	bd90      	pop	{r4, r7, pc}
  400a8c:	004009dd 	.word	0x004009dd
  400a90:	00401c8d 	.word	0x00401c8d
  400a94:	004001fd 	.word	0x004001fd
  400a98:	40010000 	.word	0x40010000
  400a9c:	00400139 	.word	0x00400139
  400aa0:	00400191 	.word	0x00400191
  400aa4:	0040091d 	.word	0x0040091d
  400aa8:	004001b5 	.word	0x004001b5

00400aac <NVIC_EnableIRQ>:
{
  400aac:	b480      	push	{r7}
  400aae:	b083      	sub	sp, #12
  400ab0:	af00      	add	r7, sp, #0
  400ab2:	4603      	mov	r3, r0
  400ab4:	71fb      	strb	r3, [r7, #7]
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  400ab6:	4908      	ldr	r1, [pc, #32]	; (400ad8 <NVIC_EnableIRQ+0x2c>)
  400ab8:	f997 3007 	ldrsb.w	r3, [r7, #7]
  400abc:	095b      	lsrs	r3, r3, #5
  400abe:	79fa      	ldrb	r2, [r7, #7]
  400ac0:	f002 021f 	and.w	r2, r2, #31
  400ac4:	2001      	movs	r0, #1
  400ac6:	fa00 f202 	lsl.w	r2, r0, r2
  400aca:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
  400ace:	bf00      	nop
  400ad0:	370c      	adds	r7, #12
  400ad2:	46bd      	mov	sp, r7
  400ad4:	bc80      	pop	{r7}
  400ad6:	4770      	bx	lr
  400ad8:	e000e100 	.word	0xe000e100

00400adc <osc_get_rate>:
{
  400adc:	b480      	push	{r7}
  400ade:	b083      	sub	sp, #12
  400ae0:	af00      	add	r7, sp, #0
  400ae2:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
  400ae4:	687b      	ldr	r3, [r7, #4]
  400ae6:	2b07      	cmp	r3, #7
  400ae8:	d825      	bhi.n	400b36 <osc_get_rate+0x5a>
  400aea:	a201      	add	r2, pc, #4	; (adr r2, 400af0 <osc_get_rate+0x14>)
  400aec:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  400af0:	00400b11 	.word	0x00400b11
  400af4:	00400b17 	.word	0x00400b17
  400af8:	00400b1d 	.word	0x00400b1d
  400afc:	00400b23 	.word	0x00400b23
  400b00:	00400b27 	.word	0x00400b27
  400b04:	00400b2b 	.word	0x00400b2b
  400b08:	00400b2f 	.word	0x00400b2f
  400b0c:	00400b33 	.word	0x00400b33
		return OSC_SLCK_32K_RC_HZ;
  400b10:	f44f 43fa 	mov.w	r3, #32000	; 0x7d00
  400b14:	e010      	b.n	400b38 <osc_get_rate+0x5c>
		return BOARD_FREQ_SLCK_XTAL;
  400b16:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  400b1a:	e00d      	b.n	400b38 <osc_get_rate+0x5c>
		return BOARD_FREQ_SLCK_BYPASS;
  400b1c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  400b20:	e00a      	b.n	400b38 <osc_get_rate+0x5c>
		return OSC_MAINCK_4M_RC_HZ;
  400b22:	4b08      	ldr	r3, [pc, #32]	; (400b44 <osc_get_rate+0x68>)
  400b24:	e008      	b.n	400b38 <osc_get_rate+0x5c>
		return OSC_MAINCK_8M_RC_HZ;
  400b26:	4b08      	ldr	r3, [pc, #32]	; (400b48 <osc_get_rate+0x6c>)
  400b28:	e006      	b.n	400b38 <osc_get_rate+0x5c>
		return OSC_MAINCK_12M_RC_HZ;
  400b2a:	4b08      	ldr	r3, [pc, #32]	; (400b4c <osc_get_rate+0x70>)
  400b2c:	e004      	b.n	400b38 <osc_get_rate+0x5c>
		return BOARD_FREQ_MAINCK_XTAL;
  400b2e:	4b07      	ldr	r3, [pc, #28]	; (400b4c <osc_get_rate+0x70>)
  400b30:	e002      	b.n	400b38 <osc_get_rate+0x5c>
		return BOARD_FREQ_MAINCK_BYPASS;
  400b32:	4b06      	ldr	r3, [pc, #24]	; (400b4c <osc_get_rate+0x70>)
  400b34:	e000      	b.n	400b38 <osc_get_rate+0x5c>
	return 0;
  400b36:	2300      	movs	r3, #0
}
  400b38:	4618      	mov	r0, r3
  400b3a:	370c      	adds	r7, #12
  400b3c:	46bd      	mov	sp, r7
  400b3e:	bc80      	pop	{r7}
  400b40:	4770      	bx	lr
  400b42:	bf00      	nop
  400b44:	003d0900 	.word	0x003d0900
  400b48:	007a1200 	.word	0x007a1200
  400b4c:	00b71b00 	.word	0x00b71b00

00400b50 <sysclk_get_main_hz>:
{
  400b50:	b580      	push	{r7, lr}
  400b52:	af00      	add	r7, sp, #0
		return pll_get_default_rate(0);
  400b54:	2006      	movs	r0, #6
  400b56:	4b04      	ldr	r3, [pc, #16]	; (400b68 <sysclk_get_main_hz+0x18>)
  400b58:	4798      	blx	r3
  400b5a:	4602      	mov	r2, r0
  400b5c:	4613      	mov	r3, r2
  400b5e:	009b      	lsls	r3, r3, #2
  400b60:	4413      	add	r3, r2
  400b62:	009b      	lsls	r3, r3, #2
}
  400b64:	4618      	mov	r0, r3
  400b66:	bd80      	pop	{r7, pc}
  400b68:	00400add 	.word	0x00400add

00400b6c <sysclk_get_cpu_hz>:
{
  400b6c:	b580      	push	{r7, lr}
  400b6e:	af00      	add	r7, sp, #0
	return sysclk_get_main_hz() /
  400b70:	4b02      	ldr	r3, [pc, #8]	; (400b7c <sysclk_get_cpu_hz+0x10>)
  400b72:	4798      	blx	r3
  400b74:	4603      	mov	r3, r0
  400b76:	085b      	lsrs	r3, r3, #1
}
  400b78:	4618      	mov	r0, r3
  400b7a:	bd80      	pop	{r7, pc}
  400b7c:	00400b51 	.word	0x00400b51

00400b80 <sysclk_get_peripheral_hz>:
 * \brief Retrieves the current rate in Hz of the peripheral clocks.
 *
 * \return Frequency of the peripheral clocks, in Hz.
 */
static inline uint32_t sysclk_get_peripheral_hz(void)
{
  400b80:	b580      	push	{r7, lr}
  400b82:	af00      	add	r7, sp, #0
	/* CONFIG_SYSCLK_PRES is the register value for setting the expected */
	/* prescaler, not an immediate value. */
	return sysclk_get_main_hz() /
  400b84:	4b02      	ldr	r3, [pc, #8]	; (400b90 <sysclk_get_peripheral_hz+0x10>)
  400b86:	4798      	blx	r3
  400b88:	4603      	mov	r3, r0
  400b8a:	085b      	lsrs	r3, r3, #1
		((CONFIG_SYSCLK_PRES == SYSCLK_PRES_3) ? 3 :
			(1 << (CONFIG_SYSCLK_PRES >> PMC_MCKR_PRES_Pos)));
}
  400b8c:	4618      	mov	r0, r3
  400b8e:	bd80      	pop	{r7, pc}
  400b90:	00400b51 	.word	0x00400b51

00400b94 <sysclk_enable_peripheral_clock>:
 * \brief Enable a peripheral's clock.
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
  400b94:	b580      	push	{r7, lr}
  400b96:	b082      	sub	sp, #8
  400b98:	af00      	add	r7, sp, #0
  400b9a:	6078      	str	r0, [r7, #4]
	pmc_enable_periph_clk(ul_id);
  400b9c:	6878      	ldr	r0, [r7, #4]
  400b9e:	4b03      	ldr	r3, [pc, #12]	; (400bac <sysclk_enable_peripheral_clock+0x18>)
  400ba0:	4798      	blx	r3
}
  400ba2:	bf00      	nop
  400ba4:	3708      	adds	r7, #8
  400ba6:	46bd      	mov	sp, r7
  400ba8:	bd80      	pop	{r7, pc}
  400baa:	bf00      	nop
  400bac:	00401c8d 	.word	0x00401c8d

00400bb0 <ioport_toggle_pin_level>:
 * an output.
 *
 * \param pin IOPORT pin to toggle
 */
static inline void ioport_toggle_pin_level(ioport_pin_t pin)
{
  400bb0:	b480      	push	{r7}
  400bb2:	b08b      	sub	sp, #44	; 0x2c
  400bb4:	af00      	add	r7, sp, #0
  400bb6:	6078      	str	r0, [r7, #4]
  400bb8:	687b      	ldr	r3, [r7, #4]
  400bba:	627b      	str	r3, [r7, #36]	; 0x24
  400bbc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  400bbe:	623b      	str	r3, [r7, #32]
  400bc0:	6a3b      	ldr	r3, [r7, #32]
  400bc2:	61fb      	str	r3, [r7, #28]
typedef uint32_t ioport_port_t;
typedef uint32_t ioport_port_mask_t;

__always_inline static ioport_port_t arch_ioport_pin_to_port_id(ioport_pin_t pin)
{
	return pin >> 5;
  400bc4:	69fb      	ldr	r3, [r7, #28]
  400bc6:	095b      	lsrs	r3, r3, #5
  400bc8:	61bb      	str	r3, [r7, #24]
	} else {
		return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
		       (IOPORT_PIO_OFFSET * port));
	}
#else
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
  400bca:	69bb      	ldr	r3, [r7, #24]
  400bcc:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  400bd0:	f203 7307 	addw	r3, r3, #1799	; 0x707
  400bd4:	025b      	lsls	r3, r3, #9
	return arch_ioport_port_to_base(port)->PIO_PDSR & mask;
}

__always_inline static void arch_ioport_toggle_pin_level(ioport_pin_t pin)
{
	Pio *port = arch_ioport_pin_to_base(pin);
  400bd6:	617b      	str	r3, [r7, #20]
  400bd8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  400bda:	613b      	str	r3, [r7, #16]
	return 1U << (pin & 0x1F);
  400bdc:	693b      	ldr	r3, [r7, #16]
  400bde:	f003 031f 	and.w	r3, r3, #31
  400be2:	2201      	movs	r2, #1
  400be4:	fa02 f303 	lsl.w	r3, r2, r3
	ioport_port_mask_t mask = arch_ioport_pin_to_mask(pin);
  400be8:	60fb      	str	r3, [r7, #12]

	if (port->PIO_PDSR & arch_ioport_pin_to_mask(pin)) {
  400bea:	697b      	ldr	r3, [r7, #20]
  400bec:	6bda      	ldr	r2, [r3, #60]	; 0x3c
  400bee:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  400bf0:	60bb      	str	r3, [r7, #8]
	return 1U << (pin & 0x1F);
  400bf2:	68bb      	ldr	r3, [r7, #8]
  400bf4:	f003 031f 	and.w	r3, r3, #31
  400bf8:	2101      	movs	r1, #1
  400bfa:	fa01 f303 	lsl.w	r3, r1, r3
	if (port->PIO_PDSR & arch_ioport_pin_to_mask(pin)) {
  400bfe:	4013      	ands	r3, r2
  400c00:	2b00      	cmp	r3, #0
  400c02:	d003      	beq.n	400c0c <ioport_toggle_pin_level+0x5c>
		port->PIO_CODR = mask;
  400c04:	697b      	ldr	r3, [r7, #20]
  400c06:	68fa      	ldr	r2, [r7, #12]
  400c08:	635a      	str	r2, [r3, #52]	; 0x34
	arch_ioport_toggle_pin_level(pin);
}
  400c0a:	e002      	b.n	400c12 <ioport_toggle_pin_level+0x62>
	} else {
		port->PIO_SODR = mask;
  400c0c:	697b      	ldr	r3, [r7, #20]
  400c0e:	68fa      	ldr	r2, [r7, #12]
  400c10:	631a      	str	r2, [r3, #48]	; 0x30
  400c12:	bf00      	nop
  400c14:	372c      	adds	r7, #44	; 0x2c
  400c16:	46bd      	mov	sp, r7
  400c18:	bc80      	pop	{r7}
  400c1a:	4770      	bx	lr

00400c1c <USART0_Handler>:
 * Increment the number of bytes received in the current second and start
 * another transfer if the desired bps has not been met yet.
 *
 */
void handler_usart(void)
{	
  400c1c:	b580      	push	{r7, lr}
  400c1e:	b082      	sub	sp, #8
  400c20:	af00      	add	r7, sp, #0
	uint8_t recieved_char_flag = 0;
  400c22:	2300      	movs	r3, #0
  400c24:	71fb      	strb	r3, [r7, #7]
	uint32_t ul_status;
	
	usart_disable_interrupt(BOARD_USART, US_IER_RXRDY);
  400c26:	2101      	movs	r1, #1
  400c28:	4815      	ldr	r0, [pc, #84]	; (400c80 <USART0_Handler+0x64>)
  400c2a:	4b16      	ldr	r3, [pc, #88]	; (400c84 <USART0_Handler+0x68>)
  400c2c:	4798      	blx	r3
	
	/* Read USART status. */
	ul_status = usart_get_status(BOARD_USART);
  400c2e:	4814      	ldr	r0, [pc, #80]	; (400c80 <USART0_Handler+0x64>)
  400c30:	4b15      	ldr	r3, [pc, #84]	; (400c88 <USART0_Handler+0x6c>)
  400c32:	4798      	blx	r3
  400c34:	6038      	str	r0, [r7, #0]

	/* Receive buffer is full. */
	recieved_char_flag = usart_read(BOARD_USART, &received_byte_wifi);
  400c36:	4915      	ldr	r1, [pc, #84]	; (400c8c <USART0_Handler+0x70>)
  400c38:	4811      	ldr	r0, [pc, #68]	; (400c80 <USART0_Handler+0x64>)
  400c3a:	4b15      	ldr	r3, [pc, #84]	; (400c90 <USART0_Handler+0x74>)
  400c3c:	4798      	blx	r3
  400c3e:	4603      	mov	r3, r0
  400c40:	71fb      	strb	r3, [r7, #7]
	// he doesn't have this line?
	
	if (ul_status & US_CSR_RXRDY) {
  400c42:	683b      	ldr	r3, [r7, #0]
  400c44:	f003 0301 	and.w	r3, r3, #1
  400c48:	2b00      	cmp	r3, #0
  400c4a:	d011      	beq.n	400c70 <USART0_Handler+0x54>
		recieved_char_flag = usart_read(BOARD_USART, &received_byte_wifi);
  400c4c:	490f      	ldr	r1, [pc, #60]	; (400c8c <USART0_Handler+0x70>)
  400c4e:	480c      	ldr	r0, [pc, #48]	; (400c80 <USART0_Handler+0x64>)
  400c50:	4b0f      	ldr	r3, [pc, #60]	; (400c90 <USART0_Handler+0x74>)
  400c52:	4798      	blx	r3
  400c54:	4603      	mov	r3, r0
  400c56:	71fb      	strb	r3, [r7, #7]
		input_buffer[buffer_index] = (uint8_t) received_byte_wifi;
  400c58:	4b0e      	ldr	r3, [pc, #56]	; (400c94 <USART0_Handler+0x78>)
  400c5a:	681b      	ldr	r3, [r3, #0]
  400c5c:	4a0b      	ldr	r2, [pc, #44]	; (400c8c <USART0_Handler+0x70>)
  400c5e:	6812      	ldr	r2, [r2, #0]
  400c60:	b2d1      	uxtb	r1, r2
  400c62:	4a0d      	ldr	r2, [pc, #52]	; (400c98 <USART0_Handler+0x7c>)
  400c64:	54d1      	strb	r1, [r2, r3]
		buffer_index++;
  400c66:	4b0b      	ldr	r3, [pc, #44]	; (400c94 <USART0_Handler+0x78>)
  400c68:	681b      	ldr	r3, [r3, #0]
  400c6a:	3301      	adds	r3, #1
  400c6c:	4a09      	ldr	r2, [pc, #36]	; (400c94 <USART0_Handler+0x78>)
  400c6e:	6013      	str	r3, [r2, #0]
	}	
	
	usart_enable_interrupt(BOARD_USART, US_IER_RXRDY);
  400c70:	2101      	movs	r1, #1
  400c72:	4803      	ldr	r0, [pc, #12]	; (400c80 <USART0_Handler+0x64>)
  400c74:	4b09      	ldr	r3, [pc, #36]	; (400c9c <USART0_Handler+0x80>)
  400c76:	4798      	blx	r3
}
  400c78:	bf00      	nop
  400c7a:	3708      	adds	r7, #8
  400c7c:	46bd      	mov	sp, r7
  400c7e:	bd80      	pop	{r7, pc}
  400c80:	40024000 	.word	0x40024000
  400c84:	004007eb 	.word	0x004007eb
  400c88:	00400805 	.word	0x00400805
  400c8c:	20001bf8 	.word	0x20001bf8
  400c90:	004008c9 	.word	0x004008c9
  400c94:	20001be8 	.word	0x20001be8
  400c98:	200019f4 	.word	0x200019f4
  400c9c:	004007d1 	.word	0x004007d1

00400ca0 <configure_usart>:

/**
 *  Configure board USART communication with PC or other terminal.
 */
void configure_usart(void)
{
  400ca0:	b5b0      	push	{r4, r5, r7, lr}
  400ca2:	b086      	sub	sp, #24
  400ca4:	af00      	add	r7, sp, #0
	static uint32_t ul_sysclk;
	const sam_usart_opt_t usart_console_settings = {
  400ca6:	4b15      	ldr	r3, [pc, #84]	; (400cfc <configure_usart+0x5c>)
  400ca8:	463c      	mov	r4, r7
  400caa:	461d      	mov	r5, r3
  400cac:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  400cae:	c40f      	stmia	r4!, {r0, r1, r2, r3}
  400cb0:	e895 0003 	ldmia.w	r5, {r0, r1}
  400cb4:	e884 0003 	stmia.w	r4, {r0, r1}
		/* This field is only used in IrDA mode. */
		0
	};

	/* Get peripheral clock. */
	ul_sysclk = sysclk_get_peripheral_hz();
  400cb8:	4b11      	ldr	r3, [pc, #68]	; (400d00 <configure_usart+0x60>)
  400cba:	4798      	blx	r3
  400cbc:	4602      	mov	r2, r0
  400cbe:	4b11      	ldr	r3, [pc, #68]	; (400d04 <configure_usart+0x64>)
  400cc0:	601a      	str	r2, [r3, #0]

	/* Enable peripheral clock. */
	sysclk_enable_peripheral_clock(BOARD_ID_USART);
  400cc2:	200e      	movs	r0, #14
  400cc4:	4b10      	ldr	r3, [pc, #64]	; (400d08 <configure_usart+0x68>)
  400cc6:	4798      	blx	r3

	/* Configure USART. */
	usart_init_hw_handshaking(BOARD_USART, &usart_console_settings, ul_sysclk);
  400cc8:	4b0e      	ldr	r3, [pc, #56]	; (400d04 <configure_usart+0x64>)
  400cca:	681a      	ldr	r2, [r3, #0]
  400ccc:	463b      	mov	r3, r7
  400cce:	4619      	mov	r1, r3
  400cd0:	480e      	ldr	r0, [pc, #56]	; (400d0c <configure_usart+0x6c>)
  400cd2:	4b0f      	ldr	r3, [pc, #60]	; (400d10 <configure_usart+0x70>)
  400cd4:	4798      	blx	r3

	/* Disable all the interrupts. */
	usart_disable_interrupt(BOARD_USART, ALL_INTERRUPT_MASK);
  400cd6:	f04f 31ff 	mov.w	r1, #4294967295
  400cda:	480c      	ldr	r0, [pc, #48]	; (400d0c <configure_usart+0x6c>)
  400cdc:	4b0d      	ldr	r3, [pc, #52]	; (400d14 <configure_usart+0x74>)
  400cde:	4798      	blx	r3
	
	/* Enable TX & RX function. */
	usart_enable_tx(BOARD_USART);
  400ce0:	480a      	ldr	r0, [pc, #40]	; (400d0c <configure_usart+0x6c>)
  400ce2:	4b0d      	ldr	r3, [pc, #52]	; (400d18 <configure_usart+0x78>)
  400ce4:	4798      	blx	r3
	usart_enable_rx(BOARD_USART);
  400ce6:	4809      	ldr	r0, [pc, #36]	; (400d0c <configure_usart+0x6c>)
  400ce8:	4b0c      	ldr	r3, [pc, #48]	; (400d1c <configure_usart+0x7c>)
  400cea:	4798      	blx	r3

	/* Configure and enable interrupt of USART. */
	NVIC_EnableIRQ(USART_IRQn);
  400cec:	200e      	movs	r0, #14
  400cee:	4b0c      	ldr	r3, [pc, #48]	; (400d20 <configure_usart+0x80>)
  400cf0:	4798      	blx	r3
	
	//usart_enable_interrupt(BOARD_USART, US_IER_RXRDY);
}
  400cf2:	bf00      	nop
  400cf4:	3718      	adds	r7, #24
  400cf6:	46bd      	mov	sp, r7
  400cf8:	bdb0      	pop	{r4, r5, r7, pc}
  400cfa:	bf00      	nop
  400cfc:	0040884c 	.word	0x0040884c
  400d00:	00400b81 	.word	0x00400b81
  400d04:	20001bfc 	.word	0x20001bfc
  400d08:	00400b95 	.word	0x00400b95
  400d0c:	40024000 	.word	0x40024000
  400d10:	00400731 	.word	0x00400731
  400d14:	004007eb 	.word	0x004007eb
  400d18:	00400771 	.word	0x00400771
  400d1c:	004007a1 	.word	0x004007a1
  400d20:	00400aad 	.word	0x00400aad

00400d24 <handler_command_complete>:

/**
 *  \brief Command response handler for wifi.
 */
void handler_command_complete(uint32_t ul_id, uint32_t ul_mask) {
  400d24:	b580      	push	{r7, lr}
  400d26:	b082      	sub	sp, #8
  400d28:	af00      	add	r7, sp, #0
  400d2a:	6078      	str	r0, [r7, #4]
  400d2c:	6039      	str	r1, [r7, #0]
	unused(ul_id);
	unused(ul_mask);
	ioport_toggle_pin_level(LED_PIN);
  400d2e:	2013      	movs	r0, #19
  400d30:	4b08      	ldr	r3, [pc, #32]	; (400d54 <handler_command_complete+0x30>)
  400d32:	4798      	blx	r3
	
	input_buffer[buffer_index] = 0;
  400d34:	4b08      	ldr	r3, [pc, #32]	; (400d58 <handler_command_complete+0x34>)
  400d36:	681b      	ldr	r3, [r3, #0]
  400d38:	4a08      	ldr	r2, [pc, #32]	; (400d5c <handler_command_complete+0x38>)
  400d3a:	2100      	movs	r1, #0
  400d3c:	54d1      	strb	r1, [r2, r3]
	data_recieved = 1;
  400d3e:	4b08      	ldr	r3, [pc, #32]	; (400d60 <handler_command_complete+0x3c>)
  400d40:	2201      	movs	r2, #1
  400d42:	601a      	str	r2, [r3, #0]
	buffer_index = 0;
  400d44:	4b04      	ldr	r3, [pc, #16]	; (400d58 <handler_command_complete+0x34>)
  400d46:	2200      	movs	r2, #0
  400d48:	601a      	str	r2, [r3, #0]
}
  400d4a:	bf00      	nop
  400d4c:	3708      	adds	r7, #8
  400d4e:	46bd      	mov	sp, r7
  400d50:	bd80      	pop	{r7, pc}
  400d52:	bf00      	nop
  400d54:	00400bb1 	.word	0x00400bb1
  400d58:	20001be8 	.word	0x20001be8
  400d5c:	200019f4 	.word	0x200019f4
  400d60:	20001bf0 	.word	0x20001bf0

00400d64 <configure_command_complete>:

/**
 *  \brief Configures communication pin for wifi.
 */
void configure_command_complete(void){
  400d64:	b590      	push	{r4, r7, lr}
  400d66:	b083      	sub	sp, #12
  400d68:	af02      	add	r7, sp, #8
	// we set as the wifi command pin
	// we should be able to do this
	
	//configure button from the button project?
	
	pmc_enable_periph_clk(WIFI_COMM_ID); // put these definitions in wifi.h
  400d6a:	200c      	movs	r0, #12
  400d6c:	4b0e      	ldr	r3, [pc, #56]	; (400da8 <configure_command_complete+0x44>)
  400d6e:	4798      	blx	r3
	// see which pins we used
	// just the rising edge option
	
	pio_set_debounce_filter(WIFI_COMM_PIO, WIFI_COMM_PIN_MSK, 10);
  400d70:	220a      	movs	r2, #10
  400d72:	2101      	movs	r1, #1
  400d74:	480d      	ldr	r0, [pc, #52]	; (400dac <configure_command_complete+0x48>)
  400d76:	4b0e      	ldr	r3, [pc, #56]	; (400db0 <configure_command_complete+0x4c>)
  400d78:	4798      	blx	r3
	
	pio_handler_set(WIFI_COMM_PIO, WIFI_COMM_ID, WIFI_COMM_PIN_MSK, WIFI_COMM_ATTR, handler_command_complete);
  400d7a:	4b0e      	ldr	r3, [pc, #56]	; (400db4 <configure_command_complete+0x50>)
  400d7c:	9300      	str	r3, [sp, #0]
  400d7e:	2370      	movs	r3, #112	; 0x70
  400d80:	2201      	movs	r2, #1
  400d82:	210c      	movs	r1, #12
  400d84:	4809      	ldr	r0, [pc, #36]	; (400dac <configure_command_complete+0x48>)
  400d86:	4c0c      	ldr	r4, [pc, #48]	; (400db8 <configure_command_complete+0x54>)
  400d88:	47a0      	blx	r4
	
	NVIC_EnableIRQ((IRQn_Type)WIFI_COMM_ID);
  400d8a:	200c      	movs	r0, #12
  400d8c:	4b0b      	ldr	r3, [pc, #44]	; (400dbc <configure_command_complete+0x58>)
  400d8e:	4798      	blx	r3
	
	pio_enable_interrupt(WIFI_COMM_PIO, WIFI_COMM_PIN_MSK);
  400d90:	2101      	movs	r1, #1
  400d92:	4806      	ldr	r0, [pc, #24]	; (400dac <configure_command_complete+0x48>)
  400d94:	4b0a      	ldr	r3, [pc, #40]	; (400dc0 <configure_command_complete+0x5c>)
  400d96:	4798      	blx	r3
	data_recieved = 0;
  400d98:	4b0a      	ldr	r3, [pc, #40]	; (400dc4 <configure_command_complete+0x60>)
  400d9a:	2200      	movs	r2, #0
  400d9c:	601a      	str	r2, [r3, #0]
}
  400d9e:	bf00      	nop
  400da0:	3704      	adds	r7, #4
  400da2:	46bd      	mov	sp, r7
  400da4:	bd90      	pop	{r4, r7, pc}
  400da6:	bf00      	nop
  400da8:	00401c8d 	.word	0x00401c8d
  400dac:	400e1000 	.word	0x400e1000
  400db0:	00401577 	.word	0x00401577
  400db4:	00400d25 	.word	0x00400d25
  400db8:	004004f5 	.word	0x004004f5
  400dbc:	00400aad 	.word	0x00400aad
  400dc0:	0040180b 	.word	0x0040180b
  400dc4:	20001bf0 	.word	0x20001bf0

00400dc8 <handler_web_setup>:

/**
 *  \brief Handler for setting up wifi.
 */
void handler_web_setup(uint32_t ul_id, uint32_t ul_mask) {
  400dc8:	b480      	push	{r7}
  400dca:	b083      	sub	sp, #12
  400dcc:	af00      	add	r7, sp, #0
  400dce:	6078      	str	r0, [r7, #4]
  400dd0:	6039      	str	r1, [r7, #0]
	unused(ul_id);
	unused(ul_mask);

	wifi_setup_flag = true;
  400dd2:	4b04      	ldr	r3, [pc, #16]	; (400de4 <handler_web_setup+0x1c>)
  400dd4:	2201      	movs	r2, #1
  400dd6:	601a      	str	r2, [r3, #0]
}
  400dd8:	bf00      	nop
  400dda:	370c      	adds	r7, #12
  400ddc:	46bd      	mov	sp, r7
  400dde:	bc80      	pop	{r7}
  400de0:	4770      	bx	lr
  400de2:	bf00      	nop
  400de4:	20001bf4 	.word	0x20001bf4

00400de8 <configure_web_setup>:

/**
 *  \brief Configures wifi setup pin.
 */
void configure_web_setup(void){
  400de8:	b590      	push	{r4, r7, lr}
  400dea:	b083      	sub	sp, #12
  400dec:	af02      	add	r7, sp, #8
	
	///* Set direction and pullup on the given button IOPORT */
	//ioport_set_pin_dir(GPIO_WIFI_RESET_PB, IOPORT_DIR_INPUT);
	//ioport_set_pin_mode(GPIO_WIFI_RESET_PB, IOPORT_MODE_PULLUP);
	/* Configure PIO clock. */
	pmc_enable_periph_clk(WIFI_SETUP_ID);
  400dee:	200c      	movs	r0, #12
  400df0:	4b0e      	ldr	r3, [pc, #56]	; (400e2c <configure_web_setup+0x44>)
  400df2:	4798      	blx	r3

	/* Adjust PIO debounce filter using a 10 Hz filter. */
	pio_set_debounce_filter(WIFI_SETUP_PIO, WIFI_SETUP_MASK, 10);
  400df4:	220a      	movs	r2, #10
  400df6:	f44f 4180 	mov.w	r1, #16384	; 0x4000
  400dfa:	480d      	ldr	r0, [pc, #52]	; (400e30 <configure_web_setup+0x48>)
  400dfc:	4b0d      	ldr	r3, [pc, #52]	; (400e34 <configure_web_setup+0x4c>)
  400dfe:	4798      	blx	r3

	/* Initialize PIO interrupt handler, see PIO definition in conf_board.h */
	pio_handler_set(WIFI_SETUP_PIO, WIFI_SETUP_ID, WIFI_SETUP_MASK,
  400e00:	4b0d      	ldr	r3, [pc, #52]	; (400e38 <configure_web_setup+0x50>)
  400e02:	9300      	str	r3, [sp, #0]
  400e04:	2379      	movs	r3, #121	; 0x79
  400e06:	f44f 4280 	mov.w	r2, #16384	; 0x4000
  400e0a:	210c      	movs	r1, #12
  400e0c:	4808      	ldr	r0, [pc, #32]	; (400e30 <configure_web_setup+0x48>)
  400e0e:	4c0b      	ldr	r4, [pc, #44]	; (400e3c <configure_web_setup+0x54>)
  400e10:	47a0      	blx	r4
			WIFI_SETUP_ATTR, handler_web_setup);
			
	/* Enable PIO controller IRQs. */
	NVIC_EnableIRQ((IRQn_Type) WIFI_SETUP_ID);
  400e12:	200c      	movs	r0, #12
  400e14:	4b0a      	ldr	r3, [pc, #40]	; (400e40 <configure_web_setup+0x58>)
  400e16:	4798      	blx	r3

	/* Enable PIO interrupt lines. */
	pio_enable_interrupt(WIFI_SETUP_PIO, WIFI_SETUP_MASK);
  400e18:	f44f 4180 	mov.w	r1, #16384	; 0x4000
  400e1c:	4804      	ldr	r0, [pc, #16]	; (400e30 <configure_web_setup+0x48>)
  400e1e:	4b09      	ldr	r3, [pc, #36]	; (400e44 <configure_web_setup+0x5c>)
  400e20:	4798      	blx	r3
}
  400e22:	bf00      	nop
  400e24:	3704      	adds	r7, #4
  400e26:	46bd      	mov	sp, r7
  400e28:	bd90      	pop	{r4, r7, pc}
  400e2a:	bf00      	nop
  400e2c:	00401c8d 	.word	0x00401c8d
  400e30:	400e1000 	.word	0x400e1000
  400e34:	00401577 	.word	0x00401577
  400e38:	00400dc9 	.word	0x00400dc9
  400e3c:	004004f5 	.word	0x004004f5
  400e40:	00400aad 	.word	0x00400aad
  400e44:	0040180b 	.word	0x0040180b

00400e48 <write_wifi_command>:

/**
 *  \brief Writes wifi command.
 */
void write_wifi_command(char* comm, uint8_t cnt){
  400e48:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
  400e4c:	b082      	sub	sp, #8
  400e4e:	af00      	add	r7, sp, #0
  400e50:	6078      	str	r0, [r7, #4]
  400e52:	460b      	mov	r3, r1
  400e54:	70fb      	strb	r3, [r7, #3]
	data_recieved = 0;
  400e56:	4b29      	ldr	r3, [pc, #164]	; (400efc <write_wifi_command+0xb4>)
  400e58:	2200      	movs	r2, #0
  400e5a:	601a      	str	r2, [r3, #0]
	usart_write_line(BOARD_USART, comm);
  400e5c:	6879      	ldr	r1, [r7, #4]
  400e5e:	4828      	ldr	r0, [pc, #160]	; (400f00 <write_wifi_command+0xb8>)
  400e60:	4b28      	ldr	r3, [pc, #160]	; (400f04 <write_wifi_command+0xbc>)
  400e62:	4798      	blx	r3
	
	timeout_counter = 0;
  400e64:	4b28      	ldr	r3, [pc, #160]	; (400f08 <write_wifi_command+0xc0>)
  400e66:	2200      	movs	r2, #0
  400e68:	701a      	strb	r2, [r3, #0]
	cnt = cnt*20;
  400e6a:	78fb      	ldrb	r3, [r7, #3]
  400e6c:	461a      	mov	r2, r3
  400e6e:	0092      	lsls	r2, r2, #2
  400e70:	4413      	add	r3, r2
  400e72:	009b      	lsls	r3, r3, #2
  400e74:	70fb      	strb	r3, [r7, #3]
	while(timeout_counter < cnt && !data_recieved) {
  400e76:	e031      	b.n	400edc <write_wifi_command+0x94>
		// leave long
		delay_ms(10);
  400e78:	4b24      	ldr	r3, [pc, #144]	; (400f0c <write_wifi_command+0xc4>)
  400e7a:	4798      	blx	r3
  400e7c:	4603      	mov	r3, r0
  400e7e:	4619      	mov	r1, r3
  400e80:	f04f 0200 	mov.w	r2, #0
  400e84:	460b      	mov	r3, r1
  400e86:	4614      	mov	r4, r2
  400e88:	00a6      	lsls	r6, r4, #2
  400e8a:	ea46 7693 	orr.w	r6, r6, r3, lsr #30
  400e8e:	009d      	lsls	r5, r3, #2
  400e90:	462b      	mov	r3, r5
  400e92:	4634      	mov	r4, r6
  400e94:	185b      	adds	r3, r3, r1
  400e96:	eb44 0402 	adc.w	r4, r4, r2
  400e9a:	18db      	adds	r3, r3, r3
  400e9c:	eb44 0404 	adc.w	r4, r4, r4
  400ea0:	4619      	mov	r1, r3
  400ea2:	4622      	mov	r2, r4
  400ea4:	f243 63af 	movw	r3, #13999	; 0x36af
  400ea8:	f04f 0400 	mov.w	r4, #0
  400eac:	eb11 0b03 	adds.w	fp, r1, r3
  400eb0:	eb42 0c04 	adc.w	ip, r2, r4
  400eb4:	4658      	mov	r0, fp
  400eb6:	4661      	mov	r1, ip
  400eb8:	4c15      	ldr	r4, [pc, #84]	; (400f10 <write_wifi_command+0xc8>)
  400eba:	f243 62b0 	movw	r2, #14000	; 0x36b0
  400ebe:	f04f 0300 	mov.w	r3, #0
  400ec2:	47a0      	blx	r4
  400ec4:	4603      	mov	r3, r0
  400ec6:	460c      	mov	r4, r1
  400ec8:	4618      	mov	r0, r3
  400eca:	4b12      	ldr	r3, [pc, #72]	; (400f14 <write_wifi_command+0xcc>)
  400ecc:	4798      	blx	r3
		timeout_counter++;
  400ece:	4b0e      	ldr	r3, [pc, #56]	; (400f08 <write_wifi_command+0xc0>)
  400ed0:	781b      	ldrb	r3, [r3, #0]
  400ed2:	b2db      	uxtb	r3, r3
  400ed4:	3301      	adds	r3, #1
  400ed6:	b2da      	uxtb	r2, r3
  400ed8:	4b0b      	ldr	r3, [pc, #44]	; (400f08 <write_wifi_command+0xc0>)
  400eda:	701a      	strb	r2, [r3, #0]
	while(timeout_counter < cnt && !data_recieved) {
  400edc:	4b0a      	ldr	r3, [pc, #40]	; (400f08 <write_wifi_command+0xc0>)
  400ede:	781b      	ldrb	r3, [r3, #0]
  400ee0:	b2db      	uxtb	r3, r3
  400ee2:	78fa      	ldrb	r2, [r7, #3]
  400ee4:	429a      	cmp	r2, r3
  400ee6:	d903      	bls.n	400ef0 <write_wifi_command+0xa8>
  400ee8:	4b04      	ldr	r3, [pc, #16]	; (400efc <write_wifi_command+0xb4>)
  400eea:	681b      	ldr	r3, [r3, #0]
  400eec:	2b00      	cmp	r3, #0
  400eee:	d0c3      	beq.n	400e78 <write_wifi_command+0x30>
	}
	
	//delay_ms(100);
}
  400ef0:	bf00      	nop
  400ef2:	3708      	adds	r7, #8
  400ef4:	46bd      	mov	sp, r7
  400ef6:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
  400efa:	bf00      	nop
  400efc:	20001bf0 	.word	0x20001bf0
  400f00:	40024000 	.word	0x40024000
  400f04:	00400899 	.word	0x00400899
  400f08:	20001bec 	.word	0x20001bec
  400f0c:	00400b6d 	.word	0x00400b6d
  400f10:	0040409d 	.word	0x0040409d
  400f14:	20000001 	.word	0x20000001

00400f18 <blink_LED>:
/**
 *  \brief Blinks a defined LED_PIN.
	Delays, switches, delays, switches, delays
	Total time is 3x ms_blink
 */
void blink_LED(int ms_blink){
  400f18:	b5f0      	push	{r4, r5, r6, r7, lr}
  400f1a:	b083      	sub	sp, #12
  400f1c:	af00      	add	r7, sp, #0
  400f1e:	6078      	str	r0, [r7, #4]
	delay_ms(ms_blink);
  400f20:	687b      	ldr	r3, [r7, #4]
  400f22:	2b00      	cmp	r3, #0
  400f24:	d026      	beq.n	400f74 <blink_LED+0x5c>
  400f26:	687b      	ldr	r3, [r7, #4]
  400f28:	461d      	mov	r5, r3
  400f2a:	ea4f 76e5 	mov.w	r6, r5, asr #31
  400f2e:	4b66      	ldr	r3, [pc, #408]	; (4010c8 <blink_LED+0x1b0>)
  400f30:	4798      	blx	r3
  400f32:	4603      	mov	r3, r0
  400f34:	f04f 0400 	mov.w	r4, #0
  400f38:	fb03 f106 	mul.w	r1, r3, r6
  400f3c:	fb05 f204 	mul.w	r2, r5, r4
  400f40:	440a      	add	r2, r1
  400f42:	fba5 3403 	umull	r3, r4, r5, r3
  400f46:	4422      	add	r2, r4
  400f48:	4614      	mov	r4, r2
  400f4a:	f243 61af 	movw	r1, #13999	; 0x36af
  400f4e:	f04f 0200 	mov.w	r2, #0
  400f52:	185d      	adds	r5, r3, r1
  400f54:	eb44 0602 	adc.w	r6, r4, r2
  400f58:	4628      	mov	r0, r5
  400f5a:	4631      	mov	r1, r6
  400f5c:	4c5b      	ldr	r4, [pc, #364]	; (4010cc <blink_LED+0x1b4>)
  400f5e:	f243 62b0 	movw	r2, #14000	; 0x36b0
  400f62:	f04f 0300 	mov.w	r3, #0
  400f66:	47a0      	blx	r4
  400f68:	4603      	mov	r3, r0
  400f6a:	460c      	mov	r4, r1
  400f6c:	4618      	mov	r0, r3
  400f6e:	4b58      	ldr	r3, [pc, #352]	; (4010d0 <blink_LED+0x1b8>)
  400f70:	4798      	blx	r3
  400f72:	e016      	b.n	400fa2 <blink_LED+0x8a>
  400f74:	4b54      	ldr	r3, [pc, #336]	; (4010c8 <blink_LED+0x1b0>)
  400f76:	4798      	blx	r3
  400f78:	4603      	mov	r3, r0
  400f7a:	f04f 0400 	mov.w	r4, #0
  400f7e:	a250      	add	r2, pc, #320	; (adr r2, 4010c0 <blink_LED+0x1a8>)
  400f80:	e9d2 1200 	ldrd	r1, r2, [r2]
  400f84:	185d      	adds	r5, r3, r1
  400f86:	eb44 0602 	adc.w	r6, r4, r2
  400f8a:	4628      	mov	r0, r5
  400f8c:	4631      	mov	r1, r6
  400f8e:	4c4f      	ldr	r4, [pc, #316]	; (4010cc <blink_LED+0x1b4>)
  400f90:	4a50      	ldr	r2, [pc, #320]	; (4010d4 <blink_LED+0x1bc>)
  400f92:	f04f 0300 	mov.w	r3, #0
  400f96:	47a0      	blx	r4
  400f98:	4603      	mov	r3, r0
  400f9a:	460c      	mov	r4, r1
  400f9c:	4618      	mov	r0, r3
  400f9e:	4b4c      	ldr	r3, [pc, #304]	; (4010d0 <blink_LED+0x1b8>)
  400fa0:	4798      	blx	r3
	ioport_toggle_pin_level(LED_PIN);
  400fa2:	2013      	movs	r0, #19
  400fa4:	4b4c      	ldr	r3, [pc, #304]	; (4010d8 <blink_LED+0x1c0>)
  400fa6:	4798      	blx	r3
	delay_ms(ms_blink);
  400fa8:	687b      	ldr	r3, [r7, #4]
  400faa:	2b00      	cmp	r3, #0
  400fac:	d026      	beq.n	400ffc <blink_LED+0xe4>
  400fae:	687b      	ldr	r3, [r7, #4]
  400fb0:	461d      	mov	r5, r3
  400fb2:	ea4f 76e5 	mov.w	r6, r5, asr #31
  400fb6:	4b44      	ldr	r3, [pc, #272]	; (4010c8 <blink_LED+0x1b0>)
  400fb8:	4798      	blx	r3
  400fba:	4603      	mov	r3, r0
  400fbc:	f04f 0400 	mov.w	r4, #0
  400fc0:	fb03 f106 	mul.w	r1, r3, r6
  400fc4:	fb05 f204 	mul.w	r2, r5, r4
  400fc8:	440a      	add	r2, r1
  400fca:	fba5 3403 	umull	r3, r4, r5, r3
  400fce:	4422      	add	r2, r4
  400fd0:	4614      	mov	r4, r2
  400fd2:	f243 61af 	movw	r1, #13999	; 0x36af
  400fd6:	f04f 0200 	mov.w	r2, #0
  400fda:	185d      	adds	r5, r3, r1
  400fdc:	eb44 0602 	adc.w	r6, r4, r2
  400fe0:	4628      	mov	r0, r5
  400fe2:	4631      	mov	r1, r6
  400fe4:	4c39      	ldr	r4, [pc, #228]	; (4010cc <blink_LED+0x1b4>)
  400fe6:	f243 62b0 	movw	r2, #14000	; 0x36b0
  400fea:	f04f 0300 	mov.w	r3, #0
  400fee:	47a0      	blx	r4
  400ff0:	4603      	mov	r3, r0
  400ff2:	460c      	mov	r4, r1
  400ff4:	4618      	mov	r0, r3
  400ff6:	4b36      	ldr	r3, [pc, #216]	; (4010d0 <blink_LED+0x1b8>)
  400ff8:	4798      	blx	r3
  400ffa:	e016      	b.n	40102a <blink_LED+0x112>
  400ffc:	4b32      	ldr	r3, [pc, #200]	; (4010c8 <blink_LED+0x1b0>)
  400ffe:	4798      	blx	r3
  401000:	4603      	mov	r3, r0
  401002:	f04f 0400 	mov.w	r4, #0
  401006:	a22e      	add	r2, pc, #184	; (adr r2, 4010c0 <blink_LED+0x1a8>)
  401008:	e9d2 1200 	ldrd	r1, r2, [r2]
  40100c:	185d      	adds	r5, r3, r1
  40100e:	eb44 0602 	adc.w	r6, r4, r2
  401012:	4628      	mov	r0, r5
  401014:	4631      	mov	r1, r6
  401016:	4c2d      	ldr	r4, [pc, #180]	; (4010cc <blink_LED+0x1b4>)
  401018:	4a2e      	ldr	r2, [pc, #184]	; (4010d4 <blink_LED+0x1bc>)
  40101a:	f04f 0300 	mov.w	r3, #0
  40101e:	47a0      	blx	r4
  401020:	4603      	mov	r3, r0
  401022:	460c      	mov	r4, r1
  401024:	4618      	mov	r0, r3
  401026:	4b2a      	ldr	r3, [pc, #168]	; (4010d0 <blink_LED+0x1b8>)
  401028:	4798      	blx	r3
	ioport_toggle_pin_level(LED_PIN);
  40102a:	2013      	movs	r0, #19
  40102c:	4b2a      	ldr	r3, [pc, #168]	; (4010d8 <blink_LED+0x1c0>)
  40102e:	4798      	blx	r3
	delay_ms(ms_blink);
  401030:	687b      	ldr	r3, [r7, #4]
  401032:	2b00      	cmp	r3, #0
  401034:	d026      	beq.n	401084 <blink_LED+0x16c>
  401036:	687b      	ldr	r3, [r7, #4]
  401038:	461d      	mov	r5, r3
  40103a:	ea4f 76e5 	mov.w	r6, r5, asr #31
  40103e:	4b22      	ldr	r3, [pc, #136]	; (4010c8 <blink_LED+0x1b0>)
  401040:	4798      	blx	r3
  401042:	4603      	mov	r3, r0
  401044:	f04f 0400 	mov.w	r4, #0
  401048:	fb03 f106 	mul.w	r1, r3, r6
  40104c:	fb05 f204 	mul.w	r2, r5, r4
  401050:	440a      	add	r2, r1
  401052:	fba5 3403 	umull	r3, r4, r5, r3
  401056:	4422      	add	r2, r4
  401058:	4614      	mov	r4, r2
  40105a:	f243 61af 	movw	r1, #13999	; 0x36af
  40105e:	f04f 0200 	mov.w	r2, #0
  401062:	185d      	adds	r5, r3, r1
  401064:	eb44 0602 	adc.w	r6, r4, r2
  401068:	4628      	mov	r0, r5
  40106a:	4631      	mov	r1, r6
  40106c:	4c17      	ldr	r4, [pc, #92]	; (4010cc <blink_LED+0x1b4>)
  40106e:	f243 62b0 	movw	r2, #14000	; 0x36b0
  401072:	f04f 0300 	mov.w	r3, #0
  401076:	47a0      	blx	r4
  401078:	4603      	mov	r3, r0
  40107a:	460c      	mov	r4, r1
  40107c:	4618      	mov	r0, r3
  40107e:	4b14      	ldr	r3, [pc, #80]	; (4010d0 <blink_LED+0x1b8>)
  401080:	4798      	blx	r3
}
  401082:	e016      	b.n	4010b2 <blink_LED+0x19a>
	delay_ms(ms_blink);
  401084:	4b10      	ldr	r3, [pc, #64]	; (4010c8 <blink_LED+0x1b0>)
  401086:	4798      	blx	r3
  401088:	4603      	mov	r3, r0
  40108a:	f04f 0400 	mov.w	r4, #0
  40108e:	a20c      	add	r2, pc, #48	; (adr r2, 4010c0 <blink_LED+0x1a8>)
  401090:	e9d2 1200 	ldrd	r1, r2, [r2]
  401094:	185d      	adds	r5, r3, r1
  401096:	eb44 0602 	adc.w	r6, r4, r2
  40109a:	4628      	mov	r0, r5
  40109c:	4631      	mov	r1, r6
  40109e:	4c0b      	ldr	r4, [pc, #44]	; (4010cc <blink_LED+0x1b4>)
  4010a0:	4a0c      	ldr	r2, [pc, #48]	; (4010d4 <blink_LED+0x1bc>)
  4010a2:	f04f 0300 	mov.w	r3, #0
  4010a6:	47a0      	blx	r4
  4010a8:	4603      	mov	r3, r0
  4010aa:	460c      	mov	r4, r1
  4010ac:	4618      	mov	r0, r3
  4010ae:	4b08      	ldr	r3, [pc, #32]	; (4010d0 <blink_LED+0x1b8>)
  4010b0:	4798      	blx	r3
}
  4010b2:	bf00      	nop
  4010b4:	370c      	adds	r7, #12
  4010b6:	46bd      	mov	sp, r7
  4010b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4010ba:	bf00      	nop
  4010bc:	f3af 8000 	nop.w
  4010c0:	00d59f7f 	.word	0x00d59f7f
  4010c4:	00000000 	.word	0x00000000
  4010c8:	00400b6d 	.word	0x00400b6d
  4010cc:	0040409d 	.word	0x0040409d
  4010d0:	20000001 	.word	0x20000001
  4010d4:	00d59f80 	.word	0x00d59f80
  4010d8:	00400bb1 	.word	0x00400bb1

004010dc <setup_wifi>:

/**
 *  \brief Sets up wifi chip on new network.
 */
void setup_wifi(void){
  4010dc:	e92d 4bf0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, fp, lr}
  4010e0:	b082      	sub	sp, #8
  4010e2:	af00      	add	r7, sp, #0
	
	int connected = 0;
  4010e4:	2300      	movs	r3, #0
  4010e6:	607b      	str	r3, [r7, #4]
	int seconds = 0;
  4010e8:	2300      	movs	r3, #0
  4010ea:	603b      	str	r3, [r7, #0]
	
	write_wifi_command("setup web\r\n", 2000);	// command wifi chip to setup
  4010ec:	21d0      	movs	r1, #208	; 0xd0
  4010ee:	482b      	ldr	r0, [pc, #172]	; (40119c <setup_wifi+0xc0>)
  4010f0:	4b2b      	ldr	r3, [pc, #172]	; (4011a0 <setup_wifi+0xc4>)
  4010f2:	4798      	blx	r3
			
	while(!connected){		// waits a long time for the user to connect to the chip and join a network
  4010f4:	e046      	b.n	401184 <setup_wifi+0xa8>
				
		connected = strstr(input_buffer, "[Associated]\r\n");	// check for connection
  4010f6:	492b      	ldr	r1, [pc, #172]	; (4011a4 <setup_wifi+0xc8>)
  4010f8:	482b      	ldr	r0, [pc, #172]	; (4011a8 <setup_wifi+0xcc>)
  4010fa:	4b2c      	ldr	r3, [pc, #176]	; (4011ac <setup_wifi+0xd0>)
  4010fc:	4798      	blx	r3
  4010fe:	4603      	mov	r3, r0
  401100:	607b      	str	r3, [r7, #4]
		if (seconds > 1500) {	// blink debug LED quickly after a while
  401102:	683b      	ldr	r3, [r7, #0]
  401104:	f240 52dc 	movw	r2, #1500	; 0x5dc
  401108:	4293      	cmp	r3, r2
  40110a:	dd02      	ble.n	401112 <setup_wifi+0x36>
			blink_LED(50);
  40110c:	2032      	movs	r0, #50	; 0x32
  40110e:	4b28      	ldr	r3, [pc, #160]	; (4011b0 <setup_wifi+0xd4>)
  401110:	4798      	blx	r3
		}
		delay_ms(200);
  401112:	4b28      	ldr	r3, [pc, #160]	; (4011b4 <setup_wifi+0xd8>)
  401114:	4798      	blx	r3
  401116:	4603      	mov	r3, r0
  401118:	4619      	mov	r1, r3
  40111a:	f04f 0200 	mov.w	r2, #0
  40111e:	460b      	mov	r3, r1
  401120:	4614      	mov	r4, r2
  401122:	18db      	adds	r3, r3, r3
  401124:	eb44 0404 	adc.w	r4, r4, r4
  401128:	185b      	adds	r3, r3, r1
  40112a:	eb44 0402 	adc.w	r4, r4, r2
  40112e:	00e6      	lsls	r6, r4, #3
  401130:	ea46 7653 	orr.w	r6, r6, r3, lsr #29
  401134:	00dd      	lsls	r5, r3, #3
  401136:	462b      	mov	r3, r5
  401138:	4634      	mov	r4, r6
  40113a:	185b      	adds	r3, r3, r1
  40113c:	eb44 0402 	adc.w	r4, r4, r2
  401140:	ea4f 09c4 	mov.w	r9, r4, lsl #3
  401144:	ea49 7953 	orr.w	r9, r9, r3, lsr #29
  401148:	ea4f 08c3 	mov.w	r8, r3, lsl #3
  40114c:	4643      	mov	r3, r8
  40114e:	464c      	mov	r4, r9
  401150:	4619      	mov	r1, r3
  401152:	4622      	mov	r2, r4
  401154:	f243 63af 	movw	r3, #13999	; 0x36af
  401158:	f04f 0400 	mov.w	r4, #0
  40115c:	eb11 0b03 	adds.w	fp, r1, r3
  401160:	eb42 0c04 	adc.w	ip, r2, r4
  401164:	4658      	mov	r0, fp
  401166:	4661      	mov	r1, ip
  401168:	4c13      	ldr	r4, [pc, #76]	; (4011b8 <setup_wifi+0xdc>)
  40116a:	f243 62b0 	movw	r2, #14000	; 0x36b0
  40116e:	f04f 0300 	mov.w	r3, #0
  401172:	47a0      	blx	r4
  401174:	4603      	mov	r3, r0
  401176:	460c      	mov	r4, r1
  401178:	4618      	mov	r0, r3
  40117a:	4b10      	ldr	r3, [pc, #64]	; (4011bc <setup_wifi+0xe0>)
  40117c:	4798      	blx	r3
		seconds++;
  40117e:	683b      	ldr	r3, [r7, #0]
  401180:	3301      	adds	r3, #1
  401182:	603b      	str	r3, [r7, #0]
	while(!connected){		// waits a long time for the user to connect to the chip and join a network
  401184:	687b      	ldr	r3, [r7, #4]
  401186:	2b00      	cmp	r3, #0
  401188:	d0b5      	beq.n	4010f6 <setup_wifi+0x1a>
	}
			
	wifi_setup_flag = false;	// turn off setup flag
  40118a:	4b0d      	ldr	r3, [pc, #52]	; (4011c0 <setup_wifi+0xe4>)
  40118c:	2200      	movs	r2, #0
  40118e:	601a      	str	r2, [r3, #0]
}
  401190:	bf00      	nop
  401192:	3708      	adds	r7, #8
  401194:	46bd      	mov	sp, r7
  401196:	e8bd 8bf0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, fp, pc}
  40119a:	bf00      	nop
  40119c:	00408958 	.word	0x00408958
  4011a0:	00400e49 	.word	0x00400e49
  4011a4:	00408964 	.word	0x00408964
  4011a8:	200019f4 	.word	0x200019f4
  4011ac:	00404795 	.word	0x00404795
  4011b0:	00400f19 	.word	0x00400f19
  4011b4:	00400b6d 	.word	0x00400b6d
  4011b8:	0040409d 	.word	0x0040409d
  4011bc:	20000001 	.word	0x20000001
  4011c0:	20001bf4 	.word	0x20001bf4

004011c4 <configure_wifi>:

/**
 *  \brief Wrapper function for wifi module configuration.
 */
void configure_wifi(){
  4011c4:	b580      	push	{r7, lr}
  4011c6:	af00      	add	r7, sp, #0
	configure_usart();
  4011c8:	4b05      	ldr	r3, [pc, #20]	; (4011e0 <configure_wifi+0x1c>)
  4011ca:	4798      	blx	r3
	configure_command_complete();
  4011cc:	4b05      	ldr	r3, [pc, #20]	; (4011e4 <configure_wifi+0x20>)
  4011ce:	4798      	blx	r3
	configure_web_setup();	
  4011d0:	4b05      	ldr	r3, [pc, #20]	; (4011e8 <configure_wifi+0x24>)
  4011d2:	4798      	blx	r3
	usart_enable_interrupt(BOARD_USART, US_IER_RXRDY);
  4011d4:	2101      	movs	r1, #1
  4011d6:	4805      	ldr	r0, [pc, #20]	; (4011ec <configure_wifi+0x28>)
  4011d8:	4b05      	ldr	r3, [pc, #20]	; (4011f0 <configure_wifi+0x2c>)
  4011da:	4798      	blx	r3
}
  4011dc:	bf00      	nop
  4011de:	bd80      	pop	{r7, pc}
  4011e0:	00400ca1 	.word	0x00400ca1
  4011e4:	00400d65 	.word	0x00400d65
  4011e8:	00400de9 	.word	0x00400de9
  4011ec:	40024000 	.word	0x40024000
  4011f0:	004007d1 	.word	0x004007d1

004011f4 <osc_enable>:
{
  4011f4:	b580      	push	{r7, lr}
  4011f6:	b082      	sub	sp, #8
  4011f8:	af00      	add	r7, sp, #0
  4011fa:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
  4011fc:	687b      	ldr	r3, [r7, #4]
  4011fe:	2b07      	cmp	r3, #7
  401200:	d831      	bhi.n	401266 <osc_enable+0x72>
  401202:	a201      	add	r2, pc, #4	; (adr r2, 401208 <osc_enable+0x14>)
  401204:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  401208:	00401265 	.word	0x00401265
  40120c:	00401229 	.word	0x00401229
  401210:	00401231 	.word	0x00401231
  401214:	00401239 	.word	0x00401239
  401218:	00401241 	.word	0x00401241
  40121c:	00401249 	.word	0x00401249
  401220:	00401251 	.word	0x00401251
  401224:	0040125b 	.word	0x0040125b
		pmc_switch_sclk_to_32kxtal(PMC_OSC_XTAL);
  401228:	2000      	movs	r0, #0
  40122a:	4b11      	ldr	r3, [pc, #68]	; (401270 <osc_enable+0x7c>)
  40122c:	4798      	blx	r3
		break;
  40122e:	e01a      	b.n	401266 <osc_enable+0x72>
		pmc_switch_sclk_to_32kxtal(PMC_OSC_BYPASS);
  401230:	2001      	movs	r0, #1
  401232:	4b0f      	ldr	r3, [pc, #60]	; (401270 <osc_enable+0x7c>)
  401234:	4798      	blx	r3
		break;
  401236:	e016      	b.n	401266 <osc_enable+0x72>
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_4_MHz);
  401238:	2000      	movs	r0, #0
  40123a:	4b0e      	ldr	r3, [pc, #56]	; (401274 <osc_enable+0x80>)
  40123c:	4798      	blx	r3
		break;
  40123e:	e012      	b.n	401266 <osc_enable+0x72>
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_8_MHz);
  401240:	2010      	movs	r0, #16
  401242:	4b0c      	ldr	r3, [pc, #48]	; (401274 <osc_enable+0x80>)
  401244:	4798      	blx	r3
		break;
  401246:	e00e      	b.n	401266 <osc_enable+0x72>
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
  401248:	2020      	movs	r0, #32
  40124a:	4b0a      	ldr	r3, [pc, #40]	; (401274 <osc_enable+0x80>)
  40124c:	4798      	blx	r3
		break;
  40124e:	e00a      	b.n	401266 <osc_enable+0x72>
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  401250:	213e      	movs	r1, #62	; 0x3e
  401252:	2000      	movs	r0, #0
  401254:	4b08      	ldr	r3, [pc, #32]	; (401278 <osc_enable+0x84>)
  401256:	4798      	blx	r3
		break;
  401258:	e005      	b.n	401266 <osc_enable+0x72>
		pmc_switch_mainck_to_xtal(PMC_OSC_BYPASS,
  40125a:	213e      	movs	r1, #62	; 0x3e
  40125c:	2001      	movs	r0, #1
  40125e:	4b06      	ldr	r3, [pc, #24]	; (401278 <osc_enable+0x84>)
  401260:	4798      	blx	r3
		break;
  401262:	e000      	b.n	401266 <osc_enable+0x72>
		break;
  401264:	bf00      	nop
}
  401266:	bf00      	nop
  401268:	3708      	adds	r7, #8
  40126a:	46bd      	mov	sp, r7
  40126c:	bd80      	pop	{r7, pc}
  40126e:	bf00      	nop
  401270:	00401ac1 	.word	0x00401ac1
  401274:	00401b2d 	.word	0x00401b2d
  401278:	00401b9d 	.word	0x00401b9d

0040127c <osc_is_ready>:
{
  40127c:	b580      	push	{r7, lr}
  40127e:	b082      	sub	sp, #8
  401280:	af00      	add	r7, sp, #0
  401282:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
  401284:	687b      	ldr	r3, [r7, #4]
  401286:	2b07      	cmp	r3, #7
  401288:	d826      	bhi.n	4012d8 <osc_is_ready+0x5c>
  40128a:	a201      	add	r2, pc, #4	; (adr r2, 401290 <osc_is_ready+0x14>)
  40128c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  401290:	004012b1 	.word	0x004012b1
  401294:	004012b5 	.word	0x004012b5
  401298:	004012b5 	.word	0x004012b5
  40129c:	004012c7 	.word	0x004012c7
  4012a0:	004012c7 	.word	0x004012c7
  4012a4:	004012c7 	.word	0x004012c7
  4012a8:	004012c7 	.word	0x004012c7
  4012ac:	004012c7 	.word	0x004012c7
		return 1;
  4012b0:	2301      	movs	r3, #1
  4012b2:	e012      	b.n	4012da <osc_is_ready+0x5e>
		return pmc_osc_is_ready_32kxtal();
  4012b4:	4b0b      	ldr	r3, [pc, #44]	; (4012e4 <osc_is_ready+0x68>)
  4012b6:	4798      	blx	r3
  4012b8:	4603      	mov	r3, r0
  4012ba:	2b00      	cmp	r3, #0
  4012bc:	bf14      	ite	ne
  4012be:	2301      	movne	r3, #1
  4012c0:	2300      	moveq	r3, #0
  4012c2:	b2db      	uxtb	r3, r3
  4012c4:	e009      	b.n	4012da <osc_is_ready+0x5e>
		return pmc_osc_is_ready_mainck();
  4012c6:	4b08      	ldr	r3, [pc, #32]	; (4012e8 <osc_is_ready+0x6c>)
  4012c8:	4798      	blx	r3
  4012ca:	4603      	mov	r3, r0
  4012cc:	2b00      	cmp	r3, #0
  4012ce:	bf14      	ite	ne
  4012d0:	2301      	movne	r3, #1
  4012d2:	2300      	moveq	r3, #0
  4012d4:	b2db      	uxtb	r3, r3
  4012d6:	e000      	b.n	4012da <osc_is_ready+0x5e>
	return 0;
  4012d8:	2300      	movs	r3, #0
}
  4012da:	4618      	mov	r0, r3
  4012dc:	3708      	adds	r7, #8
  4012de:	46bd      	mov	sp, r7
  4012e0:	bd80      	pop	{r7, pc}
  4012e2:	bf00      	nop
  4012e4:	00401af9 	.word	0x00401af9
  4012e8:	00401c15 	.word	0x00401c15

004012ec <osc_get_rate>:
{
  4012ec:	b480      	push	{r7}
  4012ee:	b083      	sub	sp, #12
  4012f0:	af00      	add	r7, sp, #0
  4012f2:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
  4012f4:	687b      	ldr	r3, [r7, #4]
  4012f6:	2b07      	cmp	r3, #7
  4012f8:	d825      	bhi.n	401346 <osc_get_rate+0x5a>
  4012fa:	a201      	add	r2, pc, #4	; (adr r2, 401300 <osc_get_rate+0x14>)
  4012fc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  401300:	00401321 	.word	0x00401321
  401304:	00401327 	.word	0x00401327
  401308:	0040132d 	.word	0x0040132d
  40130c:	00401333 	.word	0x00401333
  401310:	00401337 	.word	0x00401337
  401314:	0040133b 	.word	0x0040133b
  401318:	0040133f 	.word	0x0040133f
  40131c:	00401343 	.word	0x00401343
		return OSC_SLCK_32K_RC_HZ;
  401320:	f44f 43fa 	mov.w	r3, #32000	; 0x7d00
  401324:	e010      	b.n	401348 <osc_get_rate+0x5c>
		return BOARD_FREQ_SLCK_XTAL;
  401326:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  40132a:	e00d      	b.n	401348 <osc_get_rate+0x5c>
		return BOARD_FREQ_SLCK_BYPASS;
  40132c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  401330:	e00a      	b.n	401348 <osc_get_rate+0x5c>
		return OSC_MAINCK_4M_RC_HZ;
  401332:	4b08      	ldr	r3, [pc, #32]	; (401354 <osc_get_rate+0x68>)
  401334:	e008      	b.n	401348 <osc_get_rate+0x5c>
		return OSC_MAINCK_8M_RC_HZ;
  401336:	4b08      	ldr	r3, [pc, #32]	; (401358 <osc_get_rate+0x6c>)
  401338:	e006      	b.n	401348 <osc_get_rate+0x5c>
		return OSC_MAINCK_12M_RC_HZ;
  40133a:	4b08      	ldr	r3, [pc, #32]	; (40135c <osc_get_rate+0x70>)
  40133c:	e004      	b.n	401348 <osc_get_rate+0x5c>
		return BOARD_FREQ_MAINCK_XTAL;
  40133e:	4b07      	ldr	r3, [pc, #28]	; (40135c <osc_get_rate+0x70>)
  401340:	e002      	b.n	401348 <osc_get_rate+0x5c>
		return BOARD_FREQ_MAINCK_BYPASS;
  401342:	4b06      	ldr	r3, [pc, #24]	; (40135c <osc_get_rate+0x70>)
  401344:	e000      	b.n	401348 <osc_get_rate+0x5c>
	return 0;
  401346:	2300      	movs	r3, #0
}
  401348:	4618      	mov	r0, r3
  40134a:	370c      	adds	r7, #12
  40134c:	46bd      	mov	sp, r7
  40134e:	bc80      	pop	{r7}
  401350:	4770      	bx	lr
  401352:	bf00      	nop
  401354:	003d0900 	.word	0x003d0900
  401358:	007a1200 	.word	0x007a1200
  40135c:	00b71b00 	.word	0x00b71b00

00401360 <osc_wait_ready>:
 * to become stable and ready to use as a clock source.
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
  401360:	b580      	push	{r7, lr}
  401362:	b082      	sub	sp, #8
  401364:	af00      	add	r7, sp, #0
  401366:	4603      	mov	r3, r0
  401368:	71fb      	strb	r3, [r7, #7]
	while (!osc_is_ready(id)) {
  40136a:	bf00      	nop
  40136c:	79fb      	ldrb	r3, [r7, #7]
  40136e:	4618      	mov	r0, r3
  401370:	4b05      	ldr	r3, [pc, #20]	; (401388 <osc_wait_ready+0x28>)
  401372:	4798      	blx	r3
  401374:	4603      	mov	r3, r0
  401376:	f083 0301 	eor.w	r3, r3, #1
  40137a:	b2db      	uxtb	r3, r3
  40137c:	2b00      	cmp	r3, #0
  40137e:	d1f5      	bne.n	40136c <osc_wait_ready+0xc>
		/* Do nothing */
	}
}
  401380:	bf00      	nop
  401382:	3708      	adds	r7, #8
  401384:	46bd      	mov	sp, r7
  401386:	bd80      	pop	{r7, pc}
  401388:	0040127d 	.word	0x0040127d

0040138c <pll_config_init>:
 * \note The SAM3S PLL hardware interprets mul as mul+1. For readability the hardware mul+1
 * is hidden in this implementation. Use mul as mul effective value.
 */
static inline void pll_config_init(struct pll_config *p_cfg,
		enum pll_source e_src, uint32_t ul_div, uint32_t ul_mul)
{
  40138c:	b580      	push	{r7, lr}
  40138e:	b086      	sub	sp, #24
  401390:	af00      	add	r7, sp, #0
  401392:	60f8      	str	r0, [r7, #12]
  401394:	607a      	str	r2, [r7, #4]
  401396:	603b      	str	r3, [r7, #0]
  401398:	460b      	mov	r3, r1
  40139a:	72fb      	strb	r3, [r7, #11]
	uint32_t vco_hz;

	Assert(e_src < PLL_NR_SOURCES);

	/* Calculate internal VCO frequency */
	vco_hz = osc_get_rate(e_src) / ul_div;
  40139c:	7afb      	ldrb	r3, [r7, #11]
  40139e:	4618      	mov	r0, r3
  4013a0:	4b0d      	ldr	r3, [pc, #52]	; (4013d8 <pll_config_init+0x4c>)
  4013a2:	4798      	blx	r3
  4013a4:	4602      	mov	r2, r0
  4013a6:	687b      	ldr	r3, [r7, #4]
  4013a8:	fbb2 f3f3 	udiv	r3, r2, r3
  4013ac:	617b      	str	r3, [r7, #20]
	Assert(vco_hz >= PLL_INPUT_MIN_HZ);
	Assert(vco_hz <= PLL_INPUT_MAX_HZ);

	vco_hz *= ul_mul;
  4013ae:	697b      	ldr	r3, [r7, #20]
  4013b0:	683a      	ldr	r2, [r7, #0]
  4013b2:	fb02 f303 	mul.w	r3, r2, r3
  4013b6:	617b      	str	r3, [r7, #20]
	Assert(vco_hz >= PLL_OUTPUT_MIN_HZ);
	Assert(vco_hz <= PLL_OUTPUT_MAX_HZ);

	/* PMC hardware will automatically make it mul+1 */
	p_cfg->ctrl = CKGR_PLLAR_MULA(ul_mul - 1) | CKGR_PLLAR_DIVA(ul_div) | CKGR_PLLAR_PLLACOUNT(PLL_COUNT);
  4013b8:	683b      	ldr	r3, [r7, #0]
  4013ba:	3b01      	subs	r3, #1
  4013bc:	041a      	lsls	r2, r3, #16
  4013be:	4b07      	ldr	r3, [pc, #28]	; (4013dc <pll_config_init+0x50>)
  4013c0:	4013      	ands	r3, r2
  4013c2:	687a      	ldr	r2, [r7, #4]
  4013c4:	b2d2      	uxtb	r2, r2
  4013c6:	4313      	orrs	r3, r2
  4013c8:	f443 527c 	orr.w	r2, r3, #16128	; 0x3f00
  4013cc:	68fb      	ldr	r3, [r7, #12]
  4013ce:	601a      	str	r2, [r3, #0]
}
  4013d0:	bf00      	nop
  4013d2:	3718      	adds	r7, #24
  4013d4:	46bd      	mov	sp, r7
  4013d6:	bd80      	pop	{r7, pc}
  4013d8:	004012ed 	.word	0x004012ed
  4013dc:	07ff0000 	.word	0x07ff0000

004013e0 <pll_enable>:
		PMC->CKGR_PLLBR = p_cfg->ctrl;
	}
}

static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
  4013e0:	b580      	push	{r7, lr}
  4013e2:	b082      	sub	sp, #8
  4013e4:	af00      	add	r7, sp, #0
  4013e6:	6078      	str	r0, [r7, #4]
  4013e8:	6039      	str	r1, [r7, #0]
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
  4013ea:	683b      	ldr	r3, [r7, #0]
  4013ec:	2b00      	cmp	r3, #0
  4013ee:	d108      	bne.n	401402 <pll_enable+0x22>
		pmc_disable_pllack(); // Always stop PLL first!
  4013f0:	4b09      	ldr	r3, [pc, #36]	; (401418 <pll_enable+0x38>)
  4013f2:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  4013f4:	4a09      	ldr	r2, [pc, #36]	; (40141c <pll_enable+0x3c>)
  4013f6:	687b      	ldr	r3, [r7, #4]
  4013f8:	681b      	ldr	r3, [r3, #0]
  4013fa:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
  4013fe:	6293      	str	r3, [r2, #40]	; 0x28
	} else {
		pmc_disable_pllbck();
		PMC->CKGR_PLLBR = p_cfg->ctrl;
	}
}
  401400:	e005      	b.n	40140e <pll_enable+0x2e>
		pmc_disable_pllbck();
  401402:	4b07      	ldr	r3, [pc, #28]	; (401420 <pll_enable+0x40>)
  401404:	4798      	blx	r3
		PMC->CKGR_PLLBR = p_cfg->ctrl;
  401406:	4a05      	ldr	r2, [pc, #20]	; (40141c <pll_enable+0x3c>)
  401408:	687b      	ldr	r3, [r7, #4]
  40140a:	681b      	ldr	r3, [r3, #0]
  40140c:	62d3      	str	r3, [r2, #44]	; 0x2c
}
  40140e:	bf00      	nop
  401410:	3708      	adds	r7, #8
  401412:	46bd      	mov	sp, r7
  401414:	bd80      	pop	{r7, pc}
  401416:	bf00      	nop
  401418:	00401c2d 	.word	0x00401c2d
  40141c:	400e0400 	.word	0x400e0400
  401420:	00401c5d 	.word	0x00401c5d

00401424 <pll_is_locked>:
		pmc_disable_pllbck();
	}
}

static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
  401424:	b580      	push	{r7, lr}
  401426:	b082      	sub	sp, #8
  401428:	af00      	add	r7, sp, #0
  40142a:	6078      	str	r0, [r7, #4]
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
  40142c:	687b      	ldr	r3, [r7, #4]
  40142e:	2b00      	cmp	r3, #0
  401430:	d103      	bne.n	40143a <pll_is_locked+0x16>
		return pmc_is_locked_pllack();
  401432:	4b05      	ldr	r3, [pc, #20]	; (401448 <pll_is_locked+0x24>)
  401434:	4798      	blx	r3
  401436:	4603      	mov	r3, r0
  401438:	e002      	b.n	401440 <pll_is_locked+0x1c>
	} else {
		return pmc_is_locked_pllbck();
  40143a:	4b04      	ldr	r3, [pc, #16]	; (40144c <pll_is_locked+0x28>)
  40143c:	4798      	blx	r3
  40143e:	4603      	mov	r3, r0
	}
}
  401440:	4618      	mov	r0, r3
  401442:	3708      	adds	r7, #8
  401444:	46bd      	mov	sp, r7
  401446:	bd80      	pop	{r7, pc}
  401448:	00401c45 	.word	0x00401c45
  40144c:	00401c75 	.word	0x00401c75

00401450 <pll_enable_source>:

static inline void pll_enable_source(enum pll_source e_src)
{
  401450:	b580      	push	{r7, lr}
  401452:	b082      	sub	sp, #8
  401454:	af00      	add	r7, sp, #0
  401456:	4603      	mov	r3, r0
  401458:	71fb      	strb	r3, [r7, #7]
	switch (e_src) {
  40145a:	79fb      	ldrb	r3, [r7, #7]
  40145c:	3b03      	subs	r3, #3
  40145e:	2b04      	cmp	r3, #4
  401460:	d808      	bhi.n	401474 <pll_enable_source+0x24>
	case PLL_SRC_MAINCK_4M_RC:
	case PLL_SRC_MAINCK_8M_RC:
	case PLL_SRC_MAINCK_12M_RC:
	case PLL_SRC_MAINCK_XTAL:
	case PLL_SRC_MAINCK_BYPASS:
		osc_enable(e_src);
  401462:	79fb      	ldrb	r3, [r7, #7]
  401464:	4618      	mov	r0, r3
  401466:	4b06      	ldr	r3, [pc, #24]	; (401480 <pll_enable_source+0x30>)
  401468:	4798      	blx	r3
		osc_wait_ready(e_src);
  40146a:	79fb      	ldrb	r3, [r7, #7]
  40146c:	4618      	mov	r0, r3
  40146e:	4b05      	ldr	r3, [pc, #20]	; (401484 <pll_enable_source+0x34>)
  401470:	4798      	blx	r3
		break;
  401472:	e000      	b.n	401476 <pll_enable_source+0x26>

	default:
		Assert(false);
		break;
  401474:	bf00      	nop
	}
}
  401476:	bf00      	nop
  401478:	3708      	adds	r7, #8
  40147a:	46bd      	mov	sp, r7
  40147c:	bd80      	pop	{r7, pc}
  40147e:	bf00      	nop
  401480:	004011f5 	.word	0x004011f5
  401484:	00401361 	.word	0x00401361

00401488 <pll_wait_for_lock>:
 *
 * \retval STATUS_OK The PLL is now locked.
 * \retval ERR_TIMEOUT Timed out waiting for PLL to become locked.
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
  401488:	b580      	push	{r7, lr}
  40148a:	b082      	sub	sp, #8
  40148c:	af00      	add	r7, sp, #0
  40148e:	6078      	str	r0, [r7, #4]
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  401490:	bf00      	nop
  401492:	6878      	ldr	r0, [r7, #4]
  401494:	4b04      	ldr	r3, [pc, #16]	; (4014a8 <pll_wait_for_lock+0x20>)
  401496:	4798      	blx	r3
  401498:	4603      	mov	r3, r0
  40149a:	2b00      	cmp	r3, #0
  40149c:	d0f9      	beq.n	401492 <pll_wait_for_lock+0xa>
		/* Do nothing */
	}

	return 0;
  40149e:	2300      	movs	r3, #0
}
  4014a0:	4618      	mov	r0, r3
  4014a2:	3708      	adds	r7, #8
  4014a4:	46bd      	mov	sp, r7
  4014a6:	bd80      	pop	{r7, pc}
  4014a8:	00401425 	.word	0x00401425

004014ac <sysclk_get_main_hz>:
{
  4014ac:	b580      	push	{r7, lr}
  4014ae:	af00      	add	r7, sp, #0
		return pll_get_default_rate(0);
  4014b0:	2006      	movs	r0, #6
  4014b2:	4b04      	ldr	r3, [pc, #16]	; (4014c4 <sysclk_get_main_hz+0x18>)
  4014b4:	4798      	blx	r3
  4014b6:	4602      	mov	r2, r0
  4014b8:	4613      	mov	r3, r2
  4014ba:	009b      	lsls	r3, r3, #2
  4014bc:	4413      	add	r3, r2
  4014be:	009b      	lsls	r3, r3, #2
}
  4014c0:	4618      	mov	r0, r3
  4014c2:	bd80      	pop	{r7, pc}
  4014c4:	004012ed 	.word	0x004012ed

004014c8 <sysclk_get_cpu_hz>:
{
  4014c8:	b580      	push	{r7, lr}
  4014ca:	af00      	add	r7, sp, #0
	return sysclk_get_main_hz() /
  4014cc:	4b02      	ldr	r3, [pc, #8]	; (4014d8 <sysclk_get_cpu_hz+0x10>)
  4014ce:	4798      	blx	r3
  4014d0:	4603      	mov	r3, r0
  4014d2:	085b      	lsrs	r3, r3, #1
}
  4014d4:	4618      	mov	r0, r3
  4014d6:	bd80      	pop	{r7, pc}
  4014d8:	004014ad 	.word	0x004014ad

004014dc <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  4014dc:	b590      	push	{r4, r7, lr}
  4014de:	b083      	sub	sp, #12
  4014e0:	af00      	add	r7, sp, #0
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  4014e2:	4811      	ldr	r0, [pc, #68]	; (401528 <sysclk_init+0x4c>)
  4014e4:	4b11      	ldr	r3, [pc, #68]	; (40152c <sysclk_init+0x50>)
  4014e6:	4798      	blx	r3

#ifdef CONFIG_PLL0_SOURCE
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		struct pll_config pllcfg;

		pll_enable_source(CONFIG_PLL0_SOURCE);
  4014e8:	2006      	movs	r0, #6
  4014ea:	4b11      	ldr	r3, [pc, #68]	; (401530 <sysclk_init+0x54>)
  4014ec:	4798      	blx	r3
		pll_config_defaults(&pllcfg, 0);
  4014ee:	1d38      	adds	r0, r7, #4
  4014f0:	2314      	movs	r3, #20
  4014f2:	2201      	movs	r2, #1
  4014f4:	2106      	movs	r1, #6
  4014f6:	4c0f      	ldr	r4, [pc, #60]	; (401534 <sysclk_init+0x58>)
  4014f8:	47a0      	blx	r4
		pll_enable(&pllcfg, 0);
  4014fa:	1d3b      	adds	r3, r7, #4
  4014fc:	2100      	movs	r1, #0
  4014fe:	4618      	mov	r0, r3
  401500:	4b0d      	ldr	r3, [pc, #52]	; (401538 <sysclk_init+0x5c>)
  401502:	4798      	blx	r3
		pll_wait_for_lock(0);
  401504:	2000      	movs	r0, #0
  401506:	4b0d      	ldr	r3, [pc, #52]	; (40153c <sysclk_init+0x60>)
  401508:	4798      	blx	r3
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  40150a:	2010      	movs	r0, #16
  40150c:	4b0c      	ldr	r3, [pc, #48]	; (401540 <sysclk_init+0x64>)
  40150e:	4798      	blx	r3
		pmc_switch_mck_to_pllbck(CONFIG_SYSCLK_PRES);
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  401510:	4b0c      	ldr	r3, [pc, #48]	; (401544 <sysclk_init+0x68>)
  401512:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  401514:	4b0c      	ldr	r3, [pc, #48]	; (401548 <sysclk_init+0x6c>)
  401516:	4798      	blx	r3
  401518:	4603      	mov	r3, r0
  40151a:	4618      	mov	r0, r3
  40151c:	4b03      	ldr	r3, [pc, #12]	; (40152c <sysclk_init+0x50>)
  40151e:	4798      	blx	r3

#if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
	/* Signal that the internal frequencies are setup */
	sysclk_initialized = 1;
#endif
}
  401520:	bf00      	nop
  401522:	370c      	adds	r7, #12
  401524:	46bd      	mov	sp, r7
  401526:	bd90      	pop	{r4, r7, pc}
  401528:	07270e00 	.word	0x07270e00
  40152c:	004022f1 	.word	0x004022f1
  401530:	00401451 	.word	0x00401451
  401534:	0040138d 	.word	0x0040138d
  401538:	004013e1 	.word	0x004013e1
  40153c:	00401489 	.word	0x00401489
  401540:	00401a41 	.word	0x00401a41
  401544:	00402159 	.word	0x00402159
  401548:	004014c9 	.word	0x004014c9

0040154c <pio_pull_up>:
 * \param ul_pull_up_enable Indicates if the pin(s) internal pull-up shall be
 * configured.
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
  40154c:	b480      	push	{r7}
  40154e:	b085      	sub	sp, #20
  401550:	af00      	add	r7, sp, #0
  401552:	60f8      	str	r0, [r7, #12]
  401554:	60b9      	str	r1, [r7, #8]
  401556:	607a      	str	r2, [r7, #4]
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  401558:	687b      	ldr	r3, [r7, #4]
  40155a:	2b00      	cmp	r3, #0
  40155c:	d003      	beq.n	401566 <pio_pull_up+0x1a>
		p_pio->PIO_PUER = ul_mask;
  40155e:	68fb      	ldr	r3, [r7, #12]
  401560:	68ba      	ldr	r2, [r7, #8]
  401562:	665a      	str	r2, [r3, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
	}
}
  401564:	e002      	b.n	40156c <pio_pull_up+0x20>
		p_pio->PIO_PUDR = ul_mask;
  401566:	68fb      	ldr	r3, [r7, #12]
  401568:	68ba      	ldr	r2, [r7, #8]
  40156a:	661a      	str	r2, [r3, #96]	; 0x60
}
  40156c:	bf00      	nop
  40156e:	3714      	adds	r7, #20
  401570:	46bd      	mov	sp, r7
  401572:	bc80      	pop	{r7}
  401574:	4770      	bx	lr

00401576 <pio_set_debounce_filter>:
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 * \param ul_cut_off Cuts off frequency for debouncing filter.
 */
void pio_set_debounce_filter(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_cut_off)
{
  401576:	b480      	push	{r7}
  401578:	b085      	sub	sp, #20
  40157a:	af00      	add	r7, sp, #0
  40157c:	60f8      	str	r0, [r7, #12]
  40157e:	60b9      	str	r1, [r7, #8]
  401580:	607a      	str	r2, [r7, #4]
#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	/* Set Debouncing, 0 bit field no effect */
	p_pio->PIO_IFSCER = ul_mask;
  401582:	68fb      	ldr	r3, [r7, #12]
  401584:	68ba      	ldr	r2, [r7, #8]
  401586:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
	/*
	 * The debouncing filter can filter a pulse of less than 1/2 Period of a
	 * programmable Divided Slow Clock:
	 * Tdiv_slclk = ((DIV+1)*2).Tslow_clock
	 */
	p_pio->PIO_SCDR = PIO_SCDR_DIV((FREQ_SLOW_CLOCK_EXT /
  40158a:	687b      	ldr	r3, [r7, #4]
  40158c:	005b      	lsls	r3, r3, #1
  40158e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  401592:	fbb2 f3f3 	udiv	r3, r2, r3
  401596:	3b01      	subs	r3, #1
  401598:	f3c3 020d 	ubfx	r2, r3, #0, #14
  40159c:	68fb      	ldr	r3, [r7, #12]
  40159e:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
			(2 * (ul_cut_off))) - 1);
}
  4015a2:	bf00      	nop
  4015a4:	3714      	adds	r7, #20
  4015a6:	46bd      	mov	sp, r7
  4015a8:	bc80      	pop	{r7}
  4015aa:	4770      	bx	lr

004015ac <pio_set_peripheral>:
 * \param ul_type PIO type.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set_peripheral(Pio *p_pio, const pio_type_t ul_type,
		const uint32_t ul_mask)
{
  4015ac:	b480      	push	{r7}
  4015ae:	b087      	sub	sp, #28
  4015b0:	af00      	add	r7, sp, #0
  4015b2:	60f8      	str	r0, [r7, #12]
  4015b4:	60b9      	str	r1, [r7, #8]
  4015b6:	607a      	str	r2, [r7, #4]
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  4015b8:	68fb      	ldr	r3, [r7, #12]
  4015ba:	687a      	ldr	r2, [r7, #4]
  4015bc:	645a      	str	r2, [r3, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  4015be:	68bb      	ldr	r3, [r7, #8]
  4015c0:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  4015c4:	d04a      	beq.n	40165c <pio_set_peripheral+0xb0>
  4015c6:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  4015ca:	d808      	bhi.n	4015de <pio_set_peripheral+0x32>
  4015cc:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  4015d0:	d016      	beq.n	401600 <pio_set_peripheral+0x54>
  4015d2:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  4015d6:	d02c      	beq.n	401632 <pio_set_peripheral+0x86>
  4015d8:	2b00      	cmp	r3, #0
  4015da:	d069      	beq.n	4016b0 <pio_set_peripheral+0x104>
  4015dc:	e064      	b.n	4016a8 <pio_set_peripheral+0xfc>
  4015de:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  4015e2:	d065      	beq.n	4016b0 <pio_set_peripheral+0x104>
  4015e4:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  4015e8:	d803      	bhi.n	4015f2 <pio_set_peripheral+0x46>
  4015ea:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  4015ee:	d04a      	beq.n	401686 <pio_set_peripheral+0xda>
  4015f0:	e05a      	b.n	4016a8 <pio_set_peripheral+0xfc>
  4015f2:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  4015f6:	d05b      	beq.n	4016b0 <pio_set_peripheral+0x104>
  4015f8:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  4015fc:	d058      	beq.n	4016b0 <pio_set_peripheral+0x104>
  4015fe:	e053      	b.n	4016a8 <pio_set_peripheral+0xfc>
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABCDSR[0];
  401600:	68fb      	ldr	r3, [r7, #12]
  401602:	6f1b      	ldr	r3, [r3, #112]	; 0x70
  401604:	617b      	str	r3, [r7, #20]
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  401606:	68fb      	ldr	r3, [r7, #12]
  401608:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  40160a:	687b      	ldr	r3, [r7, #4]
  40160c:	43d9      	mvns	r1, r3
  40160e:	697b      	ldr	r3, [r7, #20]
  401610:	400b      	ands	r3, r1
  401612:	401a      	ands	r2, r3
  401614:	68fb      	ldr	r3, [r7, #12]
  401616:	671a      	str	r2, [r3, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  401618:	68fb      	ldr	r3, [r7, #12]
  40161a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
  40161c:	617b      	str	r3, [r7, #20]
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  40161e:	68fb      	ldr	r3, [r7, #12]
  401620:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  401622:	687b      	ldr	r3, [r7, #4]
  401624:	43d9      	mvns	r1, r3
  401626:	697b      	ldr	r3, [r7, #20]
  401628:	400b      	ands	r3, r1
  40162a:	401a      	ands	r2, r3
  40162c:	68fb      	ldr	r3, [r7, #12]
  40162e:	675a      	str	r2, [r3, #116]	; 0x74
		break;
  401630:	e03a      	b.n	4016a8 <pio_set_peripheral+0xfc>
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  401632:	68fb      	ldr	r3, [r7, #12]
  401634:	6f1b      	ldr	r3, [r3, #112]	; 0x70
  401636:	617b      	str	r3, [r7, #20]
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  401638:	687a      	ldr	r2, [r7, #4]
  40163a:	697b      	ldr	r3, [r7, #20]
  40163c:	431a      	orrs	r2, r3
  40163e:	68fb      	ldr	r3, [r7, #12]
  401640:	671a      	str	r2, [r3, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  401642:	68fb      	ldr	r3, [r7, #12]
  401644:	6f5b      	ldr	r3, [r3, #116]	; 0x74
  401646:	617b      	str	r3, [r7, #20]
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  401648:	68fb      	ldr	r3, [r7, #12]
  40164a:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  40164c:	687b      	ldr	r3, [r7, #4]
  40164e:	43d9      	mvns	r1, r3
  401650:	697b      	ldr	r3, [r7, #20]
  401652:	400b      	ands	r3, r1
  401654:	401a      	ands	r2, r3
  401656:	68fb      	ldr	r3, [r7, #12]
  401658:	675a      	str	r2, [r3, #116]	; 0x74
		break;
  40165a:	e025      	b.n	4016a8 <pio_set_peripheral+0xfc>
#if (!SAMG)
	case PIO_PERIPH_C:
		ul_sr = p_pio->PIO_ABCDSR[0];
  40165c:	68fb      	ldr	r3, [r7, #12]
  40165e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
  401660:	617b      	str	r3, [r7, #20]
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  401662:	68fb      	ldr	r3, [r7, #12]
  401664:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  401666:	687b      	ldr	r3, [r7, #4]
  401668:	43d9      	mvns	r1, r3
  40166a:	697b      	ldr	r3, [r7, #20]
  40166c:	400b      	ands	r3, r1
  40166e:	401a      	ands	r2, r3
  401670:	68fb      	ldr	r3, [r7, #12]
  401672:	671a      	str	r2, [r3, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  401674:	68fb      	ldr	r3, [r7, #12]
  401676:	6f5b      	ldr	r3, [r3, #116]	; 0x74
  401678:	617b      	str	r3, [r7, #20]
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  40167a:	687a      	ldr	r2, [r7, #4]
  40167c:	697b      	ldr	r3, [r7, #20]
  40167e:	431a      	orrs	r2, r3
  401680:	68fb      	ldr	r3, [r7, #12]
  401682:	675a      	str	r2, [r3, #116]	; 0x74
		break;
  401684:	e010      	b.n	4016a8 <pio_set_peripheral+0xfc>
	case PIO_PERIPH_D:
		ul_sr = p_pio->PIO_ABCDSR[0];
  401686:	68fb      	ldr	r3, [r7, #12]
  401688:	6f1b      	ldr	r3, [r3, #112]	; 0x70
  40168a:	617b      	str	r3, [r7, #20]
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  40168c:	687a      	ldr	r2, [r7, #4]
  40168e:	697b      	ldr	r3, [r7, #20]
  401690:	431a      	orrs	r2, r3
  401692:	68fb      	ldr	r3, [r7, #12]
  401694:	671a      	str	r2, [r3, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  401696:	68fb      	ldr	r3, [r7, #12]
  401698:	6f5b      	ldr	r3, [r3, #116]	; 0x74
  40169a:	617b      	str	r3, [r7, #20]
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  40169c:	687a      	ldr	r2, [r7, #4]
  40169e:	697b      	ldr	r3, [r7, #20]
  4016a0:	431a      	orrs	r2, r3
  4016a2:	68fb      	ldr	r3, [r7, #12]
  4016a4:	675a      	str	r2, [r3, #116]	; 0x74
		break;
  4016a6:	bf00      	nop
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  4016a8:	68fb      	ldr	r3, [r7, #12]
  4016aa:	687a      	ldr	r2, [r7, #4]
  4016ac:	605a      	str	r2, [r3, #4]
  4016ae:	e000      	b.n	4016b2 <pio_set_peripheral+0x106>
		return;
  4016b0:	bf00      	nop
}
  4016b2:	371c      	adds	r7, #28
  4016b4:	46bd      	mov	sp, r7
  4016b6:	bc80      	pop	{r7}
  4016b8:	4770      	bx	lr
	...

004016bc <pio_set_input>:
 * \param ul_mask Bitmask indicating which pin(s) to configure as input(s).
 * \param ul_attribute PIO attribute(s).
 */
void pio_set_input(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_attribute)
{
  4016bc:	b580      	push	{r7, lr}
  4016be:	b084      	sub	sp, #16
  4016c0:	af00      	add	r7, sp, #0
  4016c2:	60f8      	str	r0, [r7, #12]
  4016c4:	60b9      	str	r1, [r7, #8]
  4016c6:	607a      	str	r2, [r7, #4]
	pio_disable_interrupt(p_pio, ul_mask);
  4016c8:	68b9      	ldr	r1, [r7, #8]
  4016ca:	68f8      	ldr	r0, [r7, #12]
  4016cc:	4b19      	ldr	r3, [pc, #100]	; (401734 <pio_set_input+0x78>)
  4016ce:	4798      	blx	r3
	pio_pull_up(p_pio, ul_mask, ul_attribute & PIO_PULLUP);
  4016d0:	687b      	ldr	r3, [r7, #4]
  4016d2:	f003 0301 	and.w	r3, r3, #1
  4016d6:	461a      	mov	r2, r3
  4016d8:	68b9      	ldr	r1, [r7, #8]
  4016da:	68f8      	ldr	r0, [r7, #12]
  4016dc:	4b16      	ldr	r3, [pc, #88]	; (401738 <pio_set_input+0x7c>)
  4016de:	4798      	blx	r3

	/* Enable Input Filter if necessary */
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  4016e0:	687b      	ldr	r3, [r7, #4]
  4016e2:	f003 030a 	and.w	r3, r3, #10
  4016e6:	2b00      	cmp	r3, #0
  4016e8:	d003      	beq.n	4016f2 <pio_set_input+0x36>
		p_pio->PIO_IFER = ul_mask;
  4016ea:	68fb      	ldr	r3, [r7, #12]
  4016ec:	68ba      	ldr	r2, [r7, #8]
  4016ee:	621a      	str	r2, [r3, #32]
  4016f0:	e002      	b.n	4016f8 <pio_set_input+0x3c>
	} else {
		p_pio->PIO_IFDR = ul_mask;
  4016f2:	68fb      	ldr	r3, [r7, #12]
  4016f4:	68ba      	ldr	r2, [r7, #8]
  4016f6:	625a      	str	r2, [r3, #36]	; 0x24
	}

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	/* Enable de-glitch or de-bounce if necessary */
	if (ul_attribute & PIO_DEGLITCH) {
  4016f8:	687b      	ldr	r3, [r7, #4]
  4016fa:	f003 0302 	and.w	r3, r3, #2
  4016fe:	2b00      	cmp	r3, #0
  401700:	d004      	beq.n	40170c <pio_set_input+0x50>
		p_pio->PIO_IFSCDR = ul_mask;
  401702:	68fb      	ldr	r3, [r7, #12]
  401704:	68ba      	ldr	r2, [r7, #8]
  401706:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  40170a:	e008      	b.n	40171e <pio_set_input+0x62>
	} else {
		if (ul_attribute & PIO_DEBOUNCE) {
  40170c:	687b      	ldr	r3, [r7, #4]
  40170e:	f003 0308 	and.w	r3, r3, #8
  401712:	2b00      	cmp	r3, #0
  401714:	d003      	beq.n	40171e <pio_set_input+0x62>
			p_pio->PIO_IFSCER = ul_mask;
  401716:	68fb      	ldr	r3, [r7, #12]
  401718:	68ba      	ldr	r2, [r7, #8]
  40171a:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
#else
#error "Unsupported device"
#endif

	/* Configure pin as input */
	p_pio->PIO_ODR = ul_mask;
  40171e:	68fb      	ldr	r3, [r7, #12]
  401720:	68ba      	ldr	r2, [r7, #8]
  401722:	615a      	str	r2, [r3, #20]
	p_pio->PIO_PER = ul_mask;
  401724:	68fb      	ldr	r3, [r7, #12]
  401726:	68ba      	ldr	r2, [r7, #8]
  401728:	601a      	str	r2, [r3, #0]
}
  40172a:	bf00      	nop
  40172c:	3710      	adds	r7, #16
  40172e:	46bd      	mov	sp, r7
  401730:	bd80      	pop	{r7, pc}
  401732:	bf00      	nop
  401734:	00401825 	.word	0x00401825
  401738:	0040154d 	.word	0x0040154d

0040173c <pio_set_output>:
 */
void pio_set_output(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_default_level,
		const uint32_t ul_multidrive_enable,
		const uint32_t ul_pull_up_enable)
{
  40173c:	b580      	push	{r7, lr}
  40173e:	b084      	sub	sp, #16
  401740:	af00      	add	r7, sp, #0
  401742:	60f8      	str	r0, [r7, #12]
  401744:	60b9      	str	r1, [r7, #8]
  401746:	607a      	str	r2, [r7, #4]
  401748:	603b      	str	r3, [r7, #0]
	pio_disable_interrupt(p_pio, ul_mask);
  40174a:	68b9      	ldr	r1, [r7, #8]
  40174c:	68f8      	ldr	r0, [r7, #12]
  40174e:	4b12      	ldr	r3, [pc, #72]	; (401798 <pio_set_output+0x5c>)
  401750:	4798      	blx	r3
	pio_pull_up(p_pio, ul_mask, ul_pull_up_enable);
  401752:	69ba      	ldr	r2, [r7, #24]
  401754:	68b9      	ldr	r1, [r7, #8]
  401756:	68f8      	ldr	r0, [r7, #12]
  401758:	4b10      	ldr	r3, [pc, #64]	; (40179c <pio_set_output+0x60>)
  40175a:	4798      	blx	r3

	/* Enable multi-drive if necessary */
	if (ul_multidrive_enable) {
  40175c:	683b      	ldr	r3, [r7, #0]
  40175e:	2b00      	cmp	r3, #0
  401760:	d003      	beq.n	40176a <pio_set_output+0x2e>
		p_pio->PIO_MDER = ul_mask;
  401762:	68fb      	ldr	r3, [r7, #12]
  401764:	68ba      	ldr	r2, [r7, #8]
  401766:	651a      	str	r2, [r3, #80]	; 0x50
  401768:	e002      	b.n	401770 <pio_set_output+0x34>
	} else {
		p_pio->PIO_MDDR = ul_mask;
  40176a:	68fb      	ldr	r3, [r7, #12]
  40176c:	68ba      	ldr	r2, [r7, #8]
  40176e:	655a      	str	r2, [r3, #84]	; 0x54
	}

	/* Set default value */
	if (ul_default_level) {
  401770:	687b      	ldr	r3, [r7, #4]
  401772:	2b00      	cmp	r3, #0
  401774:	d003      	beq.n	40177e <pio_set_output+0x42>
		p_pio->PIO_SODR = ul_mask;
  401776:	68fb      	ldr	r3, [r7, #12]
  401778:	68ba      	ldr	r2, [r7, #8]
  40177a:	631a      	str	r2, [r3, #48]	; 0x30
  40177c:	e002      	b.n	401784 <pio_set_output+0x48>
	} else {
		p_pio->PIO_CODR = ul_mask;
  40177e:	68fb      	ldr	r3, [r7, #12]
  401780:	68ba      	ldr	r2, [r7, #8]
  401782:	635a      	str	r2, [r3, #52]	; 0x34
	}

	/* Configure pin(s) as output(s) */
	p_pio->PIO_OER = ul_mask;
  401784:	68fb      	ldr	r3, [r7, #12]
  401786:	68ba      	ldr	r2, [r7, #8]
  401788:	611a      	str	r2, [r3, #16]
	p_pio->PIO_PER = ul_mask;
  40178a:	68fb      	ldr	r3, [r7, #12]
  40178c:	68ba      	ldr	r2, [r7, #8]
  40178e:	601a      	str	r2, [r3, #0]
}
  401790:	bf00      	nop
  401792:	3710      	adds	r7, #16
  401794:	46bd      	mov	sp, r7
  401796:	bd80      	pop	{r7, pc}
  401798:	00401825 	.word	0x00401825
  40179c:	0040154d 	.word	0x0040154d

004017a0 <pio_configure_interrupt>:
 * \param ul_mask Interrupt source bit map.
 * \param ul_attr Interrupt source attributes.
 */
void pio_configure_interrupt(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_attr)
{
  4017a0:	b480      	push	{r7}
  4017a2:	b085      	sub	sp, #20
  4017a4:	af00      	add	r7, sp, #0
  4017a6:	60f8      	str	r0, [r7, #12]
  4017a8:	60b9      	str	r1, [r7, #8]
  4017aa:	607a      	str	r2, [r7, #4]
	/* Configure additional interrupt mode registers. */
	if (ul_attr & PIO_IT_AIME) {
  4017ac:	687b      	ldr	r3, [r7, #4]
  4017ae:	f003 0310 	and.w	r3, r3, #16
  4017b2:	2b00      	cmp	r3, #0
  4017b4:	d020      	beq.n	4017f8 <pio_configure_interrupt+0x58>
		/* Enable additional interrupt mode. */
		p_pio->PIO_AIMER = ul_mask;
  4017b6:	68fb      	ldr	r3, [r7, #12]
  4017b8:	68ba      	ldr	r2, [r7, #8]
  4017ba:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0

		/* If bit field of the selected pin is 1, set as
		   Rising Edge/High level detection event. */
		if (ul_attr & PIO_IT_RE_OR_HL) {
  4017be:	687b      	ldr	r3, [r7, #4]
  4017c0:	f003 0320 	and.w	r3, r3, #32
  4017c4:	2b00      	cmp	r3, #0
  4017c6:	d004      	beq.n	4017d2 <pio_configure_interrupt+0x32>
			/* Rising Edge or High Level */
			p_pio->PIO_REHLSR = ul_mask;
  4017c8:	68fb      	ldr	r3, [r7, #12]
  4017ca:	68ba      	ldr	r2, [r7, #8]
  4017cc:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
  4017d0:	e003      	b.n	4017da <pio_configure_interrupt+0x3a>
		} else {
			/* Falling Edge or Low Level */
			p_pio->PIO_FELLSR = ul_mask;
  4017d2:	68fb      	ldr	r3, [r7, #12]
  4017d4:	68ba      	ldr	r2, [r7, #8]
  4017d6:	f8c3 20d0 	str.w	r2, [r3, #208]	; 0xd0
		}

		/* If bit field of the selected pin is 1, set as
		   edge detection source. */
		if (ul_attr & PIO_IT_EDGE) {
  4017da:	687b      	ldr	r3, [r7, #4]
  4017dc:	f003 0340 	and.w	r3, r3, #64	; 0x40
  4017e0:	2b00      	cmp	r3, #0
  4017e2:	d004      	beq.n	4017ee <pio_configure_interrupt+0x4e>
			/* Edge select */
			p_pio->PIO_ESR = ul_mask;
  4017e4:	68fb      	ldr	r3, [r7, #12]
  4017e6:	68ba      	ldr	r2, [r7, #8]
  4017e8:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
		}
	} else {
		/* Disable additional interrupt mode. */
		p_pio->PIO_AIMDR = ul_mask;
	}
}
  4017ec:	e008      	b.n	401800 <pio_configure_interrupt+0x60>
			p_pio->PIO_LSR = ul_mask;
  4017ee:	68fb      	ldr	r3, [r7, #12]
  4017f0:	68ba      	ldr	r2, [r7, #8]
  4017f2:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
}
  4017f6:	e003      	b.n	401800 <pio_configure_interrupt+0x60>
		p_pio->PIO_AIMDR = ul_mask;
  4017f8:	68fb      	ldr	r3, [r7, #12]
  4017fa:	68ba      	ldr	r2, [r7, #8]
  4017fc:	f8c3 20b4 	str.w	r2, [r3, #180]	; 0xb4
}
  401800:	bf00      	nop
  401802:	3714      	adds	r7, #20
  401804:	46bd      	mov	sp, r7
  401806:	bc80      	pop	{r7}
  401808:	4770      	bx	lr

0040180a <pio_enable_interrupt>:
 *
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_enable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
  40180a:	b480      	push	{r7}
  40180c:	b083      	sub	sp, #12
  40180e:	af00      	add	r7, sp, #0
  401810:	6078      	str	r0, [r7, #4]
  401812:	6039      	str	r1, [r7, #0]
	p_pio->PIO_IER = ul_mask;
  401814:	687b      	ldr	r3, [r7, #4]
  401816:	683a      	ldr	r2, [r7, #0]
  401818:	641a      	str	r2, [r3, #64]	; 0x40
}
  40181a:	bf00      	nop
  40181c:	370c      	adds	r7, #12
  40181e:	46bd      	mov	sp, r7
  401820:	bc80      	pop	{r7}
  401822:	4770      	bx	lr

00401824 <pio_disable_interrupt>:
 *
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
  401824:	b480      	push	{r7}
  401826:	b083      	sub	sp, #12
  401828:	af00      	add	r7, sp, #0
  40182a:	6078      	str	r0, [r7, #4]
  40182c:	6039      	str	r1, [r7, #0]
	p_pio->PIO_IDR = ul_mask;
  40182e:	687b      	ldr	r3, [r7, #4]
  401830:	683a      	ldr	r2, [r7, #0]
  401832:	645a      	str	r2, [r3, #68]	; 0x44
}
  401834:	bf00      	nop
  401836:	370c      	adds	r7, #12
  401838:	46bd      	mov	sp, r7
  40183a:	bc80      	pop	{r7}
  40183c:	4770      	bx	lr

0040183e <pio_get_interrupt_status>:
 * \param p_pio Pointer to a PIO instance.
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
  40183e:	b480      	push	{r7}
  401840:	b083      	sub	sp, #12
  401842:	af00      	add	r7, sp, #0
  401844:	6078      	str	r0, [r7, #4]
	return p_pio->PIO_ISR;
  401846:	687b      	ldr	r3, [r7, #4]
  401848:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
}
  40184a:	4618      	mov	r0, r3
  40184c:	370c      	adds	r7, #12
  40184e:	46bd      	mov	sp, r7
  401850:	bc80      	pop	{r7}
  401852:	4770      	bx	lr

00401854 <pio_get_interrupt_mask>:
 * \param p_pio Pointer to a PIO instance.
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
  401854:	b480      	push	{r7}
  401856:	b083      	sub	sp, #12
  401858:	af00      	add	r7, sp, #0
  40185a:	6078      	str	r0, [r7, #4]
	return p_pio->PIO_IMR;
  40185c:	687b      	ldr	r3, [r7, #4]
  40185e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
}
  401860:	4618      	mov	r0, r3
  401862:	370c      	adds	r7, #12
  401864:	46bd      	mov	sp, r7
  401866:	bc80      	pop	{r7}
  401868:	4770      	bx	lr
	...

0040186c <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
  40186c:	b590      	push	{r4, r7, lr}
  40186e:	b087      	sub	sp, #28
  401870:	af02      	add	r7, sp, #8
  401872:	6078      	str	r0, [r7, #4]
  401874:	6039      	str	r1, [r7, #0]
	Pio *p_pio = pio_get_pin_group(ul_pin);
  401876:	6878      	ldr	r0, [r7, #4]
  401878:	4b63      	ldr	r3, [pc, #396]	; (401a08 <pio_configure_pin+0x19c>)
  40187a:	4798      	blx	r3
  40187c:	60f8      	str	r0, [r7, #12]

	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
  40187e:	683b      	ldr	r3, [r7, #0]
  401880:	f003 43f0 	and.w	r3, r3, #2013265920	; 0x78000000
  401884:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  401888:	d067      	beq.n	40195a <pio_configure_pin+0xee>
  40188a:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  40188e:	d809      	bhi.n	4018a4 <pio_configure_pin+0x38>
  401890:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  401894:	d02b      	beq.n	4018ee <pio_configure_pin+0x82>
  401896:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  40189a:	d043      	beq.n	401924 <pio_configure_pin+0xb8>
  40189c:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  4018a0:	d00a      	beq.n	4018b8 <pio_configure_pin+0x4c>
  4018a2:	e0a9      	b.n	4019f8 <pio_configure_pin+0x18c>
  4018a4:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  4018a8:	d07e      	beq.n	4019a8 <pio_configure_pin+0x13c>
  4018aa:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  4018ae:	d07b      	beq.n	4019a8 <pio_configure_pin+0x13c>
  4018b0:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  4018b4:	d06c      	beq.n	401990 <pio_configure_pin+0x124>
  4018b6:	e09f      	b.n	4019f8 <pio_configure_pin+0x18c>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
  4018b8:	687b      	ldr	r3, [r7, #4]
  4018ba:	f003 031f 	and.w	r3, r3, #31
  4018be:	2201      	movs	r2, #1
  4018c0:	fa02 f303 	lsl.w	r3, r2, r3
  4018c4:	461a      	mov	r2, r3
  4018c6:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4018ca:	68f8      	ldr	r0, [r7, #12]
  4018cc:	4b4f      	ldr	r3, [pc, #316]	; (401a0c <pio_configure_pin+0x1a0>)
  4018ce:	4798      	blx	r3
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
  4018d0:	687b      	ldr	r3, [r7, #4]
  4018d2:	f003 031f 	and.w	r3, r3, #31
  4018d6:	2201      	movs	r2, #1
  4018d8:	fa02 f303 	lsl.w	r3, r2, r3
  4018dc:	4619      	mov	r1, r3
  4018de:	683b      	ldr	r3, [r7, #0]
  4018e0:	f003 0301 	and.w	r3, r3, #1
  4018e4:	461a      	mov	r2, r3
  4018e6:	68f8      	ldr	r0, [r7, #12]
  4018e8:	4b49      	ldr	r3, [pc, #292]	; (401a10 <pio_configure_pin+0x1a4>)
  4018ea:	4798      	blx	r3
				(ul_flags & PIO_PULLUP));
		break;
  4018ec:	e086      	b.n	4019fc <pio_configure_pin+0x190>
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  4018ee:	687b      	ldr	r3, [r7, #4]
  4018f0:	f003 031f 	and.w	r3, r3, #31
  4018f4:	2201      	movs	r2, #1
  4018f6:	fa02 f303 	lsl.w	r3, r2, r3
  4018fa:	461a      	mov	r2, r3
  4018fc:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  401900:	68f8      	ldr	r0, [r7, #12]
  401902:	4b42      	ldr	r3, [pc, #264]	; (401a0c <pio_configure_pin+0x1a0>)
  401904:	4798      	blx	r3
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
  401906:	687b      	ldr	r3, [r7, #4]
  401908:	f003 031f 	and.w	r3, r3, #31
  40190c:	2201      	movs	r2, #1
  40190e:	fa02 f303 	lsl.w	r3, r2, r3
  401912:	4619      	mov	r1, r3
  401914:	683b      	ldr	r3, [r7, #0]
  401916:	f003 0301 	and.w	r3, r3, #1
  40191a:	461a      	mov	r2, r3
  40191c:	68f8      	ldr	r0, [r7, #12]
  40191e:	4b3c      	ldr	r3, [pc, #240]	; (401a10 <pio_configure_pin+0x1a4>)
  401920:	4798      	blx	r3
				(ul_flags & PIO_PULLUP));
		break;
  401922:	e06b      	b.n	4019fc <pio_configure_pin+0x190>
#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	case PIO_TYPE_PIO_PERIPH_C:
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
  401924:	687b      	ldr	r3, [r7, #4]
  401926:	f003 031f 	and.w	r3, r3, #31
  40192a:	2201      	movs	r2, #1
  40192c:	fa02 f303 	lsl.w	r3, r2, r3
  401930:	461a      	mov	r2, r3
  401932:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  401936:	68f8      	ldr	r0, [r7, #12]
  401938:	4b34      	ldr	r3, [pc, #208]	; (401a0c <pio_configure_pin+0x1a0>)
  40193a:	4798      	blx	r3
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
  40193c:	687b      	ldr	r3, [r7, #4]
  40193e:	f003 031f 	and.w	r3, r3, #31
  401942:	2201      	movs	r2, #1
  401944:	fa02 f303 	lsl.w	r3, r2, r3
  401948:	4619      	mov	r1, r3
  40194a:	683b      	ldr	r3, [r7, #0]
  40194c:	f003 0301 	and.w	r3, r3, #1
  401950:	461a      	mov	r2, r3
  401952:	68f8      	ldr	r0, [r7, #12]
  401954:	4b2e      	ldr	r3, [pc, #184]	; (401a10 <pio_configure_pin+0x1a4>)
  401956:	4798      	blx	r3
				(ul_flags & PIO_PULLUP));
		break;
  401958:	e050      	b.n	4019fc <pio_configure_pin+0x190>
	case PIO_TYPE_PIO_PERIPH_D:
		pio_set_peripheral(p_pio, PIO_PERIPH_D, (1 << (ul_pin & 0x1F)));
  40195a:	687b      	ldr	r3, [r7, #4]
  40195c:	f003 031f 	and.w	r3, r3, #31
  401960:	2201      	movs	r2, #1
  401962:	fa02 f303 	lsl.w	r3, r2, r3
  401966:	461a      	mov	r2, r3
  401968:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  40196c:	68f8      	ldr	r0, [r7, #12]
  40196e:	4b27      	ldr	r3, [pc, #156]	; (401a0c <pio_configure_pin+0x1a0>)
  401970:	4798      	blx	r3
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
  401972:	687b      	ldr	r3, [r7, #4]
  401974:	f003 031f 	and.w	r3, r3, #31
  401978:	2201      	movs	r2, #1
  40197a:	fa02 f303 	lsl.w	r3, r2, r3
  40197e:	4619      	mov	r1, r3
  401980:	683b      	ldr	r3, [r7, #0]
  401982:	f003 0301 	and.w	r3, r3, #1
  401986:	461a      	mov	r2, r3
  401988:	68f8      	ldr	r0, [r7, #12]
  40198a:	4b21      	ldr	r3, [pc, #132]	; (401a10 <pio_configure_pin+0x1a4>)
  40198c:	4798      	blx	r3
				(ul_flags & PIO_PULLUP));
		break;
  40198e:	e035      	b.n	4019fc <pio_configure_pin+0x190>
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  401990:	687b      	ldr	r3, [r7, #4]
  401992:	f003 031f 	and.w	r3, r3, #31
  401996:	2201      	movs	r2, #1
  401998:	fa02 f303 	lsl.w	r3, r2, r3
  40199c:	683a      	ldr	r2, [r7, #0]
  40199e:	4619      	mov	r1, r3
  4019a0:	68f8      	ldr	r0, [r7, #12]
  4019a2:	4b1c      	ldr	r3, [pc, #112]	; (401a14 <pio_configure_pin+0x1a8>)
  4019a4:	4798      	blx	r3
		break;
  4019a6:	e029      	b.n	4019fc <pio_configure_pin+0x190>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  4019a8:	687b      	ldr	r3, [r7, #4]
  4019aa:	f003 031f 	and.w	r3, r3, #31
  4019ae:	2201      	movs	r2, #1
  4019b0:	fa02 f303 	lsl.w	r3, r2, r3
  4019b4:	4619      	mov	r1, r3
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  4019b6:	683b      	ldr	r3, [r7, #0]
  4019b8:	f003 5360 	and.w	r3, r3, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  4019bc:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  4019c0:	bf0c      	ite	eq
  4019c2:	2301      	moveq	r3, #1
  4019c4:	2300      	movne	r3, #0
  4019c6:	b2db      	uxtb	r3, r3
  4019c8:	461a      	mov	r2, r3
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
  4019ca:	683b      	ldr	r3, [r7, #0]
  4019cc:	f003 0304 	and.w	r3, r3, #4
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  4019d0:	2b00      	cmp	r3, #0
  4019d2:	bf14      	ite	ne
  4019d4:	2301      	movne	r3, #1
  4019d6:	2300      	moveq	r3, #0
  4019d8:	b2db      	uxtb	r3, r3
  4019da:	4618      	mov	r0, r3
				(ul_flags & PIO_PULLUP) ? 1 : 0);
  4019dc:	683b      	ldr	r3, [r7, #0]
  4019de:	f003 0301 	and.w	r3, r3, #1
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  4019e2:	2b00      	cmp	r3, #0
  4019e4:	bf14      	ite	ne
  4019e6:	2301      	movne	r3, #1
  4019e8:	2300      	moveq	r3, #0
  4019ea:	b2db      	uxtb	r3, r3
  4019ec:	9300      	str	r3, [sp, #0]
  4019ee:	4603      	mov	r3, r0
  4019f0:	68f8      	ldr	r0, [r7, #12]
  4019f2:	4c09      	ldr	r4, [pc, #36]	; (401a18 <pio_configure_pin+0x1ac>)
  4019f4:	47a0      	blx	r4
		break;
  4019f6:	e001      	b.n	4019fc <pio_configure_pin+0x190>

	default:
		return 0;
  4019f8:	2300      	movs	r3, #0
  4019fa:	e000      	b.n	4019fe <pio_configure_pin+0x192>
	}

	return 1;
  4019fc:	2301      	movs	r3, #1
}
  4019fe:	4618      	mov	r0, r3
  401a00:	3714      	adds	r7, #20
  401a02:	46bd      	mov	sp, r7
  401a04:	bd90      	pop	{r4, r7, pc}
  401a06:	bf00      	nop
  401a08:	00401a1d 	.word	0x00401a1d
  401a0c:	004015ad 	.word	0x004015ad
  401a10:	0040154d 	.word	0x0040154d
  401a14:	004016bd 	.word	0x004016bd
  401a18:	0040173d 	.word	0x0040173d

00401a1c <pio_get_pin_group>:
 * \param ul_pin The pin index.
 *
 * \return Pointer to \ref Pio struct for GPIO port.
 */
Pio *pio_get_pin_group(uint32_t ul_pin)
{
  401a1c:	b480      	push	{r7}
  401a1e:	b085      	sub	sp, #20
  401a20:	af00      	add	r7, sp, #0
  401a22:	6078      	str	r0, [r7, #4]
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  401a24:	687b      	ldr	r3, [r7, #4]
  401a26:	095b      	lsrs	r3, r3, #5
  401a28:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  401a2c:	f203 7307 	addw	r3, r3, #1799	; 0x707
  401a30:	025b      	lsls	r3, r3, #9
  401a32:	60fb      	str	r3, [r7, #12]
#endif
	return p_pio;
  401a34:	68fb      	ldr	r3, [r7, #12]
}
  401a36:	4618      	mov	r0, r3
  401a38:	3714      	adds	r7, #20
  401a3a:	46bd      	mov	sp, r7
  401a3c:	bc80      	pop	{r7}
  401a3e:	4770      	bx	lr

00401a40 <pmc_switch_mck_to_pllack>:
 *
 * \retval 0 Success.
 * \retval 1 Timeout error.
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
  401a40:	b480      	push	{r7}
  401a42:	b085      	sub	sp, #20
  401a44:	af00      	add	r7, sp, #0
  401a46:	6078      	str	r0, [r7, #4]
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  401a48:	491c      	ldr	r1, [pc, #112]	; (401abc <pmc_switch_mck_to_pllack+0x7c>)
  401a4a:	4b1c      	ldr	r3, [pc, #112]	; (401abc <pmc_switch_mck_to_pllack+0x7c>)
  401a4c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401a4e:	f023 0270 	bic.w	r2, r3, #112	; 0x70
  401a52:	687b      	ldr	r3, [r7, #4]
  401a54:	4313      	orrs	r3, r2
  401a56:	630b      	str	r3, [r1, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  401a58:	f44f 6300 	mov.w	r3, #2048	; 0x800
  401a5c:	60fb      	str	r3, [r7, #12]
  401a5e:	e007      	b.n	401a70 <pmc_switch_mck_to_pllack+0x30>
			--ul_timeout) {
		if (ul_timeout == 0) {
  401a60:	68fb      	ldr	r3, [r7, #12]
  401a62:	2b00      	cmp	r3, #0
  401a64:	d101      	bne.n	401a6a <pmc_switch_mck_to_pllack+0x2a>
			return 1;
  401a66:	2301      	movs	r3, #1
  401a68:	e023      	b.n	401ab2 <pmc_switch_mck_to_pllack+0x72>
			--ul_timeout) {
  401a6a:	68fb      	ldr	r3, [r7, #12]
  401a6c:	3b01      	subs	r3, #1
  401a6e:	60fb      	str	r3, [r7, #12]
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  401a70:	4b12      	ldr	r3, [pc, #72]	; (401abc <pmc_switch_mck_to_pllack+0x7c>)
  401a72:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  401a74:	f003 0308 	and.w	r3, r3, #8
  401a78:	2b00      	cmp	r3, #0
  401a7a:	d0f1      	beq.n	401a60 <pmc_switch_mck_to_pllack+0x20>
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  401a7c:	4a0f      	ldr	r2, [pc, #60]	; (401abc <pmc_switch_mck_to_pllack+0x7c>)
  401a7e:	4b0f      	ldr	r3, [pc, #60]	; (401abc <pmc_switch_mck_to_pllack+0x7c>)
  401a80:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401a82:	f023 0303 	bic.w	r3, r3, #3
  401a86:	f043 0302 	orr.w	r3, r3, #2
  401a8a:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  401a8c:	f44f 6300 	mov.w	r3, #2048	; 0x800
  401a90:	60fb      	str	r3, [r7, #12]
  401a92:	e007      	b.n	401aa4 <pmc_switch_mck_to_pllack+0x64>
			--ul_timeout) {
		if (ul_timeout == 0) {
  401a94:	68fb      	ldr	r3, [r7, #12]
  401a96:	2b00      	cmp	r3, #0
  401a98:	d101      	bne.n	401a9e <pmc_switch_mck_to_pllack+0x5e>
			return 1;
  401a9a:	2301      	movs	r3, #1
  401a9c:	e009      	b.n	401ab2 <pmc_switch_mck_to_pllack+0x72>
			--ul_timeout) {
  401a9e:	68fb      	ldr	r3, [r7, #12]
  401aa0:	3b01      	subs	r3, #1
  401aa2:	60fb      	str	r3, [r7, #12]
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  401aa4:	4b05      	ldr	r3, [pc, #20]	; (401abc <pmc_switch_mck_to_pllack+0x7c>)
  401aa6:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  401aa8:	f003 0308 	and.w	r3, r3, #8
  401aac:	2b00      	cmp	r3, #0
  401aae:	d0f1      	beq.n	401a94 <pmc_switch_mck_to_pllack+0x54>
		}
	}

	return 0;
  401ab0:	2300      	movs	r3, #0
}
  401ab2:	4618      	mov	r0, r3
  401ab4:	3714      	adds	r7, #20
  401ab6:	46bd      	mov	sp, r7
  401ab8:	bc80      	pop	{r7}
  401aba:	4770      	bx	lr
  401abc:	400e0400 	.word	0x400e0400

00401ac0 <pmc_switch_sclk_to_32kxtal>:
 *       VDDIO power supply.
 *
 * \param ul_bypass 0 for Xtal, 1 for bypass.
 */
void pmc_switch_sclk_to_32kxtal(uint32_t ul_bypass)
{
  401ac0:	b480      	push	{r7}
  401ac2:	b083      	sub	sp, #12
  401ac4:	af00      	add	r7, sp, #0
  401ac6:	6078      	str	r0, [r7, #4]
	/* Set Bypass mode if required */
	if (ul_bypass == 1) {
  401ac8:	687b      	ldr	r3, [r7, #4]
  401aca:	2b01      	cmp	r3, #1
  401acc:	d107      	bne.n	401ade <pmc_switch_sclk_to_32kxtal+0x1e>
		SUPC->SUPC_MR |= SUPC_MR_KEY_PASSWD |
  401ace:	4a08      	ldr	r2, [pc, #32]	; (401af0 <pmc_switch_sclk_to_32kxtal+0x30>)
  401ad0:	4b07      	ldr	r3, [pc, #28]	; (401af0 <pmc_switch_sclk_to_32kxtal+0x30>)
  401ad2:	689b      	ldr	r3, [r3, #8]
  401ad4:	f043 4325 	orr.w	r3, r3, #2768240640	; 0xa5000000
  401ad8:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  401adc:	6093      	str	r3, [r2, #8]
			SUPC_MR_OSCBYPASS;
	}

	SUPC->SUPC_CR = SUPC_CR_KEY_PASSWD | SUPC_CR_XTALSEL;
  401ade:	4b04      	ldr	r3, [pc, #16]	; (401af0 <pmc_switch_sclk_to_32kxtal+0x30>)
  401ae0:	4a04      	ldr	r2, [pc, #16]	; (401af4 <pmc_switch_sclk_to_32kxtal+0x34>)
  401ae2:	601a      	str	r2, [r3, #0]
}
  401ae4:	bf00      	nop
  401ae6:	370c      	adds	r7, #12
  401ae8:	46bd      	mov	sp, r7
  401aea:	bc80      	pop	{r7}
  401aec:	4770      	bx	lr
  401aee:	bf00      	nop
  401af0:	400e1410 	.word	0x400e1410
  401af4:	a5000008 	.word	0xa5000008

00401af8 <pmc_osc_is_ready_32kxtal>:
 *
 * \retval 1 External 32k Xtal is ready.
 * \retval 0 External 32k Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_32kxtal(void)
{
  401af8:	b480      	push	{r7}
  401afa:	af00      	add	r7, sp, #0
	return ((SUPC->SUPC_SR & SUPC_SR_OSCSEL)
  401afc:	4b09      	ldr	r3, [pc, #36]	; (401b24 <pmc_osc_is_ready_32kxtal+0x2c>)
  401afe:	695b      	ldr	r3, [r3, #20]
  401b00:	f003 0380 	and.w	r3, r3, #128	; 0x80
			&& (PMC->PMC_SR & PMC_SR_OSCSELS));
  401b04:	2b00      	cmp	r3, #0
  401b06:	d007      	beq.n	401b18 <pmc_osc_is_ready_32kxtal+0x20>
  401b08:	4b07      	ldr	r3, [pc, #28]	; (401b28 <pmc_osc_is_ready_32kxtal+0x30>)
  401b0a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  401b0c:	f003 0380 	and.w	r3, r3, #128	; 0x80
  401b10:	2b00      	cmp	r3, #0
  401b12:	d001      	beq.n	401b18 <pmc_osc_is_ready_32kxtal+0x20>
  401b14:	2301      	movs	r3, #1
  401b16:	e000      	b.n	401b1a <pmc_osc_is_ready_32kxtal+0x22>
  401b18:	2300      	movs	r3, #0
}
  401b1a:	4618      	mov	r0, r3
  401b1c:	46bd      	mov	sp, r7
  401b1e:	bc80      	pop	{r7}
  401b20:	4770      	bx	lr
  401b22:	bf00      	nop
  401b24:	400e1410 	.word	0x400e1410
  401b28:	400e0400 	.word	0x400e0400

00401b2c <pmc_switch_mainck_to_fastrc>:
 * \retval 0 Success.
 * \retval 1 Timeout error.
 * \retval 2 Invalid frequency.
 */
void pmc_switch_mainck_to_fastrc(uint32_t ul_moscrcf)
{
  401b2c:	b480      	push	{r7}
  401b2e:	b083      	sub	sp, #12
  401b30:	af00      	add	r7, sp, #0
  401b32:	6078      	str	r0, [r7, #4]
	/* Enable Fast RC oscillator but DO NOT switch to RC now */
	PMC->CKGR_MOR |= (CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCRCEN);
  401b34:	4a18      	ldr	r2, [pc, #96]	; (401b98 <pmc_switch_mainck_to_fastrc+0x6c>)
  401b36:	4b18      	ldr	r3, [pc, #96]	; (401b98 <pmc_switch_mainck_to_fastrc+0x6c>)
  401b38:	6a1b      	ldr	r3, [r3, #32]
  401b3a:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  401b3e:	f043 0308 	orr.w	r3, r3, #8
  401b42:	6213      	str	r3, [r2, #32]

	/* Wait the Fast RC to stabilize */
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  401b44:	bf00      	nop
  401b46:	4b14      	ldr	r3, [pc, #80]	; (401b98 <pmc_switch_mainck_to_fastrc+0x6c>)
  401b48:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  401b4a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
  401b4e:	2b00      	cmp	r3, #0
  401b50:	d0f9      	beq.n	401b46 <pmc_switch_mainck_to_fastrc+0x1a>

	/* Change Fast RC oscillator frequency */
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCF_Msk) |
  401b52:	4911      	ldr	r1, [pc, #68]	; (401b98 <pmc_switch_mainck_to_fastrc+0x6c>)
  401b54:	4b10      	ldr	r3, [pc, #64]	; (401b98 <pmc_switch_mainck_to_fastrc+0x6c>)
  401b56:	6a1b      	ldr	r3, [r3, #32]
  401b58:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  401b5c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
			CKGR_MOR_KEY_PASSWD | ul_moscrcf;
  401b60:	687a      	ldr	r2, [r7, #4]
  401b62:	4313      	orrs	r3, r2
  401b64:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCF_Msk) |
  401b68:	620b      	str	r3, [r1, #32]

	/* Wait the Fast RC to stabilize */
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  401b6a:	bf00      	nop
  401b6c:	4b0a      	ldr	r3, [pc, #40]	; (401b98 <pmc_switch_mainck_to_fastrc+0x6c>)
  401b6e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  401b70:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
  401b74:	2b00      	cmp	r3, #0
  401b76:	d0f9      	beq.n	401b6c <pmc_switch_mainck_to_fastrc+0x40>

	/* Switch to Fast RC */
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCSEL) |
  401b78:	4a07      	ldr	r2, [pc, #28]	; (401b98 <pmc_switch_mainck_to_fastrc+0x6c>)
  401b7a:	4b07      	ldr	r3, [pc, #28]	; (401b98 <pmc_switch_mainck_to_fastrc+0x6c>)
  401b7c:	6a1b      	ldr	r3, [r3, #32]
  401b7e:	f023 739b 	bic.w	r3, r3, #20316160	; 0x1360000
  401b82:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
  401b86:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  401b8a:	6213      	str	r3, [r2, #32]
			CKGR_MOR_KEY_PASSWD;
}
  401b8c:	bf00      	nop
  401b8e:	370c      	adds	r7, #12
  401b90:	46bd      	mov	sp, r7
  401b92:	bc80      	pop	{r7}
  401b94:	4770      	bx	lr
  401b96:	bf00      	nop
  401b98:	400e0400 	.word	0x400e0400

00401b9c <pmc_switch_mainck_to_xtal>:
 * \retval 0 Success.
 * \retval 1 Timeout error.
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
  401b9c:	b480      	push	{r7}
  401b9e:	b083      	sub	sp, #12
  401ba0:	af00      	add	r7, sp, #0
  401ba2:	6078      	str	r0, [r7, #4]
  401ba4:	6039      	str	r1, [r7, #0]
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  401ba6:	687b      	ldr	r3, [r7, #4]
  401ba8:	2b00      	cmp	r3, #0
  401baa:	d008      	beq.n	401bbe <pmc_switch_mainck_to_xtal+0x22>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401bac:	4916      	ldr	r1, [pc, #88]	; (401c08 <pmc_switch_mainck_to_xtal+0x6c>)
  401bae:	4b16      	ldr	r3, [pc, #88]	; (401c08 <pmc_switch_mainck_to_xtal+0x6c>)
  401bb0:	6a1b      	ldr	r3, [r3, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  401bb2:	4a16      	ldr	r2, [pc, #88]	; (401c0c <pmc_switch_mainck_to_xtal+0x70>)
  401bb4:	401a      	ands	r2, r3
  401bb6:	4b16      	ldr	r3, [pc, #88]	; (401c10 <pmc_switch_mainck_to_xtal+0x74>)
  401bb8:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401bba:	620b      	str	r3, [r1, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
	}
}
  401bbc:	e01e      	b.n	401bfc <pmc_switch_mainck_to_xtal+0x60>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  401bbe:	4912      	ldr	r1, [pc, #72]	; (401c08 <pmc_switch_mainck_to_xtal+0x6c>)
  401bc0:	4b11      	ldr	r3, [pc, #68]	; (401c08 <pmc_switch_mainck_to_xtal+0x6c>)
  401bc2:	6a1b      	ldr	r3, [r3, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  401bc4:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  401bc8:	f023 0303 	bic.w	r3, r3, #3
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  401bcc:	683a      	ldr	r2, [r7, #0]
  401bce:	0212      	lsls	r2, r2, #8
  401bd0:	b292      	uxth	r2, r2
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  401bd2:	4313      	orrs	r3, r2
  401bd4:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  401bd8:	f043 0301 	orr.w	r3, r3, #1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  401bdc:	620b      	str	r3, [r1, #32]
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  401bde:	bf00      	nop
  401be0:	4b09      	ldr	r3, [pc, #36]	; (401c08 <pmc_switch_mainck_to_xtal+0x6c>)
  401be2:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  401be4:	f003 0301 	and.w	r3, r3, #1
  401be8:	2b00      	cmp	r3, #0
  401bea:	d0f9      	beq.n	401be0 <pmc_switch_mainck_to_xtal+0x44>
		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  401bec:	4a06      	ldr	r2, [pc, #24]	; (401c08 <pmc_switch_mainck_to_xtal+0x6c>)
  401bee:	4b06      	ldr	r3, [pc, #24]	; (401c08 <pmc_switch_mainck_to_xtal+0x6c>)
  401bf0:	6a1b      	ldr	r3, [r3, #32]
  401bf2:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  401bf6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  401bfa:	6213      	str	r3, [r2, #32]
}
  401bfc:	bf00      	nop
  401bfe:	370c      	adds	r7, #12
  401c00:	46bd      	mov	sp, r7
  401c02:	bc80      	pop	{r7}
  401c04:	4770      	bx	lr
  401c06:	bf00      	nop
  401c08:	400e0400 	.word	0x400e0400
  401c0c:	fec8fffc 	.word	0xfec8fffc
  401c10:	01370002 	.word	0x01370002

00401c14 <pmc_osc_is_ready_mainck>:
 *
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
  401c14:	b480      	push	{r7}
  401c16:	af00      	add	r7, sp, #0
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  401c18:	4b03      	ldr	r3, [pc, #12]	; (401c28 <pmc_osc_is_ready_mainck+0x14>)
  401c1a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  401c1c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
}
  401c20:	4618      	mov	r0, r3
  401c22:	46bd      	mov	sp, r7
  401c24:	bc80      	pop	{r7}
  401c26:	4770      	bx	lr
  401c28:	400e0400 	.word	0x400e0400

00401c2c <pmc_disable_pllack>:

/**
 * \brief Disable PLLA clock.
 */
void pmc_disable_pllack(void)
{
  401c2c:	b480      	push	{r7}
  401c2e:	af00      	add	r7, sp, #0
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  401c30:	4b03      	ldr	r3, [pc, #12]	; (401c40 <pmc_disable_pllack+0x14>)
  401c32:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  401c36:	629a      	str	r2, [r3, #40]	; 0x28
#endif
}
  401c38:	bf00      	nop
  401c3a:	46bd      	mov	sp, r7
  401c3c:	bc80      	pop	{r7}
  401c3e:	4770      	bx	lr
  401c40:	400e0400 	.word	0x400e0400

00401c44 <pmc_is_locked_pllack>:
 *
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
  401c44:	b480      	push	{r7}
  401c46:	af00      	add	r7, sp, #0
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  401c48:	4b03      	ldr	r3, [pc, #12]	; (401c58 <pmc_is_locked_pllack+0x14>)
  401c4a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  401c4c:	f003 0302 	and.w	r3, r3, #2
}
  401c50:	4618      	mov	r0, r3
  401c52:	46bd      	mov	sp, r7
  401c54:	bc80      	pop	{r7}
  401c56:	4770      	bx	lr
  401c58:	400e0400 	.word	0x400e0400

00401c5c <pmc_disable_pllbck>:

/**
 * \brief Disable PLLB clock.
 */
void pmc_disable_pllbck(void)
{
  401c5c:	b480      	push	{r7}
  401c5e:	af00      	add	r7, sp, #0
	PMC->CKGR_PLLBR = CKGR_PLLBR_MULB(0);
  401c60:	4b03      	ldr	r3, [pc, #12]	; (401c70 <pmc_disable_pllbck+0x14>)
  401c62:	2200      	movs	r2, #0
  401c64:	62da      	str	r2, [r3, #44]	; 0x2c
}
  401c66:	bf00      	nop
  401c68:	46bd      	mov	sp, r7
  401c6a:	bc80      	pop	{r7}
  401c6c:	4770      	bx	lr
  401c6e:	bf00      	nop
  401c70:	400e0400 	.word	0x400e0400

00401c74 <pmc_is_locked_pllbck>:
 *
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllbck(void)
{
  401c74:	b480      	push	{r7}
  401c76:	af00      	add	r7, sp, #0
	return (PMC->PMC_SR & PMC_SR_LOCKB);
  401c78:	4b03      	ldr	r3, [pc, #12]	; (401c88 <pmc_is_locked_pllbck+0x14>)
  401c7a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  401c7c:	f003 0304 	and.w	r3, r3, #4
}
  401c80:	4618      	mov	r0, r3
  401c82:	46bd      	mov	sp, r7
  401c84:	bc80      	pop	{r7}
  401c86:	4770      	bx	lr
  401c88:	400e0400 	.word	0x400e0400

00401c8c <pmc_enable_periph_clk>:
 *
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
  401c8c:	b480      	push	{r7}
  401c8e:	b083      	sub	sp, #12
  401c90:	af00      	add	r7, sp, #0
  401c92:	6078      	str	r0, [r7, #4]
	if (ul_id > MAX_PERIPH_ID) {
  401c94:	687b      	ldr	r3, [r7, #4]
  401c96:	2b22      	cmp	r3, #34	; 0x22
  401c98:	d901      	bls.n	401c9e <pmc_enable_periph_clk+0x12>
		return 1;
  401c9a:	2301      	movs	r3, #1
  401c9c:	e02f      	b.n	401cfe <pmc_enable_periph_clk+0x72>
	}

	if (ul_id < 32) {
  401c9e:	687b      	ldr	r3, [r7, #4]
  401ca0:	2b1f      	cmp	r3, #31
  401ca2:	d813      	bhi.n	401ccc <pmc_enable_periph_clk+0x40>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  401ca4:	4b18      	ldr	r3, [pc, #96]	; (401d08 <pmc_enable_periph_clk+0x7c>)
  401ca6:	699a      	ldr	r2, [r3, #24]
  401ca8:	2101      	movs	r1, #1
  401caa:	687b      	ldr	r3, [r7, #4]
  401cac:	fa01 f303 	lsl.w	r3, r1, r3
  401cb0:	401a      	ands	r2, r3
  401cb2:	2101      	movs	r1, #1
  401cb4:	687b      	ldr	r3, [r7, #4]
  401cb6:	fa01 f303 	lsl.w	r3, r1, r3
  401cba:	429a      	cmp	r2, r3
  401cbc:	d01e      	beq.n	401cfc <pmc_enable_periph_clk+0x70>
			PMC->PMC_PCER0 = 1 << ul_id;
  401cbe:	4a12      	ldr	r2, [pc, #72]	; (401d08 <pmc_enable_periph_clk+0x7c>)
  401cc0:	2101      	movs	r1, #1
  401cc2:	687b      	ldr	r3, [r7, #4]
  401cc4:	fa01 f303 	lsl.w	r3, r1, r3
  401cc8:	6113      	str	r3, [r2, #16]
  401cca:	e017      	b.n	401cfc <pmc_enable_periph_clk+0x70>
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP || SAMG55 || SAMV71 || SAMV70 || SAME70 || SAMS70)
	} else {
		ul_id -= 32;
  401ccc:	687b      	ldr	r3, [r7, #4]
  401cce:	3b20      	subs	r3, #32
  401cd0:	607b      	str	r3, [r7, #4]
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  401cd2:	4b0d      	ldr	r3, [pc, #52]	; (401d08 <pmc_enable_periph_clk+0x7c>)
  401cd4:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  401cd8:	2101      	movs	r1, #1
  401cda:	687b      	ldr	r3, [r7, #4]
  401cdc:	fa01 f303 	lsl.w	r3, r1, r3
  401ce0:	401a      	ands	r2, r3
  401ce2:	2101      	movs	r1, #1
  401ce4:	687b      	ldr	r3, [r7, #4]
  401ce6:	fa01 f303 	lsl.w	r3, r1, r3
  401cea:	429a      	cmp	r2, r3
  401cec:	d006      	beq.n	401cfc <pmc_enable_periph_clk+0x70>
			PMC->PMC_PCER1 = 1 << ul_id;
  401cee:	4a06      	ldr	r2, [pc, #24]	; (401d08 <pmc_enable_periph_clk+0x7c>)
  401cf0:	2101      	movs	r1, #1
  401cf2:	687b      	ldr	r3, [r7, #4]
  401cf4:	fa01 f303 	lsl.w	r3, r1, r3
  401cf8:	f8c2 3100 	str.w	r3, [r2, #256]	; 0x100
		}
#endif
	}

	return 0;
  401cfc:	2300      	movs	r3, #0
}
  401cfe:	4618      	mov	r0, r3
  401d00:	370c      	adds	r7, #12
  401d02:	46bd      	mov	sp, r7
  401d04:	bc80      	pop	{r7}
  401d06:	4770      	bx	lr
  401d08:	400e0400 	.word	0x400e0400

00401d0c <sysclk_enable_peripheral_clock>:
{
  401d0c:	b580      	push	{r7, lr}
  401d0e:	b082      	sub	sp, #8
  401d10:	af00      	add	r7, sp, #0
  401d12:	6078      	str	r0, [r7, #4]
	pmc_enable_periph_clk(ul_id);
  401d14:	6878      	ldr	r0, [r7, #4]
  401d16:	4b03      	ldr	r3, [pc, #12]	; (401d24 <sysclk_enable_peripheral_clock+0x18>)
  401d18:	4798      	blx	r3
}
  401d1a:	bf00      	nop
  401d1c:	3708      	adds	r7, #8
  401d1e:	46bd      	mov	sp, r7
  401d20:	bd80      	pop	{r7, pc}
  401d22:	bf00      	nop
  401d24:	00401c8d 	.word	0x00401c8d

00401d28 <ioport_init>:
{
  401d28:	b580      	push	{r7, lr}
  401d2a:	af00      	add	r7, sp, #0
	sysclk_enable_peripheral_clock(ID_PIOA);
  401d2c:	200b      	movs	r0, #11
  401d2e:	4b03      	ldr	r3, [pc, #12]	; (401d3c <ioport_init+0x14>)
  401d30:	4798      	blx	r3
	sysclk_enable_peripheral_clock(ID_PIOB);
  401d32:	200c      	movs	r0, #12
  401d34:	4b01      	ldr	r3, [pc, #4]	; (401d3c <ioport_init+0x14>)
  401d36:	4798      	blx	r3
}
  401d38:	bf00      	nop
  401d3a:	bd80      	pop	{r7, pc}
  401d3c:	00401d0d 	.word	0x00401d0d

00401d40 <ioport_set_pin_mode>:
{
  401d40:	b480      	push	{r7}
  401d42:	b08d      	sub	sp, #52	; 0x34
  401d44:	af00      	add	r7, sp, #0
  401d46:	6078      	str	r0, [r7, #4]
  401d48:	6039      	str	r1, [r7, #0]
  401d4a:	687b      	ldr	r3, [r7, #4]
  401d4c:	62fb      	str	r3, [r7, #44]	; 0x2c
  401d4e:	683b      	ldr	r3, [r7, #0]
  401d50:	62bb      	str	r3, [r7, #40]	; 0x28
  401d52:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  401d54:	627b      	str	r3, [r7, #36]	; 0x24
	return pin >> 5;
  401d56:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  401d58:	095a      	lsrs	r2, r3, #5
  401d5a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  401d5c:	623b      	str	r3, [r7, #32]
	return 1U << (pin & 0x1F);
  401d5e:	6a3b      	ldr	r3, [r7, #32]
  401d60:	f003 031f 	and.w	r3, r3, #31
  401d64:	2101      	movs	r1, #1
  401d66:	fa01 f303 	lsl.w	r3, r1, r3
  401d6a:	61fa      	str	r2, [r7, #28]
  401d6c:	61bb      	str	r3, [r7, #24]
  401d6e:	6abb      	ldr	r3, [r7, #40]	; 0x28
  401d70:	617b      	str	r3, [r7, #20]
  401d72:	69fb      	ldr	r3, [r7, #28]
  401d74:	613b      	str	r3, [r7, #16]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
  401d76:	693b      	ldr	r3, [r7, #16]
  401d78:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  401d7c:	f203 7307 	addw	r3, r3, #1799	; 0x707
  401d80:	025b      	lsls	r3, r3, #9
	Pio *base = arch_ioport_port_to_base(port);
  401d82:	60fb      	str	r3, [r7, #12]
	if (mode & IOPORT_MODE_PULLUP) {
  401d84:	697b      	ldr	r3, [r7, #20]
  401d86:	f003 0308 	and.w	r3, r3, #8
  401d8a:	2b00      	cmp	r3, #0
  401d8c:	d003      	beq.n	401d96 <ioport_set_pin_mode+0x56>
		base->PIO_PUER = mask;
  401d8e:	68fb      	ldr	r3, [r7, #12]
  401d90:	69ba      	ldr	r2, [r7, #24]
  401d92:	665a      	str	r2, [r3, #100]	; 0x64
  401d94:	e002      	b.n	401d9c <ioport_set_pin_mode+0x5c>
		base->PIO_PUDR = mask;
  401d96:	68fb      	ldr	r3, [r7, #12]
  401d98:	69ba      	ldr	r2, [r7, #24]
  401d9a:	661a      	str	r2, [r3, #96]	; 0x60
	if (mode & IOPORT_MODE_PULLDOWN) {
  401d9c:	697b      	ldr	r3, [r7, #20]
  401d9e:	f003 0310 	and.w	r3, r3, #16
  401da2:	2b00      	cmp	r3, #0
  401da4:	d004      	beq.n	401db0 <ioport_set_pin_mode+0x70>
		base->PIO_PPDER = mask;
  401da6:	68fb      	ldr	r3, [r7, #12]
  401da8:	69ba      	ldr	r2, [r7, #24]
  401daa:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  401dae:	e003      	b.n	401db8 <ioport_set_pin_mode+0x78>
		base->PIO_PPDDR = mask;
  401db0:	68fb      	ldr	r3, [r7, #12]
  401db2:	69ba      	ldr	r2, [r7, #24]
  401db4:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
	if (mode & IOPORT_MODE_OPEN_DRAIN) {
  401db8:	697b      	ldr	r3, [r7, #20]
  401dba:	f003 0320 	and.w	r3, r3, #32
  401dbe:	2b00      	cmp	r3, #0
  401dc0:	d003      	beq.n	401dca <ioport_set_pin_mode+0x8a>
		base->PIO_MDER = mask;
  401dc2:	68fb      	ldr	r3, [r7, #12]
  401dc4:	69ba      	ldr	r2, [r7, #24]
  401dc6:	651a      	str	r2, [r3, #80]	; 0x50
  401dc8:	e002      	b.n	401dd0 <ioport_set_pin_mode+0x90>
		base->PIO_MDDR = mask;
  401dca:	68fb      	ldr	r3, [r7, #12]
  401dcc:	69ba      	ldr	r2, [r7, #24]
  401dce:	655a      	str	r2, [r3, #84]	; 0x54
	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
  401dd0:	697b      	ldr	r3, [r7, #20]
  401dd2:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
  401dd6:	2b00      	cmp	r3, #0
  401dd8:	d003      	beq.n	401de2 <ioport_set_pin_mode+0xa2>
		base->PIO_IFER = mask;
  401dda:	68fb      	ldr	r3, [r7, #12]
  401ddc:	69ba      	ldr	r2, [r7, #24]
  401dde:	621a      	str	r2, [r3, #32]
  401de0:	e002      	b.n	401de8 <ioport_set_pin_mode+0xa8>
		base->PIO_IFDR = mask;
  401de2:	68fb      	ldr	r3, [r7, #12]
  401de4:	69ba      	ldr	r2, [r7, #24]
  401de6:	625a      	str	r2, [r3, #36]	; 0x24
	if (mode & IOPORT_MODE_DEBOUNCE) {
  401de8:	697b      	ldr	r3, [r7, #20]
  401dea:	f003 0380 	and.w	r3, r3, #128	; 0x80
  401dee:	2b00      	cmp	r3, #0
  401df0:	d004      	beq.n	401dfc <ioport_set_pin_mode+0xbc>
		base->PIO_IFSCER = mask;
  401df2:	68fb      	ldr	r3, [r7, #12]
  401df4:	69ba      	ldr	r2, [r7, #24]
  401df6:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  401dfa:	e003      	b.n	401e04 <ioport_set_pin_mode+0xc4>
		base->PIO_IFSCDR = mask;
  401dfc:	68fb      	ldr	r3, [r7, #12]
  401dfe:	69ba      	ldr	r2, [r7, #24]
  401e00:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	if (mode & IOPORT_MODE_MUX_BIT0) {
  401e04:	697b      	ldr	r3, [r7, #20]
  401e06:	f003 0301 	and.w	r3, r3, #1
  401e0a:	2b00      	cmp	r3, #0
  401e0c:	d006      	beq.n	401e1c <ioport_set_pin_mode+0xdc>
		base->PIO_ABCDSR[0] |= mask;
  401e0e:	68fb      	ldr	r3, [r7, #12]
  401e10:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  401e12:	69bb      	ldr	r3, [r7, #24]
  401e14:	431a      	orrs	r2, r3
  401e16:	68fb      	ldr	r3, [r7, #12]
  401e18:	671a      	str	r2, [r3, #112]	; 0x70
  401e1a:	e006      	b.n	401e2a <ioport_set_pin_mode+0xea>
		base->PIO_ABCDSR[0] &= ~mask;
  401e1c:	68fb      	ldr	r3, [r7, #12]
  401e1e:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  401e20:	69bb      	ldr	r3, [r7, #24]
  401e22:	43db      	mvns	r3, r3
  401e24:	401a      	ands	r2, r3
  401e26:	68fb      	ldr	r3, [r7, #12]
  401e28:	671a      	str	r2, [r3, #112]	; 0x70
	if (mode & IOPORT_MODE_MUX_BIT1) {
  401e2a:	697b      	ldr	r3, [r7, #20]
  401e2c:	f003 0302 	and.w	r3, r3, #2
  401e30:	2b00      	cmp	r3, #0
  401e32:	d006      	beq.n	401e42 <ioport_set_pin_mode+0x102>
		base->PIO_ABCDSR[1] |= mask;
  401e34:	68fb      	ldr	r3, [r7, #12]
  401e36:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  401e38:	69bb      	ldr	r3, [r7, #24]
  401e3a:	431a      	orrs	r2, r3
  401e3c:	68fb      	ldr	r3, [r7, #12]
  401e3e:	675a      	str	r2, [r3, #116]	; 0x74
}
  401e40:	e006      	b.n	401e50 <ioport_set_pin_mode+0x110>
		base->PIO_ABCDSR[1] &= ~mask;
  401e42:	68fb      	ldr	r3, [r7, #12]
  401e44:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  401e46:	69bb      	ldr	r3, [r7, #24]
  401e48:	43db      	mvns	r3, r3
  401e4a:	401a      	ands	r2, r3
  401e4c:	68fb      	ldr	r3, [r7, #12]
  401e4e:	675a      	str	r2, [r3, #116]	; 0x74
  401e50:	bf00      	nop
  401e52:	3734      	adds	r7, #52	; 0x34
  401e54:	46bd      	mov	sp, r7
  401e56:	bc80      	pop	{r7}
  401e58:	4770      	bx	lr

00401e5a <ioport_set_pin_dir>:
{
  401e5a:	b480      	push	{r7}
  401e5c:	b08d      	sub	sp, #52	; 0x34
  401e5e:	af00      	add	r7, sp, #0
  401e60:	6078      	str	r0, [r7, #4]
  401e62:	460b      	mov	r3, r1
  401e64:	70fb      	strb	r3, [r7, #3]
  401e66:	687b      	ldr	r3, [r7, #4]
  401e68:	62fb      	str	r3, [r7, #44]	; 0x2c
  401e6a:	78fb      	ldrb	r3, [r7, #3]
  401e6c:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
  401e70:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  401e72:	627b      	str	r3, [r7, #36]	; 0x24
  401e74:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  401e76:	623b      	str	r3, [r7, #32]
	return pin >> 5;
  401e78:	6a3b      	ldr	r3, [r7, #32]
  401e7a:	095b      	lsrs	r3, r3, #5
  401e7c:	61fb      	str	r3, [r7, #28]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
  401e7e:	69fb      	ldr	r3, [r7, #28]
  401e80:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  401e84:	f203 7307 	addw	r3, r3, #1799	; 0x707
  401e88:	025b      	lsls	r3, r3, #9
	Pio *base = arch_ioport_pin_to_base(pin);
  401e8a:	61bb      	str	r3, [r7, #24]
	if (dir == IOPORT_DIR_OUTPUT) {
  401e8c:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
  401e90:	2b01      	cmp	r3, #1
  401e92:	d109      	bne.n	401ea8 <ioport_set_pin_dir+0x4e>
  401e94:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  401e96:	617b      	str	r3, [r7, #20]
	return 1U << (pin & 0x1F);
  401e98:	697b      	ldr	r3, [r7, #20]
  401e9a:	f003 031f 	and.w	r3, r3, #31
  401e9e:	2201      	movs	r2, #1
  401ea0:	409a      	lsls	r2, r3
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  401ea2:	69bb      	ldr	r3, [r7, #24]
  401ea4:	611a      	str	r2, [r3, #16]
  401ea6:	e00c      	b.n	401ec2 <ioport_set_pin_dir+0x68>
	} else if (dir == IOPORT_DIR_INPUT) {
  401ea8:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
  401eac:	2b00      	cmp	r3, #0
  401eae:	d108      	bne.n	401ec2 <ioport_set_pin_dir+0x68>
  401eb0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  401eb2:	613b      	str	r3, [r7, #16]
	return 1U << (pin & 0x1F);
  401eb4:	693b      	ldr	r3, [r7, #16]
  401eb6:	f003 031f 	and.w	r3, r3, #31
  401eba:	2201      	movs	r2, #1
  401ebc:	409a      	lsls	r2, r3
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  401ebe:	69bb      	ldr	r3, [r7, #24]
  401ec0:	615a      	str	r2, [r3, #20]
  401ec2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
  401ec4:	60fb      	str	r3, [r7, #12]
	return 1U << (pin & 0x1F);
  401ec6:	68fb      	ldr	r3, [r7, #12]
  401ec8:	f003 031f 	and.w	r3, r3, #31
  401ecc:	2201      	movs	r2, #1
  401ece:	409a      	lsls	r2, r3
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  401ed0:	69bb      	ldr	r3, [r7, #24]
  401ed2:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
}
  401ed6:	bf00      	nop
  401ed8:	3734      	adds	r7, #52	; 0x34
  401eda:	46bd      	mov	sp, r7
  401edc:	bc80      	pop	{r7}
  401ede:	4770      	bx	lr

00401ee0 <ioport_set_pin_level>:
{
  401ee0:	b480      	push	{r7}
  401ee2:	b08b      	sub	sp, #44	; 0x2c
  401ee4:	af00      	add	r7, sp, #0
  401ee6:	6078      	str	r0, [r7, #4]
  401ee8:	460b      	mov	r3, r1
  401eea:	70fb      	strb	r3, [r7, #3]
  401eec:	687b      	ldr	r3, [r7, #4]
  401eee:	627b      	str	r3, [r7, #36]	; 0x24
  401ef0:	78fb      	ldrb	r3, [r7, #3]
  401ef2:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
  401ef6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  401ef8:	61fb      	str	r3, [r7, #28]
  401efa:	69fb      	ldr	r3, [r7, #28]
  401efc:	61bb      	str	r3, [r7, #24]
	return pin >> 5;
  401efe:	69bb      	ldr	r3, [r7, #24]
  401f00:	095b      	lsrs	r3, r3, #5
  401f02:	617b      	str	r3, [r7, #20]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
  401f04:	697b      	ldr	r3, [r7, #20]
  401f06:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  401f0a:	f203 7307 	addw	r3, r3, #1799	; 0x707
  401f0e:	025b      	lsls	r3, r3, #9
	Pio *base = arch_ioport_pin_to_base(pin);
  401f10:	613b      	str	r3, [r7, #16]
	if (level) {
  401f12:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
  401f16:	2b00      	cmp	r3, #0
  401f18:	d009      	beq.n	401f2e <ioport_set_pin_level+0x4e>
  401f1a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  401f1c:	60fb      	str	r3, [r7, #12]
	return 1U << (pin & 0x1F);
  401f1e:	68fb      	ldr	r3, [r7, #12]
  401f20:	f003 031f 	and.w	r3, r3, #31
  401f24:	2201      	movs	r2, #1
  401f26:	409a      	lsls	r2, r3
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  401f28:	693b      	ldr	r3, [r7, #16]
  401f2a:	631a      	str	r2, [r3, #48]	; 0x30
}
  401f2c:	e008      	b.n	401f40 <ioport_set_pin_level+0x60>
  401f2e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  401f30:	60bb      	str	r3, [r7, #8]
	return 1U << (pin & 0x1F);
  401f32:	68bb      	ldr	r3, [r7, #8]
  401f34:	f003 031f 	and.w	r3, r3, #31
  401f38:	2201      	movs	r2, #1
  401f3a:	409a      	lsls	r2, r3
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  401f3c:	693b      	ldr	r3, [r7, #16]
  401f3e:	635a      	str	r2, [r3, #52]	; 0x34
  401f40:	bf00      	nop
  401f42:	372c      	adds	r7, #44	; 0x2c
  401f44:	46bd      	mov	sp, r7
  401f46:	bc80      	pop	{r7}
  401f48:	4770      	bx	lr
	...

00401f4c <board_init>:
#include <board.h>
#include <conf_board.h>
#include "camera.h"

void board_init(void)
{
  401f4c:	b580      	push	{r7, lr}
  401f4e:	af00      	add	r7, sp, #0
	/* This function is meant to contain board-specific initialization code
	 * for, e.g., the I/O pins. The initialization can rely on application-
	 * specific board configuration, found in conf_board.h.
	 */
	
	wdt_disable(WDT);
  401f50:	4844      	ldr	r0, [pc, #272]	; (402064 <board_init+0x118>)
  401f52:	4b45      	ldr	r3, [pc, #276]	; (402068 <board_init+0x11c>)
  401f54:	4798      	blx	r3
	
	ioport_init();
  401f56:	4b45      	ldr	r3, [pc, #276]	; (40206c <board_init+0x120>)
  401f58:	4798      	blx	r3
		
	// initialize test LED pin
	gpio_configure_pin(LED_PIN, LED_FLAGS);
  401f5a:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  401f5e:	2013      	movs	r0, #19
  401f60:	4b43      	ldr	r3, [pc, #268]	; (402070 <board_init+0x124>)
  401f62:	4798      	blx	r3
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
  401f64:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  401f68:	2013      	movs	r0, #19
  401f6a:	4b41      	ldr	r3, [pc, #260]	; (402070 <board_init+0x124>)
  401f6c:	4798      	blx	r3
	ioport_set_pin_dir(LED_PIN, IOPORT_DIR_OUTPUT);
  401f6e:	2101      	movs	r1, #1
  401f70:	2013      	movs	r0, #19
  401f72:	4b40      	ldr	r3, [pc, #256]	; (402074 <board_init+0x128>)
  401f74:	4798      	blx	r3
	ioport_set_pin_level(LED_PIN, false);
  401f76:	2100      	movs	r1, #0
  401f78:	2013      	movs	r0, #19
  401f7a:	4b3f      	ldr	r3, [pc, #252]	; (402078 <board_init+0x12c>)
  401f7c:	4798      	blx	r3
	
	// initialize MCU RTS as a gpio and drive it low
	gpio_configure_pin(RTS_LOW, RTS_LOW_FLAGS);
  401f7e:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  401f82:	2007      	movs	r0, #7
  401f84:	4b3a      	ldr	r3, [pc, #232]	; (402070 <board_init+0x124>)
  401f86:	4798      	blx	r3
	gpio_configure_pin(RTS_LOW_GPIO, RTS_LOW_GPIO_FLAGS);
  401f88:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  401f8c:	2007      	movs	r0, #7
  401f8e:	4b38      	ldr	r3, [pc, #224]	; (402070 <board_init+0x124>)
  401f90:	4798      	blx	r3
	ioport_set_pin_dir(RTS_LOW, IOPORT_DIR_OUTPUT);
  401f92:	2101      	movs	r1, #1
  401f94:	2007      	movs	r0, #7
  401f96:	4b37      	ldr	r3, [pc, #220]	; (402074 <board_init+0x128>)
  401f98:	4798      	blx	r3
	ioport_set_pin_level(RTS_LOW, false);
  401f9a:	2100      	movs	r1, #0
  401f9c:	2007      	movs	r0, #7
  401f9e:	4b36      	ldr	r3, [pc, #216]	; (402078 <board_init+0x12c>)
  401fa0:	4798      	blx	r3

	// initialize network status pin
	gpio_configure_pin(NET_PIN, NET_PIN_FLAGS);
  401fa2:	4936      	ldr	r1, [pc, #216]	; (40207c <board_init+0x130>)
  401fa4:	2021      	movs	r0, #33	; 0x21
  401fa6:	4b32      	ldr	r3, [pc, #200]	; (402070 <board_init+0x124>)
  401fa8:	4798      	blx	r3
	ioport_set_pin_dir(NET_PIN, IOPORT_DIR_INPUT);
  401faa:	2100      	movs	r1, #0
  401fac:	2021      	movs	r0, #33	; 0x21
  401fae:	4b31      	ldr	r3, [pc, #196]	; (402074 <board_init+0x128>)
  401fb0:	4798      	blx	r3
	ioport_set_pin_mode(NET_PIN, IOPORT_MODE_PULLUP);
  401fb2:	2108      	movs	r1, #8
  401fb4:	2021      	movs	r0, #33	; 0x21
  401fb6:	4b32      	ldr	r3, [pc, #200]	; (402080 <board_init+0x134>)
  401fb8:	4798      	blx	r3
	
	// initialize USART pins
	gpio_configure_pin(PIN_USART0_RXD_IDX, PIN_USART0_RXD_FLAGS);
  401fba:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  401fbe:	2005      	movs	r0, #5
  401fc0:	4b2b      	ldr	r3, [pc, #172]	; (402070 <board_init+0x124>)
  401fc2:	4798      	blx	r3
	gpio_configure_pin(PIN_USART0_TXD_IDX, PIN_USART0_TXD_FLAGS);
  401fc4:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  401fc8:	2006      	movs	r0, #6
  401fca:	4b29      	ldr	r3, [pc, #164]	; (402070 <board_init+0x124>)
  401fcc:	4798      	blx	r3
	gpio_configure_pin(PIN_USART0_CTS_IDX, PIN_USART0_CTS_FLAGS);
  401fce:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  401fd2:	2008      	movs	r0, #8
  401fd4:	4b26      	ldr	r3, [pc, #152]	; (402070 <board_init+0x124>)
  401fd6:	4798      	blx	r3
	//gpio_configure_pin(PIN_USART0_RTS_IDX, PIN_USART0_RTS_FLAGS);	// don't configure RTS pin as RTS
	
	// initialize camera communication pins
	gpio_configure_pin(PIN_PCK1, PIN_PCK1_FLAGS);
  401fd8:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  401fdc:	2011      	movs	r0, #17
  401fde:	4b24      	ldr	r3, [pc, #144]	; (402070 <board_init+0x124>)
  401fe0:	4798      	blx	r3
	gpio_configure_pin(TWI0_DATA_GPIO, TWI0_DATA_FLAGS);
  401fe2:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  401fe6:	2003      	movs	r0, #3
  401fe8:	4b21      	ldr	r3, [pc, #132]	; (402070 <board_init+0x124>)
  401fea:	4798      	blx	r3
	gpio_configure_pin(TWI0_CLK_GPIO, TWI0_CLK_FLAGS);
  401fec:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  401ff0:	2004      	movs	r0, #4
  401ff2:	4b1f      	ldr	r3, [pc, #124]	; (402070 <board_init+0x124>)
  401ff4:	4798      	blx	r3
	gpio_configure_pin(CAM_RST, CAM_RST_FLAGS);
  401ff6:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  401ffa:	2014      	movs	r0, #20
  401ffc:	4b1c      	ldr	r3, [pc, #112]	; (402070 <board_init+0x124>)
  401ffe:	4798      	blx	r3
	ioport_set_pin_dir(CAM_RST, IOPORT_DIR_OUTPUT);
  402000:	2101      	movs	r1, #1
  402002:	2014      	movs	r0, #20
  402004:	4b1b      	ldr	r3, [pc, #108]	; (402074 <board_init+0x128>)
  402006:	4798      	blx	r3
	ioport_set_pin_level(CAM_RST, false);
  402008:	2100      	movs	r1, #0
  40200a:	2014      	movs	r0, #20
  40200c:	4b1a      	ldr	r3, [pc, #104]	; (402078 <board_init+0x12c>)
  40200e:	4798      	blx	r3
	
	// initialize camera data transmission pins
	gpio_configure_pin(OV_HSYNC_GPIO, OV_HSYNC_FLAGS);
  402010:	2171      	movs	r1, #113	; 0x71
  402012:	2010      	movs	r0, #16
  402014:	4b16      	ldr	r3, [pc, #88]	; (402070 <board_init+0x124>)
  402016:	4798      	blx	r3
	gpio_configure_pin(OV_VSYNC_GPIO, OV_VSYNC_FLAGS);
  402018:	2171      	movs	r1, #113	; 0x71
  40201a:	200f      	movs	r0, #15
  40201c:	4b14      	ldr	r3, [pc, #80]	; (402070 <board_init+0x124>)
  40201e:	4798      	blx	r3
	gpio_configure_pin(OV_DATA_BUS_D2, OV_DATA_BUS_FLAGS);
  402020:	4918      	ldr	r1, [pc, #96]	; (402084 <board_init+0x138>)
  402022:	2018      	movs	r0, #24
  402024:	4b12      	ldr	r3, [pc, #72]	; (402070 <board_init+0x124>)
  402026:	4798      	blx	r3
	gpio_configure_pin(OV_DATA_BUS_D3, OV_DATA_BUS_FLAGS);
  402028:	4916      	ldr	r1, [pc, #88]	; (402084 <board_init+0x138>)
  40202a:	2019      	movs	r0, #25
  40202c:	4b10      	ldr	r3, [pc, #64]	; (402070 <board_init+0x124>)
  40202e:	4798      	blx	r3
	gpio_configure_pin(OV_DATA_BUS_D4, OV_DATA_BUS_FLAGS);
  402030:	4914      	ldr	r1, [pc, #80]	; (402084 <board_init+0x138>)
  402032:	201a      	movs	r0, #26
  402034:	4b0e      	ldr	r3, [pc, #56]	; (402070 <board_init+0x124>)
  402036:	4798      	blx	r3
	gpio_configure_pin(OV_DATA_BUS_D5, OV_DATA_BUS_FLAGS);
  402038:	4912      	ldr	r1, [pc, #72]	; (402084 <board_init+0x138>)
  40203a:	201b      	movs	r0, #27
  40203c:	4b0c      	ldr	r3, [pc, #48]	; (402070 <board_init+0x124>)
  40203e:	4798      	blx	r3
	gpio_configure_pin(OV_DATA_BUS_D6, OV_DATA_BUS_FLAGS);
  402040:	4910      	ldr	r1, [pc, #64]	; (402084 <board_init+0x138>)
  402042:	201c      	movs	r0, #28
  402044:	4b0a      	ldr	r3, [pc, #40]	; (402070 <board_init+0x124>)
  402046:	4798      	blx	r3
	gpio_configure_pin(OV_DATA_BUS_D7, OV_DATA_BUS_FLAGS);
  402048:	490e      	ldr	r1, [pc, #56]	; (402084 <board_init+0x138>)
  40204a:	201d      	movs	r0, #29
  40204c:	4b08      	ldr	r3, [pc, #32]	; (402070 <board_init+0x124>)
  40204e:	4798      	blx	r3
	gpio_configure_pin(OV_DATA_BUS_D8, OV_DATA_BUS_FLAGS);
  402050:	490c      	ldr	r1, [pc, #48]	; (402084 <board_init+0x138>)
  402052:	201e      	movs	r0, #30
  402054:	4b06      	ldr	r3, [pc, #24]	; (402070 <board_init+0x124>)
  402056:	4798      	blx	r3
	gpio_configure_pin(OV_DATA_BUS_D9, OV_DATA_BUS_FLAGS);
  402058:	490a      	ldr	r1, [pc, #40]	; (402084 <board_init+0x138>)
  40205a:	201f      	movs	r0, #31
  40205c:	4b04      	ldr	r3, [pc, #16]	; (402070 <board_init+0x124>)
  40205e:	4798      	blx	r3
}
  402060:	bf00      	nop
  402062:	bd80      	pop	{r7, pc}
  402064:	400e1450 	.word	0x400e1450
  402068:	004002a1 	.word	0x004002a1
  40206c:	00401d29 	.word	0x00401d29
  402070:	0040186d 	.word	0x0040186d
  402074:	00401e5b 	.word	0x00401e5b
  402078:	00401ee1 	.word	0x00401ee1
  40207c:	28000079 	.word	0x28000079
  402080:	00401d41 	.word	0x00401d41
  402084:	28000001 	.word	0x28000001

00402088 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
  402088:	b580      	push	{r7, lr}
  40208a:	b084      	sub	sp, #16
  40208c:	af00      	add	r7, sp, #0
	uint32_t *pSrc, *pDest;

	/* Initialize the relocate segment */
	pSrc = &_etext;
  40208e:	4b27      	ldr	r3, [pc, #156]	; (40212c <Reset_Handler+0xa4>)
  402090:	60fb      	str	r3, [r7, #12]
	pDest = &_srelocate;
  402092:	4b27      	ldr	r3, [pc, #156]	; (402130 <Reset_Handler+0xa8>)
  402094:	60bb      	str	r3, [r7, #8]

	if (pSrc > pDest) {
  402096:	68fa      	ldr	r2, [r7, #12]
  402098:	68bb      	ldr	r3, [r7, #8]
  40209a:	429a      	cmp	r2, r3
  40209c:	d90d      	bls.n	4020ba <Reset_Handler+0x32>
		for (; pDest < &_erelocate;) {
  40209e:	e007      	b.n	4020b0 <Reset_Handler+0x28>
			*pDest++ = *pSrc++;
  4020a0:	68bb      	ldr	r3, [r7, #8]
  4020a2:	1d1a      	adds	r2, r3, #4
  4020a4:	60ba      	str	r2, [r7, #8]
  4020a6:	68fa      	ldr	r2, [r7, #12]
  4020a8:	1d11      	adds	r1, r2, #4
  4020aa:	60f9      	str	r1, [r7, #12]
  4020ac:	6812      	ldr	r2, [r2, #0]
  4020ae:	601a      	str	r2, [r3, #0]
		for (; pDest < &_erelocate;) {
  4020b0:	68bb      	ldr	r3, [r7, #8]
  4020b2:	4a20      	ldr	r2, [pc, #128]	; (402134 <Reset_Handler+0xac>)
  4020b4:	4293      	cmp	r3, r2
  4020b6:	d3f3      	bcc.n	4020a0 <Reset_Handler+0x18>
  4020b8:	e020      	b.n	4020fc <Reset_Handler+0x74>
		}
	} else if (pSrc < pDest) {
  4020ba:	68fa      	ldr	r2, [r7, #12]
  4020bc:	68bb      	ldr	r3, [r7, #8]
  4020be:	429a      	cmp	r2, r3
  4020c0:	d21c      	bcs.n	4020fc <Reset_Handler+0x74>
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
  4020c2:	4a1c      	ldr	r2, [pc, #112]	; (402134 <Reset_Handler+0xac>)
  4020c4:	4b1a      	ldr	r3, [pc, #104]	; (402130 <Reset_Handler+0xa8>)
  4020c6:	1ad3      	subs	r3, r2, r3
  4020c8:	607b      	str	r3, [r7, #4]
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
  4020ca:	68fa      	ldr	r2, [r7, #12]
  4020cc:	687b      	ldr	r3, [r7, #4]
  4020ce:	4413      	add	r3, r2
  4020d0:	3b04      	subs	r3, #4
  4020d2:	60fb      	str	r3, [r7, #12]
		pDest = (uint32_t*)((uint32_t)pDest + nb_bytes) - 1;
  4020d4:	68ba      	ldr	r2, [r7, #8]
  4020d6:	687b      	ldr	r3, [r7, #4]
  4020d8:	4413      	add	r3, r2
  4020da:	3b04      	subs	r3, #4
  4020dc:	60bb      	str	r3, [r7, #8]
		for (;nb_bytes;nb_bytes -= 4) {
  4020de:	e00a      	b.n	4020f6 <Reset_Handler+0x6e>
			*pDest-- = *pSrc--;
  4020e0:	68bb      	ldr	r3, [r7, #8]
  4020e2:	1f1a      	subs	r2, r3, #4
  4020e4:	60ba      	str	r2, [r7, #8]
  4020e6:	68fa      	ldr	r2, [r7, #12]
  4020e8:	1f11      	subs	r1, r2, #4
  4020ea:	60f9      	str	r1, [r7, #12]
  4020ec:	6812      	ldr	r2, [r2, #0]
  4020ee:	601a      	str	r2, [r3, #0]
		for (;nb_bytes;nb_bytes -= 4) {
  4020f0:	687b      	ldr	r3, [r7, #4]
  4020f2:	3b04      	subs	r3, #4
  4020f4:	607b      	str	r3, [r7, #4]
  4020f6:	687b      	ldr	r3, [r7, #4]
  4020f8:	2b00      	cmp	r3, #0
  4020fa:	d1f1      	bne.n	4020e0 <Reset_Handler+0x58>

    No Operation does nothing. This instruction can be used for code alignment purposes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __NOP(void)
{
  __ASM volatile ("nop");
  4020fc:	bf00      	nop
		}
	}
	__NOP();

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  4020fe:	4b0e      	ldr	r3, [pc, #56]	; (402138 <Reset_Handler+0xb0>)
  402100:	60bb      	str	r3, [r7, #8]
  402102:	e004      	b.n	40210e <Reset_Handler+0x86>
		*pDest++ = 0;
  402104:	68bb      	ldr	r3, [r7, #8]
  402106:	1d1a      	adds	r2, r3, #4
  402108:	60ba      	str	r2, [r7, #8]
  40210a:	2200      	movs	r2, #0
  40210c:	601a      	str	r2, [r3, #0]
	for (pDest = &_szero; pDest < &_ezero;) {
  40210e:	68bb      	ldr	r3, [r7, #8]
  402110:	4a0a      	ldr	r2, [pc, #40]	; (40213c <Reset_Handler+0xb4>)
  402112:	4293      	cmp	r3, r2
  402114:	d3f6      	bcc.n	402104 <Reset_Handler+0x7c>
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
  402116:	4b0a      	ldr	r3, [pc, #40]	; (402140 <Reset_Handler+0xb8>)
  402118:	60fb      	str	r3, [r7, #12]
	SCB->VTOR = ((uint32_t) pSrc);
  40211a:	4a0a      	ldr	r2, [pc, #40]	; (402144 <Reset_Handler+0xbc>)
  40211c:	68fb      	ldr	r3, [r7, #12]
  40211e:	6093      	str	r3, [r2, #8]

	/* Initialize the C library */
	__libc_init_array();
  402120:	4b09      	ldr	r3, [pc, #36]	; (402148 <Reset_Handler+0xc0>)
  402122:	4798      	blx	r3

	/* Branch to main function */
	main();
  402124:	4b09      	ldr	r3, [pc, #36]	; (40214c <Reset_Handler+0xc4>)
  402126:	4798      	blx	r3

	/* Infinite loop */
	while (1);
  402128:	e7fe      	b.n	402128 <Reset_Handler+0xa0>
  40212a:	bf00      	nop
  40212c:	0040902c 	.word	0x0040902c
  402130:	20000000 	.word	0x20000000
  402134:	200009bc 	.word	0x200009bc
  402138:	200009bc 	.word	0x200009bc
  40213c:	20001c44 	.word	0x20001c44
  402140:	00400000 	.word	0x00400000
  402144:	e000ed00 	.word	0xe000ed00
  402148:	004043ad 	.word	0x004043ad
  40214c:	004023dd 	.word	0x004023dd

00402150 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  402150:	b480      	push	{r7}
  402152:	af00      	add	r7, sp, #0
	while (1) {
  402154:	e7fe      	b.n	402154 <Dummy_Handler+0x4>
	...

00402158 <SystemCoreClockUpdate>:

/**
 * \brief Get Core Clock Frequency.
 */
void SystemCoreClockUpdate( void )
{
  402158:	b480      	push	{r7}
  40215a:	af00      	add	r7, sp, #0
	/* Determine clock frequency according to clock register values */
	switch ( PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk ) {
  40215c:	4b5d      	ldr	r3, [pc, #372]	; (4022d4 <SystemCoreClockUpdate+0x17c>)
  40215e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  402160:	f003 0303 	and.w	r3, r3, #3
  402164:	2b03      	cmp	r3, #3
  402166:	f200 8096 	bhi.w	402296 <SystemCoreClockUpdate+0x13e>
  40216a:	a201      	add	r2, pc, #4	; (adr r2, 402170 <SystemCoreClockUpdate+0x18>)
  40216c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  402170:	00402181 	.word	0x00402181
  402174:	004021a1 	.word	0x004021a1
  402178:	004021eb 	.word	0x004021eb
  40217c:	004021eb 	.word	0x004021eb
	case PMC_MCKR_CSS_SLOW_CLK: /* Slow clock */
			if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL ) {
  402180:	4b55      	ldr	r3, [pc, #340]	; (4022d8 <SystemCoreClockUpdate+0x180>)
  402182:	695b      	ldr	r3, [r3, #20]
  402184:	f003 0380 	and.w	r3, r3, #128	; 0x80
  402188:	2b00      	cmp	r3, #0
  40218a:	d004      	beq.n	402196 <SystemCoreClockUpdate+0x3e>
				SystemCoreClock = CHIP_FREQ_XTAL_32K;
  40218c:	4b53      	ldr	r3, [pc, #332]	; (4022dc <SystemCoreClockUpdate+0x184>)
  40218e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  402192:	601a      	str	r2, [r3, #0]
			} else {
				SystemCoreClock = CHIP_FREQ_SLCK_RC;
			}
		break;
  402194:	e080      	b.n	402298 <SystemCoreClockUpdate+0x140>
				SystemCoreClock = CHIP_FREQ_SLCK_RC;
  402196:	4b51      	ldr	r3, [pc, #324]	; (4022dc <SystemCoreClockUpdate+0x184>)
  402198:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
  40219c:	601a      	str	r2, [r3, #0]
		break;
  40219e:	e07b      	b.n	402298 <SystemCoreClockUpdate+0x140>
		
	case PMC_MCKR_CSS_MAIN_CLK: /* Main clock */
		if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  4021a0:	4b4c      	ldr	r3, [pc, #304]	; (4022d4 <SystemCoreClockUpdate+0x17c>)
  4021a2:	6a1b      	ldr	r3, [r3, #32]
  4021a4:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
  4021a8:	2b00      	cmp	r3, #0
  4021aa:	d003      	beq.n	4021b4 <SystemCoreClockUpdate+0x5c>
			SystemCoreClock = CHIP_FREQ_XTAL;
  4021ac:	4b4b      	ldr	r3, [pc, #300]	; (4022dc <SystemCoreClockUpdate+0x184>)
  4021ae:	4a4c      	ldr	r2, [pc, #304]	; (4022e0 <SystemCoreClockUpdate+0x188>)
  4021b0:	601a      	str	r2, [r3, #0]
			
			default:
			break;
			}
		}
		break;
  4021b2:	e071      	b.n	402298 <SystemCoreClockUpdate+0x140>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4021b4:	4b49      	ldr	r3, [pc, #292]	; (4022dc <SystemCoreClockUpdate+0x184>)
  4021b6:	4a4b      	ldr	r2, [pc, #300]	; (4022e4 <SystemCoreClockUpdate+0x18c>)
  4021b8:	601a      	str	r2, [r3, #0]
			switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  4021ba:	4b46      	ldr	r3, [pc, #280]	; (4022d4 <SystemCoreClockUpdate+0x17c>)
  4021bc:	6a1b      	ldr	r3, [r3, #32]
  4021be:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4021c2:	2b10      	cmp	r3, #16
  4021c4:	d008      	beq.n	4021d8 <SystemCoreClockUpdate+0x80>
  4021c6:	2b20      	cmp	r3, #32
  4021c8:	d00a      	beq.n	4021e0 <SystemCoreClockUpdate+0x88>
  4021ca:	2b00      	cmp	r3, #0
  4021cc:	d000      	beq.n	4021d0 <SystemCoreClockUpdate+0x78>
			break;
  4021ce:	e00b      	b.n	4021e8 <SystemCoreClockUpdate+0x90>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4021d0:	4b42      	ldr	r3, [pc, #264]	; (4022dc <SystemCoreClockUpdate+0x184>)
  4021d2:	4a44      	ldr	r2, [pc, #272]	; (4022e4 <SystemCoreClockUpdate+0x18c>)
  4021d4:	601a      	str	r2, [r3, #0]
			break;
  4021d6:	e007      	b.n	4021e8 <SystemCoreClockUpdate+0x90>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  4021d8:	4b40      	ldr	r3, [pc, #256]	; (4022dc <SystemCoreClockUpdate+0x184>)
  4021da:	4a43      	ldr	r2, [pc, #268]	; (4022e8 <SystemCoreClockUpdate+0x190>)
  4021dc:	601a      	str	r2, [r3, #0]
			break;
  4021de:	e003      	b.n	4021e8 <SystemCoreClockUpdate+0x90>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  4021e0:	4b3e      	ldr	r3, [pc, #248]	; (4022dc <SystemCoreClockUpdate+0x184>)
  4021e2:	4a3f      	ldr	r2, [pc, #252]	; (4022e0 <SystemCoreClockUpdate+0x188>)
  4021e4:	601a      	str	r2, [r3, #0]
			break;
  4021e6:	bf00      	nop
		break;
  4021e8:	e056      	b.n	402298 <SystemCoreClockUpdate+0x140>
		
	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
	case PMC_MCKR_CSS_PLLB_CLK:	/* PLLB clock */
			if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  4021ea:	4b3a      	ldr	r3, [pc, #232]	; (4022d4 <SystemCoreClockUpdate+0x17c>)
  4021ec:	6a1b      	ldr	r3, [r3, #32]
  4021ee:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
  4021f2:	2b00      	cmp	r3, #0
  4021f4:	d003      	beq.n	4021fe <SystemCoreClockUpdate+0xa6>
				SystemCoreClock = CHIP_FREQ_XTAL;
  4021f6:	4b39      	ldr	r3, [pc, #228]	; (4022dc <SystemCoreClockUpdate+0x184>)
  4021f8:	4a39      	ldr	r2, [pc, #228]	; (4022e0 <SystemCoreClockUpdate+0x188>)
  4021fa:	601a      	str	r2, [r3, #0]
  4021fc:	e019      	b.n	402232 <SystemCoreClockUpdate+0xda>
			} else {
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4021fe:	4b37      	ldr	r3, [pc, #220]	; (4022dc <SystemCoreClockUpdate+0x184>)
  402200:	4a38      	ldr	r2, [pc, #224]	; (4022e4 <SystemCoreClockUpdate+0x18c>)
  402202:	601a      	str	r2, [r3, #0]
				
				switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  402204:	4b33      	ldr	r3, [pc, #204]	; (4022d4 <SystemCoreClockUpdate+0x17c>)
  402206:	6a1b      	ldr	r3, [r3, #32]
  402208:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40220c:	2b10      	cmp	r3, #16
  40220e:	d008      	beq.n	402222 <SystemCoreClockUpdate+0xca>
  402210:	2b20      	cmp	r3, #32
  402212:	d00a      	beq.n	40222a <SystemCoreClockUpdate+0xd2>
  402214:	2b00      	cmp	r3, #0
  402216:	d000      	beq.n	40221a <SystemCoreClockUpdate+0xc2>
				case CKGR_MOR_MOSCRCF_12_MHz:
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
					break;
				
				default:
					break;
  402218:	e00b      	b.n	402232 <SystemCoreClockUpdate+0xda>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  40221a:	4b30      	ldr	r3, [pc, #192]	; (4022dc <SystemCoreClockUpdate+0x184>)
  40221c:	4a31      	ldr	r2, [pc, #196]	; (4022e4 <SystemCoreClockUpdate+0x18c>)
  40221e:	601a      	str	r2, [r3, #0]
					break;
  402220:	e007      	b.n	402232 <SystemCoreClockUpdate+0xda>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  402222:	4b2e      	ldr	r3, [pc, #184]	; (4022dc <SystemCoreClockUpdate+0x184>)
  402224:	4a30      	ldr	r2, [pc, #192]	; (4022e8 <SystemCoreClockUpdate+0x190>)
  402226:	601a      	str	r2, [r3, #0]
					break;
  402228:	e003      	b.n	402232 <SystemCoreClockUpdate+0xda>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  40222a:	4b2c      	ldr	r3, [pc, #176]	; (4022dc <SystemCoreClockUpdate+0x184>)
  40222c:	4a2c      	ldr	r2, [pc, #176]	; (4022e0 <SystemCoreClockUpdate+0x188>)
  40222e:	601a      	str	r2, [r3, #0]
					break;
  402230:	bf00      	nop
				}
			}
			
			if ( (uint32_t)(PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) ==
  402232:	4b28      	ldr	r3, [pc, #160]	; (4022d4 <SystemCoreClockUpdate+0x17c>)
  402234:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  402236:	f003 0303 	and.w	r3, r3, #3
  40223a:	2b02      	cmp	r3, #2
  40223c:	d115      	bne.n	40226a <SystemCoreClockUpdate+0x112>
					PMC_MCKR_CSS_PLLA_CLK ) {
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
  40223e:	4b25      	ldr	r3, [pc, #148]	; (4022d4 <SystemCoreClockUpdate+0x17c>)
  402240:	6a9b      	ldr	r3, [r3, #40]	; 0x28
						>> CKGR_PLLAR_MULA_Pos) + 1U);
  402242:	0c1b      	lsrs	r3, r3, #16
  402244:	f3c3 030a 	ubfx	r3, r3, #0, #11
  402248:	3301      	adds	r3, #1
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
  40224a:	4a24      	ldr	r2, [pc, #144]	; (4022dc <SystemCoreClockUpdate+0x184>)
  40224c:	6812      	ldr	r2, [r2, #0]
  40224e:	fb02 f303 	mul.w	r3, r2, r3
  402252:	4a22      	ldr	r2, [pc, #136]	; (4022dc <SystemCoreClockUpdate+0x184>)
  402254:	6013      	str	r3, [r2, #0]
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
  402256:	4b1f      	ldr	r3, [pc, #124]	; (4022d4 <SystemCoreClockUpdate+0x17c>)
  402258:	6a9b      	ldr	r3, [r3, #40]	; 0x28
						>> CKGR_PLLAR_DIVA_Pos));
  40225a:	b2db      	uxtb	r3, r3
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
  40225c:	4a1f      	ldr	r2, [pc, #124]	; (4022dc <SystemCoreClockUpdate+0x184>)
  40225e:	6812      	ldr	r2, [r2, #0]
  402260:	fbb2 f3f3 	udiv	r3, r2, r3
  402264:	4a1d      	ldr	r2, [pc, #116]	; (4022dc <SystemCoreClockUpdate+0x184>)
  402266:	6013      	str	r3, [r2, #0]
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
						>> CKGR_PLLBR_MULB_Pos) + 1U);
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
						>> CKGR_PLLBR_DIVB_Pos));
			}
		break;
  402268:	e016      	b.n	402298 <SystemCoreClockUpdate+0x140>
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  40226a:	4b1a      	ldr	r3, [pc, #104]	; (4022d4 <SystemCoreClockUpdate+0x17c>)
  40226c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
						>> CKGR_PLLBR_MULB_Pos) + 1U);
  40226e:	0c1b      	lsrs	r3, r3, #16
  402270:	f3c3 030a 	ubfx	r3, r3, #0, #11
  402274:	3301      	adds	r3, #1
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  402276:	4a19      	ldr	r2, [pc, #100]	; (4022dc <SystemCoreClockUpdate+0x184>)
  402278:	6812      	ldr	r2, [r2, #0]
  40227a:	fb02 f303 	mul.w	r3, r2, r3
  40227e:	4a17      	ldr	r2, [pc, #92]	; (4022dc <SystemCoreClockUpdate+0x184>)
  402280:	6013      	str	r3, [r2, #0]
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  402282:	4b14      	ldr	r3, [pc, #80]	; (4022d4 <SystemCoreClockUpdate+0x17c>)
  402284:	6adb      	ldr	r3, [r3, #44]	; 0x2c
						>> CKGR_PLLBR_DIVB_Pos));
  402286:	b2db      	uxtb	r3, r3
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  402288:	4a14      	ldr	r2, [pc, #80]	; (4022dc <SystemCoreClockUpdate+0x184>)
  40228a:	6812      	ldr	r2, [r2, #0]
  40228c:	fbb2 f3f3 	udiv	r3, r2, r3
  402290:	4a12      	ldr	r2, [pc, #72]	; (4022dc <SystemCoreClockUpdate+0x184>)
  402292:	6013      	str	r3, [r2, #0]
		break;
  402294:	e000      	b.n	402298 <SystemCoreClockUpdate+0x140>
		
	default:
		break;
  402296:	bf00      	nop
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
  402298:	4b0e      	ldr	r3, [pc, #56]	; (4022d4 <SystemCoreClockUpdate+0x17c>)
  40229a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40229c:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4022a0:	2b70      	cmp	r3, #112	; 0x70
  4022a2:	d108      	bne.n	4022b6 <SystemCoreClockUpdate+0x15e>
		SystemCoreClock /= 3U;
  4022a4:	4b0d      	ldr	r3, [pc, #52]	; (4022dc <SystemCoreClockUpdate+0x184>)
  4022a6:	681b      	ldr	r3, [r3, #0]
  4022a8:	4a10      	ldr	r2, [pc, #64]	; (4022ec <SystemCoreClockUpdate+0x194>)
  4022aa:	fba2 2303 	umull	r2, r3, r2, r3
  4022ae:	085b      	lsrs	r3, r3, #1
  4022b0:	4a0a      	ldr	r2, [pc, #40]	; (4022dc <SystemCoreClockUpdate+0x184>)
  4022b2:	6013      	str	r3, [r2, #0]
	} else {
		SystemCoreClock >>=
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
	}
}
  4022b4:	e00a      	b.n	4022cc <SystemCoreClockUpdate+0x174>
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  4022b6:	4b07      	ldr	r3, [pc, #28]	; (4022d4 <SystemCoreClockUpdate+0x17c>)
  4022b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4022ba:	091b      	lsrs	r3, r3, #4
  4022bc:	f003 0307 	and.w	r3, r3, #7
		SystemCoreClock >>=
  4022c0:	4a06      	ldr	r2, [pc, #24]	; (4022dc <SystemCoreClockUpdate+0x184>)
  4022c2:	6812      	ldr	r2, [r2, #0]
  4022c4:	fa22 f303 	lsr.w	r3, r2, r3
  4022c8:	4a04      	ldr	r2, [pc, #16]	; (4022dc <SystemCoreClockUpdate+0x184>)
  4022ca:	6013      	str	r3, [r2, #0]
}
  4022cc:	bf00      	nop
  4022ce:	46bd      	mov	sp, r7
  4022d0:	bc80      	pop	{r7}
  4022d2:	4770      	bx	lr
  4022d4:	400e0400 	.word	0x400e0400
  4022d8:	400e1410 	.word	0x400e1410
  4022dc:	2000000c 	.word	0x2000000c
  4022e0:	00b71b00 	.word	0x00b71b00
  4022e4:	003d0900 	.word	0x003d0900
  4022e8:	007a1200 	.word	0x007a1200
  4022ec:	aaaaaaab 	.word	0xaaaaaaab

004022f0 <system_init_flash>:
 * \brief Initialize flash wait state according to operating frequency.
 *
 * \param ul_clk System clock frequency.
 */
void system_init_flash( uint32_t ul_clk )
{
  4022f0:	b480      	push	{r7}
  4022f2:	b083      	sub	sp, #12
  4022f4:	af00      	add	r7, sp, #0
  4022f6:	6078      	str	r0, [r7, #4]
  /* Set FWS for embedded Flash access according to operating frequency */
#if !defined(ID_EFC1)
	if ( ul_clk < CHIP_FREQ_FWS_0 ) {
  4022f8:	687b      	ldr	r3, [r7, #4]
  4022fa:	4a18      	ldr	r2, [pc, #96]	; (40235c <system_init_flash+0x6c>)
  4022fc:	4293      	cmp	r3, r2
  4022fe:	d804      	bhi.n	40230a <system_init_flash+0x1a>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  402300:	4b17      	ldr	r3, [pc, #92]	; (402360 <system_init_flash+0x70>)
  402302:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  402306:	601a      	str	r2, [r3, #0]
				}
			}
		}
	}
#endif
}
  402308:	e023      	b.n	402352 <system_init_flash+0x62>
		if ( ul_clk < CHIP_FREQ_FWS_1 ) {
  40230a:	687b      	ldr	r3, [r7, #4]
  40230c:	4a15      	ldr	r2, [pc, #84]	; (402364 <system_init_flash+0x74>)
  40230e:	4293      	cmp	r3, r2
  402310:	d803      	bhi.n	40231a <system_init_flash+0x2a>
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  402312:	4b13      	ldr	r3, [pc, #76]	; (402360 <system_init_flash+0x70>)
  402314:	4a14      	ldr	r2, [pc, #80]	; (402368 <system_init_flash+0x78>)
  402316:	601a      	str	r2, [r3, #0]
}
  402318:	e01b      	b.n	402352 <system_init_flash+0x62>
			if ( ul_clk < CHIP_FREQ_FWS_2 ) {
  40231a:	687b      	ldr	r3, [r7, #4]
  40231c:	4a13      	ldr	r2, [pc, #76]	; (40236c <system_init_flash+0x7c>)
  40231e:	4293      	cmp	r3, r2
  402320:	d803      	bhi.n	40232a <system_init_flash+0x3a>
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  402322:	4b0f      	ldr	r3, [pc, #60]	; (402360 <system_init_flash+0x70>)
  402324:	4a12      	ldr	r2, [pc, #72]	; (402370 <system_init_flash+0x80>)
  402326:	601a      	str	r2, [r3, #0]
}
  402328:	e013      	b.n	402352 <system_init_flash+0x62>
				if ( ul_clk < CHIP_FREQ_FWS_3 ) {
  40232a:	687b      	ldr	r3, [r7, #4]
  40232c:	4a11      	ldr	r2, [pc, #68]	; (402374 <system_init_flash+0x84>)
  40232e:	4293      	cmp	r3, r2
  402330:	d803      	bhi.n	40233a <system_init_flash+0x4a>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  402332:	4b0b      	ldr	r3, [pc, #44]	; (402360 <system_init_flash+0x70>)
  402334:	4a10      	ldr	r2, [pc, #64]	; (402378 <system_init_flash+0x88>)
  402336:	601a      	str	r2, [r3, #0]
}
  402338:	e00b      	b.n	402352 <system_init_flash+0x62>
					if ( ul_clk < CHIP_FREQ_FWS_4 ) {
  40233a:	687b      	ldr	r3, [r7, #4]
  40233c:	4a0f      	ldr	r2, [pc, #60]	; (40237c <system_init_flash+0x8c>)
  40233e:	4293      	cmp	r3, r2
  402340:	d804      	bhi.n	40234c <system_init_flash+0x5c>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  402342:	4b07      	ldr	r3, [pc, #28]	; (402360 <system_init_flash+0x70>)
  402344:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  402348:	601a      	str	r2, [r3, #0]
}
  40234a:	e002      	b.n	402352 <system_init_flash+0x62>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  40234c:	4b04      	ldr	r3, [pc, #16]	; (402360 <system_init_flash+0x70>)
  40234e:	4a0c      	ldr	r2, [pc, #48]	; (402380 <system_init_flash+0x90>)
  402350:	601a      	str	r2, [r3, #0]
}
  402352:	bf00      	nop
  402354:	370c      	adds	r7, #12
  402356:	46bd      	mov	sp, r7
  402358:	bc80      	pop	{r7}
  40235a:	4770      	bx	lr
  40235c:	01312cff 	.word	0x01312cff
  402360:	400e0a00 	.word	0x400e0a00
  402364:	026259ff 	.word	0x026259ff
  402368:	04000100 	.word	0x04000100
  40236c:	039386ff 	.word	0x039386ff
  402370:	04000200 	.word	0x04000200
  402374:	04c4b3ff 	.word	0x04c4b3ff
  402378:	04000300 	.word	0x04000300
  40237c:	05f5e0ff 	.word	0x05f5e0ff
  402380:	04000500 	.word	0x04000500

00402384 <_sbrk>:
extern void _exit(int status);
extern void _kill(int pid, int sig);
extern int _getpid(void);

extern caddr_t _sbrk(int incr)
{
  402384:	b480      	push	{r7}
  402386:	b085      	sub	sp, #20
  402388:	af00      	add	r7, sp, #0
  40238a:	6078      	str	r0, [r7, #4]
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;
  40238c:	4b10      	ldr	r3, [pc, #64]	; (4023d0 <_sbrk+0x4c>)
  40238e:	60fb      	str	r3, [r7, #12]

	if (heap == NULL) {
  402390:	4b10      	ldr	r3, [pc, #64]	; (4023d4 <_sbrk+0x50>)
  402392:	681b      	ldr	r3, [r3, #0]
  402394:	2b00      	cmp	r3, #0
  402396:	d102      	bne.n	40239e <_sbrk+0x1a>
		heap = (unsigned char *)&_end;
  402398:	4b0e      	ldr	r3, [pc, #56]	; (4023d4 <_sbrk+0x50>)
  40239a:	4a0f      	ldr	r2, [pc, #60]	; (4023d8 <_sbrk+0x54>)
  40239c:	601a      	str	r2, [r3, #0]
	}
	prev_heap = heap;
  40239e:	4b0d      	ldr	r3, [pc, #52]	; (4023d4 <_sbrk+0x50>)
  4023a0:	681b      	ldr	r3, [r3, #0]
  4023a2:	60bb      	str	r3, [r7, #8]

	if (((int)prev_heap + incr) > ramend) {
  4023a4:	68ba      	ldr	r2, [r7, #8]
  4023a6:	687b      	ldr	r3, [r7, #4]
  4023a8:	441a      	add	r2, r3
  4023aa:	68fb      	ldr	r3, [r7, #12]
  4023ac:	429a      	cmp	r2, r3
  4023ae:	dd02      	ble.n	4023b6 <_sbrk+0x32>
		return (caddr_t) -1;	
  4023b0:	f04f 33ff 	mov.w	r3, #4294967295
  4023b4:	e006      	b.n	4023c4 <_sbrk+0x40>
	}

	heap += incr;
  4023b6:	4b07      	ldr	r3, [pc, #28]	; (4023d4 <_sbrk+0x50>)
  4023b8:	681a      	ldr	r2, [r3, #0]
  4023ba:	687b      	ldr	r3, [r7, #4]
  4023bc:	4413      	add	r3, r2
  4023be:	4a05      	ldr	r2, [pc, #20]	; (4023d4 <_sbrk+0x50>)
  4023c0:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap;
  4023c2:	68bb      	ldr	r3, [r7, #8]
}
  4023c4:	4618      	mov	r0, r3
  4023c6:	3714      	adds	r7, #20
  4023c8:	46bd      	mov	sp, r7
  4023ca:	bc80      	pop	{r7}
  4023cc:	4770      	bx	lr
  4023ce:	bf00      	nop
  4023d0:	2001fffc 	.word	0x2001fffc
  4023d4:	20001c00 	.word	0x20001c00
  4023d8:	20004c48 	.word	0x20004c48

004023dc <main>:
		}
	}
}

int main (void)
{
  4023dc:	b580      	push	{r7, lr}
  4023de:	b084      	sub	sp, #16
  4023e0:	af00      	add	r7, sp, #0
	// system level initialization calls
	sysclk_init();
  4023e2:	4b10      	ldr	r3, [pc, #64]	; (402424 <main+0x48>)
  4023e4:	4798      	blx	r3
	board_init();	
  4023e6:	4b10      	ldr	r3, [pc, #64]	; (402428 <main+0x4c>)
  4023e8:	4798      	blx	r3
	configure_tc();
  4023ea:	4b10      	ldr	r3, [pc, #64]	; (40242c <main+0x50>)
  4023ec:	4798      	blx	r3
	tc_start(TC0, 0);
  4023ee:	2100      	movs	r1, #0
  4023f0:	480f      	ldr	r0, [pc, #60]	; (402430 <main+0x54>)
  4023f2:	4b10      	ldr	r3, [pc, #64]	; (402434 <main+0x58>)
  4023f4:	4798      	blx	r3
	
	// Custom configuration calls
	configure_wifi();		// configures and initializes wifi module
  4023f6:	4b10      	ldr	r3, [pc, #64]	; (402438 <main+0x5c>)
  4023f8:	4798      	blx	r3
	//configure_camera();		// configures and initializes camera module
	//reboot_wifi();			// reboots the wifi chip (takes several seconds)

	char *samples_data;
	uint32_t tr = 440;
  4023fa:	f44f 73dc 	mov.w	r3, #440	; 0x1b8
  4023fe:	60fb      	str	r3, [r7, #12]
	uint32_t sr = 800;
  402400:	f44f 7348 	mov.w	r3, #800	; 0x320
  402404:	60bb      	str	r3, [r7, #8]

	samples_data = generate_spoof(440);
  402406:	f44f 70dc 	mov.w	r0, #440	; 0x1b8
  40240a:	4b0c      	ldr	r3, [pc, #48]	; (40243c <main+0x60>)
  40240c:	4798      	blx	r3
  40240e:	6078      	str	r0, [r7, #4]
	while(1) {
		if(wifi_setup_flag) {	// if the user pressed the wifi setup button, 
  402410:	4b0b      	ldr	r3, [pc, #44]	; (402440 <main+0x64>)
  402412:	681b      	ldr	r3, [r3, #0]
  402414:	2b00      	cmp	r3, #0
  402416:	d001      	beq.n	40241c <main+0x40>
			setup_wifi();		// the wifi chip tries to reassociate to a new network
  402418:	4b0a      	ldr	r3, [pc, #40]	; (402444 <main+0x68>)
  40241a:	4798      	blx	r3
		}

		//start_capture();		// capture the image to internal memory
		//post_test();
		//post_image();			// send the image to the wifi chip
		send_data(samples_data);
  40241c:	6878      	ldr	r0, [r7, #4]
  40241e:	4b0a      	ldr	r3, [pc, #40]	; (402448 <main+0x6c>)
  402420:	4798      	blx	r3
		if(wifi_setup_flag) {	// if the user pressed the wifi setup button, 
  402422:	e7f5      	b.n	402410 <main+0x34>
  402424:	004014dd 	.word	0x004014dd
  402428:	00401f4d 	.word	0x00401f4d
  40242c:	00400a2d 	.word	0x00400a2d
  402430:	40010000 	.word	0x40010000
  402434:	00400171 	.word	0x00400171
  402438:	004011c5 	.word	0x004011c5
  40243c:	004002c1 	.word	0x004002c1
  402440:	20001bf4 	.word	0x20001bf4
  402444:	004010dd 	.word	0x004010dd
  402448:	00400395 	.word	0x00400395

0040244c <sinf>:
  40244c:	b500      	push	{lr}
  40244e:	4a1d      	ldr	r2, [pc, #116]	; (4024c4 <sinf+0x78>)
  402450:	f020 4300 	bic.w	r3, r0, #2147483648	; 0x80000000
  402454:	4293      	cmp	r3, r2
  402456:	b083      	sub	sp, #12
  402458:	dd19      	ble.n	40248e <sinf+0x42>
  40245a:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
  40245e:	db05      	blt.n	40246c <sinf+0x20>
  402460:	4601      	mov	r1, r0
  402462:	f001 fb25 	bl	403ab0 <__aeabi_fsub>
  402466:	b003      	add	sp, #12
  402468:	f85d fb04 	ldr.w	pc, [sp], #4
  40246c:	4669      	mov	r1, sp
  40246e:	f000 f82b 	bl	4024c8 <__ieee754_rem_pio2f>
  402472:	f000 0003 	and.w	r0, r0, #3
  402476:	2801      	cmp	r0, #1
  402478:	d018      	beq.n	4024ac <sinf+0x60>
  40247a:	2802      	cmp	r0, #2
  40247c:	d00e      	beq.n	40249c <sinf+0x50>
  40247e:	b1d0      	cbz	r0, 4024b6 <sinf+0x6a>
  402480:	9901      	ldr	r1, [sp, #4]
  402482:	9800      	ldr	r0, [sp, #0]
  402484:	f000 f98e 	bl	4027a4 <__kernel_cosf>
  402488:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
  40248c:	e7eb      	b.n	402466 <sinf+0x1a>
  40248e:	2200      	movs	r2, #0
  402490:	2100      	movs	r1, #0
  402492:	f000 fdd1 	bl	403038 <__kernel_sinf>
  402496:	b003      	add	sp, #12
  402498:	f85d fb04 	ldr.w	pc, [sp], #4
  40249c:	2201      	movs	r2, #1
  40249e:	9901      	ldr	r1, [sp, #4]
  4024a0:	9800      	ldr	r0, [sp, #0]
  4024a2:	f000 fdc9 	bl	403038 <__kernel_sinf>
  4024a6:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
  4024aa:	e7dc      	b.n	402466 <sinf+0x1a>
  4024ac:	9901      	ldr	r1, [sp, #4]
  4024ae:	9800      	ldr	r0, [sp, #0]
  4024b0:	f000 f978 	bl	4027a4 <__kernel_cosf>
  4024b4:	e7d7      	b.n	402466 <sinf+0x1a>
  4024b6:	2201      	movs	r2, #1
  4024b8:	9901      	ldr	r1, [sp, #4]
  4024ba:	9800      	ldr	r0, [sp, #0]
  4024bc:	f000 fdbc 	bl	403038 <__kernel_sinf>
  4024c0:	e7d1      	b.n	402466 <sinf+0x1a>
  4024c2:	bf00      	nop
  4024c4:	3f490fd8 	.word	0x3f490fd8

004024c8 <__ieee754_rem_pio2f>:
  4024c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4024cc:	4aa8      	ldr	r2, [pc, #672]	; (402770 <__ieee754_rem_pio2f+0x2a8>)
  4024ce:	f020 4400 	bic.w	r4, r0, #2147483648	; 0x80000000
  4024d2:	4294      	cmp	r4, r2
  4024d4:	b089      	sub	sp, #36	; 0x24
  4024d6:	dd6e      	ble.n	4025b6 <__ieee754_rem_pio2f+0xee>
  4024d8:	4aa6      	ldr	r2, [pc, #664]	; (402774 <__ieee754_rem_pio2f+0x2ac>)
  4024da:	4294      	cmp	r4, r2
  4024dc:	4606      	mov	r6, r0
  4024de:	460d      	mov	r5, r1
  4024e0:	dc1c      	bgt.n	40251c <__ieee754_rem_pio2f+0x54>
  4024e2:	2800      	cmp	r0, #0
  4024e4:	49a4      	ldr	r1, [pc, #656]	; (402778 <__ieee754_rem_pio2f+0x2b0>)
  4024e6:	f340 80fc 	ble.w	4026e2 <__ieee754_rem_pio2f+0x21a>
  4024ea:	f001 fae1 	bl	403ab0 <__aeabi_fsub>
  4024ee:	4ba3      	ldr	r3, [pc, #652]	; (40277c <__ieee754_rem_pio2f+0x2b4>)
  4024f0:	f024 040f 	bic.w	r4, r4, #15
  4024f4:	429c      	cmp	r4, r3
  4024f6:	4606      	mov	r6, r0
  4024f8:	d06c      	beq.n	4025d4 <__ieee754_rem_pio2f+0x10c>
  4024fa:	49a1      	ldr	r1, [pc, #644]	; (402780 <__ieee754_rem_pio2f+0x2b8>)
  4024fc:	f001 fad8 	bl	403ab0 <__aeabi_fsub>
  402500:	4601      	mov	r1, r0
  402502:	6028      	str	r0, [r5, #0]
  402504:	4630      	mov	r0, r6
  402506:	f001 fad3 	bl	403ab0 <__aeabi_fsub>
  40250a:	499d      	ldr	r1, [pc, #628]	; (402780 <__ieee754_rem_pio2f+0x2b8>)
  40250c:	f001 fad0 	bl	403ab0 <__aeabi_fsub>
  402510:	2701      	movs	r7, #1
  402512:	6068      	str	r0, [r5, #4]
  402514:	4638      	mov	r0, r7
  402516:	b009      	add	sp, #36	; 0x24
  402518:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40251c:	4a99      	ldr	r2, [pc, #612]	; (402784 <__ieee754_rem_pio2f+0x2bc>)
  40251e:	4294      	cmp	r4, r2
  402520:	dd6a      	ble.n	4025f8 <__ieee754_rem_pio2f+0x130>
  402522:	f1b4 4fff 	cmp.w	r4, #2139095040	; 0x7f800000
  402526:	da4e      	bge.n	4025c6 <__ieee754_rem_pio2f+0xfe>
  402528:	15e7      	asrs	r7, r4, #23
  40252a:	3f86      	subs	r7, #134	; 0x86
  40252c:	eba4 54c7 	sub.w	r4, r4, r7, lsl #23
  402530:	4620      	mov	r0, r4
  402532:	f001 fd8d 	bl	404050 <__aeabi_f2iz>
  402536:	f001 fb71 	bl	403c1c <__aeabi_i2f>
  40253a:	4603      	mov	r3, r0
  40253c:	4601      	mov	r1, r0
  40253e:	4620      	mov	r0, r4
  402540:	9305      	str	r3, [sp, #20]
  402542:	f001 fab5 	bl	403ab0 <__aeabi_fsub>
  402546:	f04f 4187 	mov.w	r1, #1132462080	; 0x43800000
  40254a:	f001 fbbb 	bl	403cc4 <__aeabi_fmul>
  40254e:	4680      	mov	r8, r0
  402550:	f001 fd7e 	bl	404050 <__aeabi_f2iz>
  402554:	f001 fb62 	bl	403c1c <__aeabi_i2f>
  402558:	4601      	mov	r1, r0
  40255a:	4604      	mov	r4, r0
  40255c:	4640      	mov	r0, r8
  40255e:	9406      	str	r4, [sp, #24]
  402560:	f001 faa6 	bl	403ab0 <__aeabi_fsub>
  402564:	f04f 4187 	mov.w	r1, #1132462080	; 0x43800000
  402568:	f001 fbac 	bl	403cc4 <__aeabi_fmul>
  40256c:	2100      	movs	r1, #0
  40256e:	9007      	str	r0, [sp, #28]
  402570:	f001 fd3c 	bl	403fec <__aeabi_fcmpeq>
  402574:	2800      	cmp	r0, #0
  402576:	f000 80cb 	beq.w	402710 <__ieee754_rem_pio2f+0x248>
  40257a:	4620      	mov	r0, r4
  40257c:	2100      	movs	r1, #0
  40257e:	f001 fd35 	bl	403fec <__aeabi_fcmpeq>
  402582:	2800      	cmp	r0, #0
  402584:	bf14      	ite	ne
  402586:	2301      	movne	r3, #1
  402588:	2302      	moveq	r3, #2
  40258a:	4a7f      	ldr	r2, [pc, #508]	; (402788 <__ieee754_rem_pio2f+0x2c0>)
  40258c:	9201      	str	r2, [sp, #4]
  40258e:	2102      	movs	r1, #2
  402590:	463a      	mov	r2, r7
  402592:	9100      	str	r1, [sp, #0]
  402594:	a805      	add	r0, sp, #20
  402596:	4629      	mov	r1, r5
  402598:	f000 f9c8 	bl	40292c <__kernel_rem_pio2f>
  40259c:	2e00      	cmp	r6, #0
  40259e:	4607      	mov	r7, r0
  4025a0:	da0d      	bge.n	4025be <__ieee754_rem_pio2f+0xf6>
  4025a2:	e895 000c 	ldmia.w	r5, {r2, r3}
  4025a6:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
  4025aa:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
  4025ae:	4247      	negs	r7, r0
  4025b0:	602a      	str	r2, [r5, #0]
  4025b2:	606b      	str	r3, [r5, #4]
  4025b4:	e003      	b.n	4025be <__ieee754_rem_pio2f+0xf6>
  4025b6:	2200      	movs	r2, #0
  4025b8:	6008      	str	r0, [r1, #0]
  4025ba:	604a      	str	r2, [r1, #4]
  4025bc:	2700      	movs	r7, #0
  4025be:	4638      	mov	r0, r7
  4025c0:	b009      	add	sp, #36	; 0x24
  4025c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4025c6:	4601      	mov	r1, r0
  4025c8:	f001 fa72 	bl	403ab0 <__aeabi_fsub>
  4025cc:	2700      	movs	r7, #0
  4025ce:	6068      	str	r0, [r5, #4]
  4025d0:	6028      	str	r0, [r5, #0]
  4025d2:	e7f4      	b.n	4025be <__ieee754_rem_pio2f+0xf6>
  4025d4:	496d      	ldr	r1, [pc, #436]	; (40278c <__ieee754_rem_pio2f+0x2c4>)
  4025d6:	f001 fa6b 	bl	403ab0 <__aeabi_fsub>
  4025da:	496d      	ldr	r1, [pc, #436]	; (402790 <__ieee754_rem_pio2f+0x2c8>)
  4025dc:	4604      	mov	r4, r0
  4025de:	f001 fa67 	bl	403ab0 <__aeabi_fsub>
  4025e2:	4601      	mov	r1, r0
  4025e4:	6028      	str	r0, [r5, #0]
  4025e6:	4620      	mov	r0, r4
  4025e8:	f001 fa62 	bl	403ab0 <__aeabi_fsub>
  4025ec:	4968      	ldr	r1, [pc, #416]	; (402790 <__ieee754_rem_pio2f+0x2c8>)
  4025ee:	f001 fa5f 	bl	403ab0 <__aeabi_fsub>
  4025f2:	2701      	movs	r7, #1
  4025f4:	6068      	str	r0, [r5, #4]
  4025f6:	e7e2      	b.n	4025be <__ieee754_rem_pio2f+0xf6>
  4025f8:	f000 fd94 	bl	403124 <fabsf>
  4025fc:	4965      	ldr	r1, [pc, #404]	; (402794 <__ieee754_rem_pio2f+0x2cc>)
  4025fe:	4680      	mov	r8, r0
  402600:	f001 fb60 	bl	403cc4 <__aeabi_fmul>
  402604:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
  402608:	f001 fa54 	bl	403ab4 <__addsf3>
  40260c:	f001 fd20 	bl	404050 <__aeabi_f2iz>
  402610:	4607      	mov	r7, r0
  402612:	f001 fb03 	bl	403c1c <__aeabi_i2f>
  402616:	4958      	ldr	r1, [pc, #352]	; (402778 <__ieee754_rem_pio2f+0x2b0>)
  402618:	4683      	mov	fp, r0
  40261a:	f001 fb53 	bl	403cc4 <__aeabi_fmul>
  40261e:	4601      	mov	r1, r0
  402620:	4640      	mov	r0, r8
  402622:	f001 fa45 	bl	403ab0 <__aeabi_fsub>
  402626:	4956      	ldr	r1, [pc, #344]	; (402780 <__ieee754_rem_pio2f+0x2b8>)
  402628:	4681      	mov	r9, r0
  40262a:	4658      	mov	r0, fp
  40262c:	f001 fb4a 	bl	403cc4 <__aeabi_fmul>
  402630:	2f1f      	cmp	r7, #31
  402632:	4682      	mov	sl, r0
  402634:	dc21      	bgt.n	40267a <__ieee754_rem_pio2f+0x1b2>
  402636:	4a58      	ldr	r2, [pc, #352]	; (402798 <__ieee754_rem_pio2f+0x2d0>)
  402638:	1e79      	subs	r1, r7, #1
  40263a:	f024 03ff 	bic.w	r3, r4, #255	; 0xff
  40263e:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
  402642:	4293      	cmp	r3, r2
  402644:	d019      	beq.n	40267a <__ieee754_rem_pio2f+0x1b2>
  402646:	4651      	mov	r1, sl
  402648:	4648      	mov	r0, r9
  40264a:	f001 fa31 	bl	403ab0 <__aeabi_fsub>
  40264e:	4680      	mov	r8, r0
  402650:	f8c5 8000 	str.w	r8, [r5]
  402654:	4641      	mov	r1, r8
  402656:	4648      	mov	r0, r9
  402658:	f001 fa2a 	bl	403ab0 <__aeabi_fsub>
  40265c:	4651      	mov	r1, sl
  40265e:	f001 fa27 	bl	403ab0 <__aeabi_fsub>
  402662:	2e00      	cmp	r6, #0
  402664:	6068      	str	r0, [r5, #4]
  402666:	daaa      	bge.n	4025be <__ieee754_rem_pio2f+0xf6>
  402668:	f108 4800 	add.w	r8, r8, #2147483648	; 0x80000000
  40266c:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
  402670:	f8c5 8000 	str.w	r8, [r5]
  402674:	6068      	str	r0, [r5, #4]
  402676:	427f      	negs	r7, r7
  402678:	e7a1      	b.n	4025be <__ieee754_rem_pio2f+0xf6>
  40267a:	4651      	mov	r1, sl
  40267c:	4648      	mov	r0, r9
  40267e:	f001 fa17 	bl	403ab0 <__aeabi_fsub>
  402682:	15e2      	asrs	r2, r4, #23
  402684:	f3c0 53c7 	ubfx	r3, r0, #23, #8
  402688:	1ad3      	subs	r3, r2, r3
  40268a:	2b08      	cmp	r3, #8
  40268c:	4680      	mov	r8, r0
  40268e:	dddf      	ble.n	402650 <__ieee754_rem_pio2f+0x188>
  402690:	493e      	ldr	r1, [pc, #248]	; (40278c <__ieee754_rem_pio2f+0x2c4>)
  402692:	9203      	str	r2, [sp, #12]
  402694:	4658      	mov	r0, fp
  402696:	f001 fb15 	bl	403cc4 <__aeabi_fmul>
  40269a:	4680      	mov	r8, r0
  40269c:	4601      	mov	r1, r0
  40269e:	4648      	mov	r0, r9
  4026a0:	f001 fa06 	bl	403ab0 <__aeabi_fsub>
  4026a4:	4601      	mov	r1, r0
  4026a6:	4604      	mov	r4, r0
  4026a8:	4648      	mov	r0, r9
  4026aa:	f001 fa01 	bl	403ab0 <__aeabi_fsub>
  4026ae:	4641      	mov	r1, r8
  4026b0:	f001 f9fe 	bl	403ab0 <__aeabi_fsub>
  4026b4:	4936      	ldr	r1, [pc, #216]	; (402790 <__ieee754_rem_pio2f+0x2c8>)
  4026b6:	4680      	mov	r8, r0
  4026b8:	4658      	mov	r0, fp
  4026ba:	f001 fb03 	bl	403cc4 <__aeabi_fmul>
  4026be:	4641      	mov	r1, r8
  4026c0:	f001 f9f6 	bl	403ab0 <__aeabi_fsub>
  4026c4:	4601      	mov	r1, r0
  4026c6:	4682      	mov	sl, r0
  4026c8:	4620      	mov	r0, r4
  4026ca:	f001 f9f1 	bl	403ab0 <__aeabi_fsub>
  4026ce:	9a03      	ldr	r2, [sp, #12]
  4026d0:	f3c0 53c7 	ubfx	r3, r0, #23, #8
  4026d4:	1ad2      	subs	r2, r2, r3
  4026d6:	2a19      	cmp	r2, #25
  4026d8:	4680      	mov	r8, r0
  4026da:	dc2e      	bgt.n	40273a <__ieee754_rem_pio2f+0x272>
  4026dc:	6028      	str	r0, [r5, #0]
  4026de:	46a1      	mov	r9, r4
  4026e0:	e7b8      	b.n	402654 <__ieee754_rem_pio2f+0x18c>
  4026e2:	f001 f9e7 	bl	403ab4 <__addsf3>
  4026e6:	4b25      	ldr	r3, [pc, #148]	; (40277c <__ieee754_rem_pio2f+0x2b4>)
  4026e8:	f024 040f 	bic.w	r4, r4, #15
  4026ec:	429c      	cmp	r4, r3
  4026ee:	4606      	mov	r6, r0
  4026f0:	d010      	beq.n	402714 <__ieee754_rem_pio2f+0x24c>
  4026f2:	4923      	ldr	r1, [pc, #140]	; (402780 <__ieee754_rem_pio2f+0x2b8>)
  4026f4:	f001 f9de 	bl	403ab4 <__addsf3>
  4026f8:	4601      	mov	r1, r0
  4026fa:	6028      	str	r0, [r5, #0]
  4026fc:	4630      	mov	r0, r6
  4026fe:	f001 f9d7 	bl	403ab0 <__aeabi_fsub>
  402702:	491f      	ldr	r1, [pc, #124]	; (402780 <__ieee754_rem_pio2f+0x2b8>)
  402704:	f001 f9d6 	bl	403ab4 <__addsf3>
  402708:	f04f 37ff 	mov.w	r7, #4294967295
  40270c:	6068      	str	r0, [r5, #4]
  40270e:	e756      	b.n	4025be <__ieee754_rem_pio2f+0xf6>
  402710:	2303      	movs	r3, #3
  402712:	e73a      	b.n	40258a <__ieee754_rem_pio2f+0xc2>
  402714:	491d      	ldr	r1, [pc, #116]	; (40278c <__ieee754_rem_pio2f+0x2c4>)
  402716:	f001 f9cd 	bl	403ab4 <__addsf3>
  40271a:	491d      	ldr	r1, [pc, #116]	; (402790 <__ieee754_rem_pio2f+0x2c8>)
  40271c:	4604      	mov	r4, r0
  40271e:	f001 f9c9 	bl	403ab4 <__addsf3>
  402722:	4601      	mov	r1, r0
  402724:	6028      	str	r0, [r5, #0]
  402726:	4620      	mov	r0, r4
  402728:	f001 f9c2 	bl	403ab0 <__aeabi_fsub>
  40272c:	4918      	ldr	r1, [pc, #96]	; (402790 <__ieee754_rem_pio2f+0x2c8>)
  40272e:	f001 f9c1 	bl	403ab4 <__addsf3>
  402732:	f04f 37ff 	mov.w	r7, #4294967295
  402736:	6068      	str	r0, [r5, #4]
  402738:	e741      	b.n	4025be <__ieee754_rem_pio2f+0xf6>
  40273a:	4918      	ldr	r1, [pc, #96]	; (40279c <__ieee754_rem_pio2f+0x2d4>)
  40273c:	4658      	mov	r0, fp
  40273e:	f001 fac1 	bl	403cc4 <__aeabi_fmul>
  402742:	4601      	mov	r1, r0
  402744:	4680      	mov	r8, r0
  402746:	4620      	mov	r0, r4
  402748:	f001 f9b2 	bl	403ab0 <__aeabi_fsub>
  40274c:	4601      	mov	r1, r0
  40274e:	4681      	mov	r9, r0
  402750:	4620      	mov	r0, r4
  402752:	f001 f9ad 	bl	403ab0 <__aeabi_fsub>
  402756:	4641      	mov	r1, r8
  402758:	f001 f9aa 	bl	403ab0 <__aeabi_fsub>
  40275c:	4910      	ldr	r1, [pc, #64]	; (4027a0 <__ieee754_rem_pio2f+0x2d8>)
  40275e:	4604      	mov	r4, r0
  402760:	4658      	mov	r0, fp
  402762:	f001 faaf 	bl	403cc4 <__aeabi_fmul>
  402766:	4621      	mov	r1, r4
  402768:	f001 f9a2 	bl	403ab0 <__aeabi_fsub>
  40276c:	4682      	mov	sl, r0
  40276e:	e76a      	b.n	402646 <__ieee754_rem_pio2f+0x17e>
  402770:	3f490fd8 	.word	0x3f490fd8
  402774:	4016cbe3 	.word	0x4016cbe3
  402778:	3fc90f80 	.word	0x3fc90f80
  40277c:	3fc90fd0 	.word	0x3fc90fd0
  402780:	37354443 	.word	0x37354443
  402784:	43490f80 	.word	0x43490f80
  402788:	00408a28 	.word	0x00408a28
  40278c:	37354400 	.word	0x37354400
  402790:	2e85a308 	.word	0x2e85a308
  402794:	3f22f984 	.word	0x3f22f984
  402798:	004089a8 	.word	0x004089a8
  40279c:	2e85a300 	.word	0x2e85a300
  4027a0:	248d3132 	.word	0x248d3132

004027a4 <__kernel_cosf>:
  4027a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4027a8:	f020 4400 	bic.w	r4, r0, #2147483648	; 0x80000000
  4027ac:	f1b4 5f48 	cmp.w	r4, #838860800	; 0x32000000
  4027b0:	4606      	mov	r6, r0
  4027b2:	460f      	mov	r7, r1
  4027b4:	da49      	bge.n	40284a <__kernel_cosf+0xa6>
  4027b6:	f001 fc4b 	bl	404050 <__aeabi_f2iz>
  4027ba:	2800      	cmp	r0, #0
  4027bc:	f000 809d 	beq.w	4028fa <__kernel_cosf+0x156>
  4027c0:	4631      	mov	r1, r6
  4027c2:	4630      	mov	r0, r6
  4027c4:	f001 fa7e 	bl	403cc4 <__aeabi_fmul>
  4027c8:	494e      	ldr	r1, [pc, #312]	; (402904 <__kernel_cosf+0x160>)
  4027ca:	4605      	mov	r5, r0
  4027cc:	f001 fa7a 	bl	403cc4 <__aeabi_fmul>
  4027d0:	494d      	ldr	r1, [pc, #308]	; (402908 <__kernel_cosf+0x164>)
  4027d2:	f001 f96f 	bl	403ab4 <__addsf3>
  4027d6:	4629      	mov	r1, r5
  4027d8:	f001 fa74 	bl	403cc4 <__aeabi_fmul>
  4027dc:	494b      	ldr	r1, [pc, #300]	; (40290c <__kernel_cosf+0x168>)
  4027de:	f001 f967 	bl	403ab0 <__aeabi_fsub>
  4027e2:	4629      	mov	r1, r5
  4027e4:	f001 fa6e 	bl	403cc4 <__aeabi_fmul>
  4027e8:	4949      	ldr	r1, [pc, #292]	; (402910 <__kernel_cosf+0x16c>)
  4027ea:	f001 f963 	bl	403ab4 <__addsf3>
  4027ee:	4629      	mov	r1, r5
  4027f0:	f001 fa68 	bl	403cc4 <__aeabi_fmul>
  4027f4:	4947      	ldr	r1, [pc, #284]	; (402914 <__kernel_cosf+0x170>)
  4027f6:	f001 f95b 	bl	403ab0 <__aeabi_fsub>
  4027fa:	4629      	mov	r1, r5
  4027fc:	f001 fa62 	bl	403cc4 <__aeabi_fmul>
  402800:	4945      	ldr	r1, [pc, #276]	; (402918 <__kernel_cosf+0x174>)
  402802:	f001 f957 	bl	403ab4 <__addsf3>
  402806:	4629      	mov	r1, r5
  402808:	f001 fa5c 	bl	403cc4 <__aeabi_fmul>
  40280c:	4680      	mov	r8, r0
  40280e:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
  402812:	4628      	mov	r0, r5
  402814:	f001 fa56 	bl	403cc4 <__aeabi_fmul>
  402818:	4641      	mov	r1, r8
  40281a:	4604      	mov	r4, r0
  40281c:	4628      	mov	r0, r5
  40281e:	f001 fa51 	bl	403cc4 <__aeabi_fmul>
  402822:	4639      	mov	r1, r7
  402824:	4605      	mov	r5, r0
  402826:	4630      	mov	r0, r6
  402828:	f001 fa4c 	bl	403cc4 <__aeabi_fmul>
  40282c:	4601      	mov	r1, r0
  40282e:	4628      	mov	r0, r5
  402830:	f001 f93e 	bl	403ab0 <__aeabi_fsub>
  402834:	4601      	mov	r1, r0
  402836:	4620      	mov	r0, r4
  402838:	f001 f93a 	bl	403ab0 <__aeabi_fsub>
  40283c:	4601      	mov	r1, r0
  40283e:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
  402842:	f001 f935 	bl	403ab0 <__aeabi_fsub>
  402846:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40284a:	4601      	mov	r1, r0
  40284c:	f001 fa3a 	bl	403cc4 <__aeabi_fmul>
  402850:	492c      	ldr	r1, [pc, #176]	; (402904 <__kernel_cosf+0x160>)
  402852:	4605      	mov	r5, r0
  402854:	f001 fa36 	bl	403cc4 <__aeabi_fmul>
  402858:	492b      	ldr	r1, [pc, #172]	; (402908 <__kernel_cosf+0x164>)
  40285a:	f001 f92b 	bl	403ab4 <__addsf3>
  40285e:	4629      	mov	r1, r5
  402860:	f001 fa30 	bl	403cc4 <__aeabi_fmul>
  402864:	4929      	ldr	r1, [pc, #164]	; (40290c <__kernel_cosf+0x168>)
  402866:	f001 f923 	bl	403ab0 <__aeabi_fsub>
  40286a:	4629      	mov	r1, r5
  40286c:	f001 fa2a 	bl	403cc4 <__aeabi_fmul>
  402870:	4927      	ldr	r1, [pc, #156]	; (402910 <__kernel_cosf+0x16c>)
  402872:	f001 f91f 	bl	403ab4 <__addsf3>
  402876:	4629      	mov	r1, r5
  402878:	f001 fa24 	bl	403cc4 <__aeabi_fmul>
  40287c:	4925      	ldr	r1, [pc, #148]	; (402914 <__kernel_cosf+0x170>)
  40287e:	f001 f917 	bl	403ab0 <__aeabi_fsub>
  402882:	4629      	mov	r1, r5
  402884:	f001 fa1e 	bl	403cc4 <__aeabi_fmul>
  402888:	4923      	ldr	r1, [pc, #140]	; (402918 <__kernel_cosf+0x174>)
  40288a:	f001 f913 	bl	403ab4 <__addsf3>
  40288e:	4629      	mov	r1, r5
  402890:	f001 fa18 	bl	403cc4 <__aeabi_fmul>
  402894:	4b21      	ldr	r3, [pc, #132]	; (40291c <__kernel_cosf+0x178>)
  402896:	429c      	cmp	r4, r3
  402898:	4680      	mov	r8, r0
  40289a:	ddb8      	ble.n	40280e <__kernel_cosf+0x6a>
  40289c:	4b20      	ldr	r3, [pc, #128]	; (402920 <__kernel_cosf+0x17c>)
  40289e:	429c      	cmp	r4, r3
  4028a0:	dc27      	bgt.n	4028f2 <__kernel_cosf+0x14e>
  4028a2:	f104 447f 	add.w	r4, r4, #4278190080	; 0xff000000
  4028a6:	4621      	mov	r1, r4
  4028a8:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
  4028ac:	f001 f900 	bl	403ab0 <__aeabi_fsub>
  4028b0:	4681      	mov	r9, r0
  4028b2:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
  4028b6:	4628      	mov	r0, r5
  4028b8:	f001 fa04 	bl	403cc4 <__aeabi_fmul>
  4028bc:	4621      	mov	r1, r4
  4028be:	f001 f8f7 	bl	403ab0 <__aeabi_fsub>
  4028c2:	4641      	mov	r1, r8
  4028c4:	4604      	mov	r4, r0
  4028c6:	4628      	mov	r0, r5
  4028c8:	f001 f9fc 	bl	403cc4 <__aeabi_fmul>
  4028cc:	4639      	mov	r1, r7
  4028ce:	4605      	mov	r5, r0
  4028d0:	4630      	mov	r0, r6
  4028d2:	f001 f9f7 	bl	403cc4 <__aeabi_fmul>
  4028d6:	4601      	mov	r1, r0
  4028d8:	4628      	mov	r0, r5
  4028da:	f001 f8e9 	bl	403ab0 <__aeabi_fsub>
  4028de:	4601      	mov	r1, r0
  4028e0:	4620      	mov	r0, r4
  4028e2:	f001 f8e5 	bl	403ab0 <__aeabi_fsub>
  4028e6:	4601      	mov	r1, r0
  4028e8:	4648      	mov	r0, r9
  4028ea:	f001 f8e1 	bl	403ab0 <__aeabi_fsub>
  4028ee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4028f2:	f8df 9034 	ldr.w	r9, [pc, #52]	; 402928 <__kernel_cosf+0x184>
  4028f6:	4c0b      	ldr	r4, [pc, #44]	; (402924 <__kernel_cosf+0x180>)
  4028f8:	e7db      	b.n	4028b2 <__kernel_cosf+0x10e>
  4028fa:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
  4028fe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  402902:	bf00      	nop
  402904:	ad47d74e 	.word	0xad47d74e
  402908:	310f74f6 	.word	0x310f74f6
  40290c:	3493f27c 	.word	0x3493f27c
  402910:	37d00d01 	.word	0x37d00d01
  402914:	3ab60b61 	.word	0x3ab60b61
  402918:	3d2aaaab 	.word	0x3d2aaaab
  40291c:	3e999999 	.word	0x3e999999
  402920:	3f480000 	.word	0x3f480000
  402924:	3e900000 	.word	0x3e900000
  402928:	3f380000 	.word	0x3f380000

0040292c <__kernel_rem_pio2f>:
  40292c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402930:	b0dd      	sub	sp, #372	; 0x174
  402932:	4c90      	ldr	r4, [pc, #576]	; (402b74 <__kernel_rem_pio2f+0x248>)
  402934:	9308      	str	r3, [sp, #32]
  402936:	3b01      	subs	r3, #1
  402938:	9301      	str	r3, [sp, #4]
  40293a:	1ed3      	subs	r3, r2, #3
  40293c:	bf48      	it	mi
  40293e:	1d13      	addmi	r3, r2, #4
  402940:	9d66      	ldr	r5, [sp, #408]	; 0x198
  402942:	9107      	str	r1, [sp, #28]
  402944:	10db      	asrs	r3, r3, #3
  402946:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40294a:	f854 4025 	ldr.w	r4, [r4, r5, lsl #2]
  40294e:	9309      	str	r3, [sp, #36]	; 0x24
  402950:	4619      	mov	r1, r3
  402952:	3301      	adds	r3, #1
  402954:	eba2 03c3 	sub.w	r3, r2, r3, lsl #3
  402958:	9405      	str	r4, [sp, #20]
  40295a:	9a01      	ldr	r2, [sp, #4]
  40295c:	9304      	str	r3, [sp, #16]
  40295e:	9b05      	ldr	r3, [sp, #20]
  402960:	9002      	str	r0, [sp, #8]
  402962:	189c      	adds	r4, r3, r2
  402964:	eba1 0602 	sub.w	r6, r1, r2
  402968:	d417      	bmi.n	40299a <__kernel_rem_pio2f+0x6e>
  40296a:	4434      	add	r4, r6
  40296c:	2500      	movs	r5, #0
  40296e:	3401      	adds	r4, #1
  402970:	af1f      	add	r7, sp, #124	; 0x7c
  402972:	f8dd 819c 	ldr.w	r8, [sp, #412]	; 0x19c
  402976:	e008      	b.n	40298a <__kernel_rem_pio2f+0x5e>
  402978:	f858 0026 	ldr.w	r0, [r8, r6, lsl #2]
  40297c:	f001 f94e 	bl	403c1c <__aeabi_i2f>
  402980:	3601      	adds	r6, #1
  402982:	42a6      	cmp	r6, r4
  402984:	f847 0f04 	str.w	r0, [r7, #4]!
  402988:	d007      	beq.n	40299a <__kernel_rem_pio2f+0x6e>
  40298a:	2e00      	cmp	r6, #0
  40298c:	daf4      	bge.n	402978 <__kernel_rem_pio2f+0x4c>
  40298e:	3601      	adds	r6, #1
  402990:	4628      	mov	r0, r5
  402992:	42a6      	cmp	r6, r4
  402994:	f847 0f04 	str.w	r0, [r7, #4]!
  402998:	d1f7      	bne.n	40298a <__kernel_rem_pio2f+0x5e>
  40299a:	9b05      	ldr	r3, [sp, #20]
  40299c:	2b00      	cmp	r3, #0
  40299e:	db28      	blt.n	4029f2 <__kernel_rem_pio2f+0xc6>
  4029a0:	9b08      	ldr	r3, [sp, #32]
  4029a2:	009e      	lsls	r6, r3, #2
  4029a4:	9b02      	ldr	r3, [sp, #8]
  4029a6:	1f35      	subs	r5, r6, #4
  4029a8:	441d      	add	r5, r3
  4029aa:	ab20      	add	r3, sp, #128	; 0x80
  4029ac:	441e      	add	r6, r3
  4029ae:	9b05      	ldr	r3, [sp, #20]
  4029b0:	aa48      	add	r2, sp, #288	; 0x120
  4029b2:	f04f 0900 	mov.w	r9, #0
  4029b6:	eb02 0883 	add.w	r8, r2, r3, lsl #2
  4029ba:	af47      	add	r7, sp, #284	; 0x11c
  4029bc:	9b01      	ldr	r3, [sp, #4]
  4029be:	2b00      	cmp	r3, #0
  4029c0:	f2c0 82b9 	blt.w	402f36 <__kernel_rem_pio2f+0x60a>
  4029c4:	9b02      	ldr	r3, [sp, #8]
  4029c6:	46b3      	mov	fp, r6
  4029c8:	1f1c      	subs	r4, r3, #4
  4029ca:	46ca      	mov	sl, r9
  4029cc:	f85b 1d04 	ldr.w	r1, [fp, #-4]!
  4029d0:	f854 0f04 	ldr.w	r0, [r4, #4]!
  4029d4:	f001 f976 	bl	403cc4 <__aeabi_fmul>
  4029d8:	4601      	mov	r1, r0
  4029da:	4650      	mov	r0, sl
  4029dc:	f001 f86a 	bl	403ab4 <__addsf3>
  4029e0:	42ac      	cmp	r4, r5
  4029e2:	4682      	mov	sl, r0
  4029e4:	d1f2      	bne.n	4029cc <__kernel_rem_pio2f+0xa0>
  4029e6:	f847 af04 	str.w	sl, [r7, #4]!
  4029ea:	4547      	cmp	r7, r8
  4029ec:	f106 0604 	add.w	r6, r6, #4
  4029f0:	d1e4      	bne.n	4029bc <__kernel_rem_pio2f+0x90>
  4029f2:	9805      	ldr	r0, [sp, #20]
  4029f4:	9908      	ldr	r1, [sp, #32]
  4029f6:	9c02      	ldr	r4, [sp, #8]
  4029f8:	f06f 4240 	mvn.w	r2, #3221225472	; 0xc0000000
  4029fc:	4603      	mov	r3, r0
  4029fe:	4413      	add	r3, r2
  402a00:	009b      	lsls	r3, r3, #2
  402a02:	440a      	add	r2, r1
  402a04:	f10d 0a30 	add.w	sl, sp, #48	; 0x30
  402a08:	1f19      	subs	r1, r3, #4
  402a0a:	eb04 0582 	add.w	r5, r4, r2, lsl #2
  402a0e:	4453      	add	r3, sl
  402a10:	eb0a 0201 	add.w	r2, sl, r1
  402a14:	920a      	str	r2, [sp, #40]	; 0x28
  402a16:	930b      	str	r3, [sp, #44]	; 0x2c
  402a18:	4680      	mov	r8, r0
  402a1a:	ea4f 0388 	mov.w	r3, r8, lsl #2
  402a1e:	aa5c      	add	r2, sp, #368	; 0x170
  402a20:	9303      	str	r3, [sp, #12]
  402a22:	18d3      	adds	r3, r2, r3
  402a24:	f1b8 0f00 	cmp.w	r8, #0
  402a28:	f853 9c50 	ldr.w	r9, [r3, #-80]
  402a2c:	dd22      	ble.n	402a74 <__kernel_rem_pio2f+0x148>
  402a2e:	eb02 0488 	add.w	r4, r2, r8, lsl #2
  402a32:	3c54      	subs	r4, #84	; 0x54
  402a34:	ae0b      	add	r6, sp, #44	; 0x2c
  402a36:	af47      	add	r7, sp, #284	; 0x11c
  402a38:	f04f 516e 	mov.w	r1, #998244352	; 0x3b800000
  402a3c:	4648      	mov	r0, r9
  402a3e:	f001 f941 	bl	403cc4 <__aeabi_fmul>
  402a42:	f001 fb05 	bl	404050 <__aeabi_f2iz>
  402a46:	f001 f8e9 	bl	403c1c <__aeabi_i2f>
  402a4a:	f04f 4187 	mov.w	r1, #1132462080	; 0x43800000
  402a4e:	4683      	mov	fp, r0
  402a50:	f001 f938 	bl	403cc4 <__aeabi_fmul>
  402a54:	4601      	mov	r1, r0
  402a56:	4648      	mov	r0, r9
  402a58:	f001 f82a 	bl	403ab0 <__aeabi_fsub>
  402a5c:	f001 faf8 	bl	404050 <__aeabi_f2iz>
  402a60:	f854 1904 	ldr.w	r1, [r4], #-4
  402a64:	f846 0f04 	str.w	r0, [r6, #4]!
  402a68:	4658      	mov	r0, fp
  402a6a:	f001 f823 	bl	403ab4 <__addsf3>
  402a6e:	42bc      	cmp	r4, r7
  402a70:	4681      	mov	r9, r0
  402a72:	d1e1      	bne.n	402a38 <__kernel_rem_pio2f+0x10c>
  402a74:	9e04      	ldr	r6, [sp, #16]
  402a76:	4648      	mov	r0, r9
  402a78:	4631      	mov	r1, r6
  402a7a:	f000 fb9d 	bl	4031b8 <scalbnf>
  402a7e:	f04f 5178 	mov.w	r1, #1040187392	; 0x3e000000
  402a82:	4604      	mov	r4, r0
  402a84:	f001 f91e 	bl	403cc4 <__aeabi_fmul>
  402a88:	f000 fb50 	bl	40312c <floorf>
  402a8c:	f04f 4182 	mov.w	r1, #1090519040	; 0x41000000
  402a90:	f001 f918 	bl	403cc4 <__aeabi_fmul>
  402a94:	4601      	mov	r1, r0
  402a96:	4620      	mov	r0, r4
  402a98:	f001 f80a 	bl	403ab0 <__aeabi_fsub>
  402a9c:	4604      	mov	r4, r0
  402a9e:	f001 fad7 	bl	404050 <__aeabi_f2iz>
  402aa2:	4681      	mov	r9, r0
  402aa4:	9006      	str	r0, [sp, #24]
  402aa6:	f001 f8b9 	bl	403c1c <__aeabi_i2f>
  402aaa:	4601      	mov	r1, r0
  402aac:	4620      	mov	r0, r4
  402aae:	f000 ffff 	bl	403ab0 <__aeabi_fsub>
  402ab2:	2e00      	cmp	r6, #0
  402ab4:	4607      	mov	r7, r0
  402ab6:	f340 80e6 	ble.w	402c86 <__kernel_rem_pio2f+0x35a>
  402aba:	f108 31ff 	add.w	r1, r8, #4294967295
  402abe:	f1c6 0308 	rsb	r3, r6, #8
  402ac2:	f85a 2021 	ldr.w	r2, [sl, r1, lsl #2]
  402ac6:	fa42 f003 	asr.w	r0, r2, r3
  402aca:	fa00 f303 	lsl.w	r3, r0, r3
  402ace:	1ad3      	subs	r3, r2, r3
  402ad0:	464a      	mov	r2, r9
  402ad2:	f1c6 0407 	rsb	r4, r6, #7
  402ad6:	4402      	add	r2, r0
  402ad8:	f84a 3021 	str.w	r3, [sl, r1, lsl #2]
  402adc:	9206      	str	r2, [sp, #24]
  402ade:	fa43 f404 	asr.w	r4, r3, r4
  402ae2:	2c00      	cmp	r4, #0
  402ae4:	dd5b      	ble.n	402b9e <__kernel_rem_pio2f+0x272>
  402ae6:	9b06      	ldr	r3, [sp, #24]
  402ae8:	f1b8 0f00 	cmp.w	r8, #0
  402aec:	f103 0301 	add.w	r3, r3, #1
  402af0:	9306      	str	r3, [sp, #24]
  402af2:	f340 823b 	ble.w	402f6c <__kernel_rem_pio2f+0x640>
  402af6:	f8da 6000 	ldr.w	r6, [sl]
  402afa:	2e00      	cmp	r6, #0
  402afc:	f040 8294 	bne.w	403028 <__kernel_rem_pio2f+0x6fc>
  402b00:	f1b8 0f01 	cmp.w	r8, #1
  402b04:	f340 8255 	ble.w	402fb2 <__kernel_rem_pio2f+0x686>
  402b08:	4652      	mov	r2, sl
  402b0a:	2301      	movs	r3, #1
  402b0c:	f852 6f04 	ldr.w	r6, [r2, #4]!
  402b10:	2e00      	cmp	r6, #0
  402b12:	f000 824a 	beq.w	402faa <__kernel_rem_pio2f+0x67e>
  402b16:	1c59      	adds	r1, r3, #1
  402b18:	f5c6 7680 	rsb	r6, r6, #256	; 0x100
  402b1c:	4588      	cmp	r8, r1
  402b1e:	f84a 6023 	str.w	r6, [sl, r3, lsl #2]
  402b22:	dd14      	ble.n	402b4e <__kernel_rem_pio2f+0x222>
  402b24:	f85a 2021 	ldr.w	r2, [sl, r1, lsl #2]
  402b28:	3302      	adds	r3, #2
  402b2a:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
  402b2e:	4598      	cmp	r8, r3
  402b30:	f84a 2021 	str.w	r2, [sl, r1, lsl #2]
  402b34:	dd0b      	ble.n	402b4e <__kernel_rem_pio2f+0x222>
  402b36:	9a03      	ldr	r2, [sp, #12]
  402b38:	4452      	add	r2, sl
  402b3a:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
  402b3e:	4691      	mov	r9, r2
  402b40:	681a      	ldr	r2, [r3, #0]
  402b42:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
  402b46:	f843 2b04 	str.w	r2, [r3], #4
  402b4a:	454b      	cmp	r3, r9
  402b4c:	d1f8      	bne.n	402b40 <__kernel_rem_pio2f+0x214>
  402b4e:	9b04      	ldr	r3, [sp, #16]
  402b50:	2b00      	cmp	r3, #0
  402b52:	dd11      	ble.n	402b78 <__kernel_rem_pio2f+0x24c>
  402b54:	9b04      	ldr	r3, [sp, #16]
  402b56:	2b01      	cmp	r3, #1
  402b58:	f04f 0601 	mov.w	r6, #1
  402b5c:	f040 820e 	bne.w	402f7c <__kernel_rem_pio2f+0x650>
  402b60:	f108 32ff 	add.w	r2, r8, #4294967295
  402b64:	f85a 3022 	ldr.w	r3, [sl, r2, lsl #2]
  402b68:	f003 037f 	and.w	r3, r3, #127	; 0x7f
  402b6c:	f84a 3022 	str.w	r3, [sl, r2, lsl #2]
  402b70:	e20e      	b.n	402f90 <__kernel_rem_pio2f+0x664>
  402b72:	bf00      	nop
  402b74:	00408d6c 	.word	0x00408d6c
  402b78:	2c02      	cmp	r4, #2
  402b7a:	d110      	bne.n	402b9e <__kernel_rem_pio2f+0x272>
  402b7c:	4639      	mov	r1, r7
  402b7e:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
  402b82:	f000 ff95 	bl	403ab0 <__aeabi_fsub>
  402b86:	4607      	mov	r7, r0
  402b88:	9904      	ldr	r1, [sp, #16]
  402b8a:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
  402b8e:	f000 fb13 	bl	4031b8 <scalbnf>
  402b92:	4601      	mov	r1, r0
  402b94:	4638      	mov	r0, r7
  402b96:	f000 ff8b 	bl	403ab0 <__aeabi_fsub>
  402b9a:	2402      	movs	r4, #2
  402b9c:	4607      	mov	r7, r0
  402b9e:	2100      	movs	r1, #0
  402ba0:	4638      	mov	r0, r7
  402ba2:	f001 fa23 	bl	403fec <__aeabi_fcmpeq>
  402ba6:	2800      	cmp	r0, #0
  402ba8:	f000 8083 	beq.w	402cb2 <__kernel_rem_pio2f+0x386>
  402bac:	9b05      	ldr	r3, [sp, #20]
  402bae:	f108 37ff 	add.w	r7, r8, #4294967295
  402bb2:	42bb      	cmp	r3, r7
  402bb4:	dc0f      	bgt.n	402bd6 <__kernel_rem_pio2f+0x2aa>
  402bb6:	f108 4380 	add.w	r3, r8, #1073741824	; 0x40000000
  402bba:	3b01      	subs	r3, #1
  402bbc:	980b      	ldr	r0, [sp, #44]	; 0x2c
  402bbe:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
  402bc2:	2200      	movs	r2, #0
  402bc4:	f853 1904 	ldr.w	r1, [r3], #-4
  402bc8:	4283      	cmp	r3, r0
  402bca:	ea42 0201 	orr.w	r2, r2, r1
  402bce:	d1f9      	bne.n	402bc4 <__kernel_rem_pio2f+0x298>
  402bd0:	2a00      	cmp	r2, #0
  402bd2:	f040 809d 	bne.w	402d10 <__kernel_rem_pio2f+0x3e4>
  402bd6:	9b05      	ldr	r3, [sp, #20]
  402bd8:	3b01      	subs	r3, #1
  402bda:	f85a 3023 	ldr.w	r3, [sl, r3, lsl #2]
  402bde:	2b00      	cmp	r3, #0
  402be0:	f040 81f4 	bne.w	402fcc <__kernel_rem_pio2f+0x6a0>
  402be4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402be6:	2301      	movs	r3, #1
  402be8:	f852 1904 	ldr.w	r1, [r2], #-4
  402bec:	3301      	adds	r3, #1
  402bee:	2900      	cmp	r1, #0
  402bf0:	d0fa      	beq.n	402be8 <__kernel_rem_pio2f+0x2bc>
  402bf2:	4443      	add	r3, r8
  402bf4:	461a      	mov	r2, r3
  402bf6:	9306      	str	r3, [sp, #24]
  402bf8:	f108 0301 	add.w	r3, r8, #1
  402bfc:	4293      	cmp	r3, r2
  402bfe:	dc37      	bgt.n	402c70 <__kernel_rem_pio2f+0x344>
  402c00:	9908      	ldr	r1, [sp, #32]
  402c02:	9a09      	ldr	r2, [sp, #36]	; 0x24
  402c04:	eb01 0708 	add.w	r7, r1, r8
  402c08:	a920      	add	r1, sp, #128	; 0x80
  402c0a:	eb01 0787 	add.w	r7, r1, r7, lsl #2
  402c0e:	9906      	ldr	r1, [sp, #24]
  402c10:	189e      	adds	r6, r3, r2
  402c12:	eb01 0902 	add.w	r9, r1, r2
  402c16:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
  402c1a:	9a67      	ldr	r2, [sp, #412]	; 0x19c
  402c1c:	3e01      	subs	r6, #1
  402c1e:	eb02 0686 	add.w	r6, r2, r6, lsl #2
  402c22:	aa48      	add	r2, sp, #288	; 0x120
  402c24:	eb02 0883 	add.w	r8, r2, r3, lsl #2
  402c28:	9b67      	ldr	r3, [sp, #412]	; 0x19c
  402c2a:	eb03 0389 	add.w	r3, r3, r9, lsl #2
  402c2e:	9303      	str	r3, [sp, #12]
  402c30:	f856 0f04 	ldr.w	r0, [r6, #4]!
  402c34:	f000 fff2 	bl	403c1c <__aeabi_i2f>
  402c38:	9b01      	ldr	r3, [sp, #4]
  402c3a:	f847 0b04 	str.w	r0, [r7], #4
  402c3e:	2b00      	cmp	r3, #0
  402c40:	db19      	blt.n	402c76 <__kernel_rem_pio2f+0x34a>
  402c42:	9b02      	ldr	r3, [sp, #8]
  402c44:	46bb      	mov	fp, r7
  402c46:	1f1c      	subs	r4, r3, #4
  402c48:	f04f 0900 	mov.w	r9, #0
  402c4c:	f85b 1d04 	ldr.w	r1, [fp, #-4]!
  402c50:	f854 0f04 	ldr.w	r0, [r4, #4]!
  402c54:	f001 f836 	bl	403cc4 <__aeabi_fmul>
  402c58:	4601      	mov	r1, r0
  402c5a:	4648      	mov	r0, r9
  402c5c:	f000 ff2a 	bl	403ab4 <__addsf3>
  402c60:	42ac      	cmp	r4, r5
  402c62:	4681      	mov	r9, r0
  402c64:	d1f2      	bne.n	402c4c <__kernel_rem_pio2f+0x320>
  402c66:	9b03      	ldr	r3, [sp, #12]
  402c68:	f848 9b04 	str.w	r9, [r8], #4
  402c6c:	429e      	cmp	r6, r3
  402c6e:	d1df      	bne.n	402c30 <__kernel_rem_pio2f+0x304>
  402c70:	f8dd 8018 	ldr.w	r8, [sp, #24]
  402c74:	e6d1      	b.n	402a1a <__kernel_rem_pio2f+0xee>
  402c76:	9b03      	ldr	r3, [sp, #12]
  402c78:	f04f 0900 	mov.w	r9, #0
  402c7c:	429e      	cmp	r6, r3
  402c7e:	f848 9b04 	str.w	r9, [r8], #4
  402c82:	d1d5      	bne.n	402c30 <__kernel_rem_pio2f+0x304>
  402c84:	e7f4      	b.n	402c70 <__kernel_rem_pio2f+0x344>
  402c86:	d105      	bne.n	402c94 <__kernel_rem_pio2f+0x368>
  402c88:	f108 33ff 	add.w	r3, r8, #4294967295
  402c8c:	f85a 4023 	ldr.w	r4, [sl, r3, lsl #2]
  402c90:	1224      	asrs	r4, r4, #8
  402c92:	e726      	b.n	402ae2 <__kernel_rem_pio2f+0x1b6>
  402c94:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
  402c98:	f001 f9c6 	bl	404028 <__aeabi_fcmpge>
  402c9c:	2800      	cmp	r0, #0
  402c9e:	f040 8153 	bne.w	402f48 <__kernel_rem_pio2f+0x61c>
  402ca2:	4604      	mov	r4, r0
  402ca4:	2100      	movs	r1, #0
  402ca6:	4638      	mov	r0, r7
  402ca8:	f001 f9a0 	bl	403fec <__aeabi_fcmpeq>
  402cac:	2800      	cmp	r0, #0
  402cae:	f47f af7d 	bne.w	402bac <__kernel_rem_pio2f+0x280>
  402cb2:	9e04      	ldr	r6, [sp, #16]
  402cb4:	4638      	mov	r0, r7
  402cb6:	4271      	negs	r1, r6
  402cb8:	f000 fa7e 	bl	4031b8 <scalbnf>
  402cbc:	f04f 4187 	mov.w	r1, #1132462080	; 0x43800000
  402cc0:	46a1      	mov	r9, r4
  402cc2:	4604      	mov	r4, r0
  402cc4:	f001 f9b0 	bl	404028 <__aeabi_fcmpge>
  402cc8:	2800      	cmp	r0, #0
  402cca:	f000 818d 	beq.w	402fe8 <__kernel_rem_pio2f+0x6bc>
  402cce:	f04f 516e 	mov.w	r1, #998244352	; 0x3b800000
  402cd2:	4620      	mov	r0, r4
  402cd4:	f000 fff6 	bl	403cc4 <__aeabi_fmul>
  402cd8:	f001 f9ba 	bl	404050 <__aeabi_f2iz>
  402cdc:	f000 ff9e 	bl	403c1c <__aeabi_i2f>
  402ce0:	f04f 4187 	mov.w	r1, #1132462080	; 0x43800000
  402ce4:	4605      	mov	r5, r0
  402ce6:	f000 ffed 	bl	403cc4 <__aeabi_fmul>
  402cea:	4601      	mov	r1, r0
  402cec:	4620      	mov	r0, r4
  402cee:	f000 fedf 	bl	403ab0 <__aeabi_fsub>
  402cf2:	f001 f9ad 	bl	404050 <__aeabi_f2iz>
  402cf6:	f84a 0028 	str.w	r0, [sl, r8, lsl #2]
  402cfa:	4628      	mov	r0, r5
  402cfc:	f001 f9a8 	bl	404050 <__aeabi_f2iz>
  402d00:	f108 0701 	add.w	r7, r8, #1
  402d04:	4633      	mov	r3, r6
  402d06:	3308      	adds	r3, #8
  402d08:	9304      	str	r3, [sp, #16]
  402d0a:	f84a 0027 	str.w	r0, [sl, r7, lsl #2]
  402d0e:	e012      	b.n	402d36 <__kernel_rem_pio2f+0x40a>
  402d10:	9a04      	ldr	r2, [sp, #16]
  402d12:	f85a 3027 	ldr.w	r3, [sl, r7, lsl #2]
  402d16:	3a08      	subs	r2, #8
  402d18:	46a1      	mov	r9, r4
  402d1a:	9204      	str	r2, [sp, #16]
  402d1c:	b95b      	cbnz	r3, 402d36 <__kernel_rem_pio2f+0x40a>
  402d1e:	f107 4380 	add.w	r3, r7, #1073741824	; 0x40000000
  402d22:	3b01      	subs	r3, #1
  402d24:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
  402d28:	f853 1904 	ldr.w	r1, [r3], #-4
  402d2c:	3f01      	subs	r7, #1
  402d2e:	3a08      	subs	r2, #8
  402d30:	2900      	cmp	r1, #0
  402d32:	d0f9      	beq.n	402d28 <__kernel_rem_pio2f+0x3fc>
  402d34:	9204      	str	r2, [sp, #16]
  402d36:	9904      	ldr	r1, [sp, #16]
  402d38:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
  402d3c:	f000 fa3c 	bl	4031b8 <scalbnf>
  402d40:	2f00      	cmp	r7, #0
  402d42:	4604      	mov	r4, r0
  402d44:	f2c0 815c 	blt.w	403000 <__kernel_rem_pio2f+0x6d4>
  402d48:	00bb      	lsls	r3, r7, #2
  402d4a:	a948      	add	r1, sp, #288	; 0x120
  402d4c:	1d1a      	adds	r2, r3, #4
  402d4e:	eb01 0803 	add.w	r8, r1, r3
  402d52:	9301      	str	r3, [sp, #4]
  402d54:	9202      	str	r2, [sp, #8]
  402d56:	f04f 566e 	mov.w	r6, #998244352	; 0x3b800000
  402d5a:	eb0a 0b02 	add.w	fp, sl, r2
  402d5e:	f108 0504 	add.w	r5, r8, #4
  402d62:	f85b 0d04 	ldr.w	r0, [fp, #-4]!
  402d66:	f000 ff59 	bl	403c1c <__aeabi_i2f>
  402d6a:	4621      	mov	r1, r4
  402d6c:	f000 ffaa 	bl	403cc4 <__aeabi_fmul>
  402d70:	4631      	mov	r1, r6
  402d72:	f845 0d04 	str.w	r0, [r5, #-4]!
  402d76:	4620      	mov	r0, r4
  402d78:	f000 ffa4 	bl	403cc4 <__aeabi_fmul>
  402d7c:	45d3      	cmp	fp, sl
  402d7e:	4604      	mov	r4, r0
  402d80:	d1ef      	bne.n	402d62 <__kernel_rem_pio2f+0x436>
  402d82:	2600      	movs	r6, #0
  402d84:	f8dd b014 	ldr.w	fp, [sp, #20]
  402d88:	9703      	str	r7, [sp, #12]
  402d8a:	f1a8 0804 	sub.w	r8, r8, #4
  402d8e:	46b2      	mov	sl, r6
  402d90:	f1bb 0f00 	cmp.w	fp, #0
  402d94:	bfb8      	it	lt
  402d96:	2500      	movlt	r5, #0
  402d98:	db15      	blt.n	402dc6 <__kernel_rem_pio2f+0x49a>
  402d9a:	4ea5      	ldr	r6, [pc, #660]	; (403030 <__kernel_rem_pio2f+0x704>)
  402d9c:	48a5      	ldr	r0, [pc, #660]	; (403034 <__kernel_rem_pio2f+0x708>)
  402d9e:	4647      	mov	r7, r8
  402da0:	2500      	movs	r5, #0
  402da2:	2400      	movs	r4, #0
  402da4:	e003      	b.n	402dae <__kernel_rem_pio2f+0x482>
  402da6:	4554      	cmp	r4, sl
  402da8:	dc0d      	bgt.n	402dc6 <__kernel_rem_pio2f+0x49a>
  402daa:	f856 0f04 	ldr.w	r0, [r6, #4]!
  402dae:	f857 1f04 	ldr.w	r1, [r7, #4]!
  402db2:	f000 ff87 	bl	403cc4 <__aeabi_fmul>
  402db6:	4601      	mov	r1, r0
  402db8:	4628      	mov	r0, r5
  402dba:	f000 fe7b 	bl	403ab4 <__addsf3>
  402dbe:	3401      	adds	r4, #1
  402dc0:	45a3      	cmp	fp, r4
  402dc2:	4605      	mov	r5, r0
  402dc4:	daef      	bge.n	402da6 <__kernel_rem_pio2f+0x47a>
  402dc6:	ab5c      	add	r3, sp, #368	; 0x170
  402dc8:	eb03 038a 	add.w	r3, r3, sl, lsl #2
  402dcc:	f1a8 0804 	sub.w	r8, r8, #4
  402dd0:	f843 5ca0 	str.w	r5, [r3, #-160]
  402dd4:	ab46      	add	r3, sp, #280	; 0x118
  402dd6:	4543      	cmp	r3, r8
  402dd8:	f10a 0a01 	add.w	sl, sl, #1
  402ddc:	d1d8      	bne.n	402d90 <__kernel_rem_pio2f+0x464>
  402dde:	9b66      	ldr	r3, [sp, #408]	; 0x198
  402de0:	9f03      	ldr	r7, [sp, #12]
  402de2:	2b03      	cmp	r3, #3
  402de4:	d85a      	bhi.n	402e9c <__kernel_rem_pio2f+0x570>
  402de6:	e8df f003 	tbb	[pc, r3]
  402dea:	5f8e      	.short	0x5f8e
  402dec:	025f      	.short	0x025f
  402dee:	2f00      	cmp	r7, #0
  402df0:	f340 8104 	ble.w	402ffc <__kernel_rem_pio2f+0x6d0>
  402df4:	9a01      	ldr	r2, [sp, #4]
  402df6:	a95c      	add	r1, sp, #368	; 0x170
  402df8:	188b      	adds	r3, r1, r2
  402dfa:	ac34      	add	r4, sp, #208	; 0xd0
  402dfc:	f853 6ca0 	ldr.w	r6, [r3, #-160]
  402e00:	18a5      	adds	r5, r4, r2
  402e02:	f855 ac04 	ldr.w	sl, [r5, #-4]
  402e06:	4631      	mov	r1, r6
  402e08:	4650      	mov	r0, sl
  402e0a:	f000 fe53 	bl	403ab4 <__addsf3>
  402e0e:	4680      	mov	r8, r0
  402e10:	4601      	mov	r1, r0
  402e12:	4650      	mov	r0, sl
  402e14:	f000 fe4c 	bl	403ab0 <__aeabi_fsub>
  402e18:	4631      	mov	r1, r6
  402e1a:	f000 fe4b 	bl	403ab4 <__addsf3>
  402e1e:	6028      	str	r0, [r5, #0]
  402e20:	f845 8d04 	str.w	r8, [r5, #-4]!
  402e24:	42ac      	cmp	r4, r5
  402e26:	4646      	mov	r6, r8
  402e28:	d1eb      	bne.n	402e02 <__kernel_rem_pio2f+0x4d6>
  402e2a:	2f01      	cmp	r7, #1
  402e2c:	f340 80e6 	ble.w	402ffc <__kernel_rem_pio2f+0x6d0>
  402e30:	9a01      	ldr	r2, [sp, #4]
  402e32:	a95c      	add	r1, sp, #368	; 0x170
  402e34:	188b      	adds	r3, r1, r2
  402e36:	4414      	add	r4, r2
  402e38:	f853 6ca0 	ldr.w	r6, [r3, #-160]
  402e3c:	4625      	mov	r5, r4
  402e3e:	f10d 0ad4 	add.w	sl, sp, #212	; 0xd4
  402e42:	f855 8c04 	ldr.w	r8, [r5, #-4]
  402e46:	4631      	mov	r1, r6
  402e48:	4640      	mov	r0, r8
  402e4a:	f000 fe33 	bl	403ab4 <__addsf3>
  402e4e:	4607      	mov	r7, r0
  402e50:	4601      	mov	r1, r0
  402e52:	4640      	mov	r0, r8
  402e54:	f000 fe2c 	bl	403ab0 <__aeabi_fsub>
  402e58:	4631      	mov	r1, r6
  402e5a:	f000 fe2b 	bl	403ab4 <__addsf3>
  402e5e:	6028      	str	r0, [r5, #0]
  402e60:	f845 7d04 	str.w	r7, [r5, #-4]!
  402e64:	45aa      	cmp	sl, r5
  402e66:	463e      	mov	r6, r7
  402e68:	d1eb      	bne.n	402e42 <__kernel_rem_pio2f+0x516>
  402e6a:	2000      	movs	r0, #0
  402e6c:	3404      	adds	r4, #4
  402e6e:	ad36      	add	r5, sp, #216	; 0xd8
  402e70:	f854 1d04 	ldr.w	r1, [r4, #-4]!
  402e74:	f000 fe1e 	bl	403ab4 <__addsf3>
  402e78:	42a5      	cmp	r5, r4
  402e7a:	d1f9      	bne.n	402e70 <__kernel_rem_pio2f+0x544>
  402e7c:	f1b9 0f00 	cmp.w	r9, #0
  402e80:	f000 80b9 	beq.w	402ff6 <__kernel_rem_pio2f+0x6ca>
  402e84:	9a34      	ldr	r2, [sp, #208]	; 0xd0
  402e86:	9b35      	ldr	r3, [sp, #212]	; 0xd4
  402e88:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
  402e8c:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
  402e90:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
  402e94:	9c07      	ldr	r4, [sp, #28]
  402e96:	60a0      	str	r0, [r4, #8]
  402e98:	6022      	str	r2, [r4, #0]
  402e9a:	6063      	str	r3, [r4, #4]
  402e9c:	9b06      	ldr	r3, [sp, #24]
  402e9e:	f003 0007 	and.w	r0, r3, #7
  402ea2:	b05d      	add	sp, #372	; 0x174
  402ea4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402ea8:	9c01      	ldr	r4, [sp, #4]
  402eaa:	ad34      	add	r5, sp, #208	; 0xd0
  402eac:	3404      	adds	r4, #4
  402eae:	442c      	add	r4, r5
  402eb0:	2000      	movs	r0, #0
  402eb2:	f854 1d04 	ldr.w	r1, [r4, #-4]!
  402eb6:	f000 fdfd 	bl	403ab4 <__addsf3>
  402eba:	42ac      	cmp	r4, r5
  402ebc:	d1f9      	bne.n	402eb2 <__kernel_rem_pio2f+0x586>
  402ebe:	f1b9 0f00 	cmp.w	r9, #0
  402ec2:	f000 8085 	beq.w	402fd0 <__kernel_rem_pio2f+0x6a4>
  402ec6:	9a07      	ldr	r2, [sp, #28]
  402ec8:	f100 4300 	add.w	r3, r0, #2147483648	; 0x80000000
  402ecc:	4601      	mov	r1, r0
  402ece:	6013      	str	r3, [r2, #0]
  402ed0:	9834      	ldr	r0, [sp, #208]	; 0xd0
  402ed2:	f000 fded 	bl	403ab0 <__aeabi_fsub>
  402ed6:	2f00      	cmp	r7, #0
  402ed8:	dd0b      	ble.n	402ef2 <__kernel_rem_pio2f+0x5c6>
  402eda:	ad34      	add	r5, sp, #208	; 0xd0
  402edc:	2401      	movs	r4, #1
  402ede:	3401      	adds	r4, #1
  402ee0:	f855 1f04 	ldr.w	r1, [r5, #4]!
  402ee4:	f000 fde6 	bl	403ab4 <__addsf3>
  402ee8:	42a7      	cmp	r7, r4
  402eea:	daf8      	bge.n	402ede <__kernel_rem_pio2f+0x5b2>
  402eec:	f1b9 0f00 	cmp.w	r9, #0
  402ef0:	d001      	beq.n	402ef6 <__kernel_rem_pio2f+0x5ca>
  402ef2:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
  402ef6:	9b07      	ldr	r3, [sp, #28]
  402ef8:	6058      	str	r0, [r3, #4]
  402efa:	9b06      	ldr	r3, [sp, #24]
  402efc:	f003 0007 	and.w	r0, r3, #7
  402f00:	b05d      	add	sp, #372	; 0x174
  402f02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402f06:	9b02      	ldr	r3, [sp, #8]
  402f08:	ad34      	add	r5, sp, #208	; 0xd0
  402f0a:	442b      	add	r3, r5
  402f0c:	2000      	movs	r0, #0
  402f0e:	461c      	mov	r4, r3
  402f10:	f854 1d04 	ldr.w	r1, [r4, #-4]!
  402f14:	f000 fdce 	bl	403ab4 <__addsf3>
  402f18:	42a5      	cmp	r5, r4
  402f1a:	d1f9      	bne.n	402f10 <__kernel_rem_pio2f+0x5e4>
  402f1c:	f1b9 0f00 	cmp.w	r9, #0
  402f20:	d001      	beq.n	402f26 <__kernel_rem_pio2f+0x5fa>
  402f22:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
  402f26:	9b07      	ldr	r3, [sp, #28]
  402f28:	6018      	str	r0, [r3, #0]
  402f2a:	9b06      	ldr	r3, [sp, #24]
  402f2c:	f003 0007 	and.w	r0, r3, #7
  402f30:	b05d      	add	sp, #372	; 0x174
  402f32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402f36:	46ca      	mov	sl, r9
  402f38:	f847 af04 	str.w	sl, [r7, #4]!
  402f3c:	4547      	cmp	r7, r8
  402f3e:	f106 0604 	add.w	r6, r6, #4
  402f42:	f47f ad3b 	bne.w	4029bc <__kernel_rem_pio2f+0x90>
  402f46:	e554      	b.n	4029f2 <__kernel_rem_pio2f+0xc6>
  402f48:	9b06      	ldr	r3, [sp, #24]
  402f4a:	f1b8 0f00 	cmp.w	r8, #0
  402f4e:	f103 0301 	add.w	r3, r3, #1
  402f52:	9306      	str	r3, [sp, #24]
  402f54:	bfc8      	it	gt
  402f56:	2402      	movgt	r4, #2
  402f58:	f73f adcd 	bgt.w	402af6 <__kernel_rem_pio2f+0x1ca>
  402f5c:	4639      	mov	r1, r7
  402f5e:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
  402f62:	f000 fda5 	bl	403ab0 <__aeabi_fsub>
  402f66:	2402      	movs	r4, #2
  402f68:	4607      	mov	r7, r0
  402f6a:	e618      	b.n	402b9e <__kernel_rem_pio2f+0x272>
  402f6c:	9b04      	ldr	r3, [sp, #16]
  402f6e:	2b00      	cmp	r3, #0
  402f70:	dd22      	ble.n	402fb8 <__kernel_rem_pio2f+0x68c>
  402f72:	2600      	movs	r6, #0
  402f74:	9b04      	ldr	r3, [sp, #16]
  402f76:	2b01      	cmp	r3, #1
  402f78:	f43f adf2 	beq.w	402b60 <__kernel_rem_pio2f+0x234>
  402f7c:	2b02      	cmp	r3, #2
  402f7e:	d107      	bne.n	402f90 <__kernel_rem_pio2f+0x664>
  402f80:	f108 32ff 	add.w	r2, r8, #4294967295
  402f84:	f85a 3022 	ldr.w	r3, [sl, r2, lsl #2]
  402f88:	f003 033f 	and.w	r3, r3, #63	; 0x3f
  402f8c:	f84a 3022 	str.w	r3, [sl, r2, lsl #2]
  402f90:	2c02      	cmp	r4, #2
  402f92:	f47f ae04 	bne.w	402b9e <__kernel_rem_pio2f+0x272>
  402f96:	4639      	mov	r1, r7
  402f98:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
  402f9c:	f000 fd88 	bl	403ab0 <__aeabi_fsub>
  402fa0:	4607      	mov	r7, r0
  402fa2:	2e00      	cmp	r6, #0
  402fa4:	f43f adfb 	beq.w	402b9e <__kernel_rem_pio2f+0x272>
  402fa8:	e5ee      	b.n	402b88 <__kernel_rem_pio2f+0x25c>
  402faa:	3301      	adds	r3, #1
  402fac:	4598      	cmp	r8, r3
  402fae:	f47f adad 	bne.w	402b0c <__kernel_rem_pio2f+0x1e0>
  402fb2:	9b04      	ldr	r3, [sp, #16]
  402fb4:	2b00      	cmp	r3, #0
  402fb6:	dcdd      	bgt.n	402f74 <__kernel_rem_pio2f+0x648>
  402fb8:	2c02      	cmp	r4, #2
  402fba:	f47f adf0 	bne.w	402b9e <__kernel_rem_pio2f+0x272>
  402fbe:	4639      	mov	r1, r7
  402fc0:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
  402fc4:	f000 fd74 	bl	403ab0 <__aeabi_fsub>
  402fc8:	4607      	mov	r7, r0
  402fca:	e5e8      	b.n	402b9e <__kernel_rem_pio2f+0x272>
  402fcc:	2301      	movs	r3, #1
  402fce:	e610      	b.n	402bf2 <__kernel_rem_pio2f+0x2c6>
  402fd0:	9b07      	ldr	r3, [sp, #28]
  402fd2:	4601      	mov	r1, r0
  402fd4:	6018      	str	r0, [r3, #0]
  402fd6:	9834      	ldr	r0, [sp, #208]	; 0xd0
  402fd8:	f000 fd6a 	bl	403ab0 <__aeabi_fsub>
  402fdc:	2f00      	cmp	r7, #0
  402fde:	f73f af7c 	bgt.w	402eda <__kernel_rem_pio2f+0x5ae>
  402fe2:	9b07      	ldr	r3, [sp, #28]
  402fe4:	6058      	str	r0, [r3, #4]
  402fe6:	e788      	b.n	402efa <__kernel_rem_pio2f+0x5ce>
  402fe8:	4620      	mov	r0, r4
  402fea:	f001 f831 	bl	404050 <__aeabi_f2iz>
  402fee:	4647      	mov	r7, r8
  402ff0:	f84a 0028 	str.w	r0, [sl, r8, lsl #2]
  402ff4:	e69f      	b.n	402d36 <__kernel_rem_pio2f+0x40a>
  402ff6:	9a34      	ldr	r2, [sp, #208]	; 0xd0
  402ff8:	9b35      	ldr	r3, [sp, #212]	; 0xd4
  402ffa:	e74b      	b.n	402e94 <__kernel_rem_pio2f+0x568>
  402ffc:	2000      	movs	r0, #0
  402ffe:	e73d      	b.n	402e7c <__kernel_rem_pio2f+0x550>
  403000:	9b66      	ldr	r3, [sp, #408]	; 0x198
  403002:	2b03      	cmp	r3, #3
  403004:	f63f af4a 	bhi.w	402e9c <__kernel_rem_pio2f+0x570>
  403008:	a201      	add	r2, pc, #4	; (adr r2, 403010 <__kernel_rem_pio2f+0x6e4>)
  40300a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
  40300e:	bf00      	nop
  403010:	00403025 	.word	0x00403025
  403014:	00403021 	.word	0x00403021
  403018:	00403021 	.word	0x00403021
  40301c:	00402ffd 	.word	0x00402ffd
  403020:	2000      	movs	r0, #0
  403022:	e74c      	b.n	402ebe <__kernel_rem_pio2f+0x592>
  403024:	2000      	movs	r0, #0
  403026:	e779      	b.n	402f1c <__kernel_rem_pio2f+0x5f0>
  403028:	2101      	movs	r1, #1
  40302a:	2300      	movs	r3, #0
  40302c:	e574      	b.n	402b18 <__kernel_rem_pio2f+0x1ec>
  40302e:	bf00      	nop
  403030:	00408d40 	.word	0x00408d40
  403034:	3fc90000 	.word	0x3fc90000

00403038 <__kernel_sinf>:
  403038:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40303c:	f020 4300 	bic.w	r3, r0, #2147483648	; 0x80000000
  403040:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
  403044:	4604      	mov	r4, r0
  403046:	460f      	mov	r7, r1
  403048:	4690      	mov	r8, r2
  40304a:	da03      	bge.n	403054 <__kernel_sinf+0x1c>
  40304c:	f001 f800 	bl	404050 <__aeabi_f2iz>
  403050:	2800      	cmp	r0, #0
  403052:	d058      	beq.n	403106 <__kernel_sinf+0xce>
  403054:	4621      	mov	r1, r4
  403056:	4620      	mov	r0, r4
  403058:	f000 fe34 	bl	403cc4 <__aeabi_fmul>
  40305c:	4605      	mov	r5, r0
  40305e:	4601      	mov	r1, r0
  403060:	4620      	mov	r0, r4
  403062:	f000 fe2f 	bl	403cc4 <__aeabi_fmul>
  403066:	4929      	ldr	r1, [pc, #164]	; (40310c <__kernel_sinf+0xd4>)
  403068:	4606      	mov	r6, r0
  40306a:	4628      	mov	r0, r5
  40306c:	f000 fe2a 	bl	403cc4 <__aeabi_fmul>
  403070:	4927      	ldr	r1, [pc, #156]	; (403110 <__kernel_sinf+0xd8>)
  403072:	f000 fd1d 	bl	403ab0 <__aeabi_fsub>
  403076:	4629      	mov	r1, r5
  403078:	f000 fe24 	bl	403cc4 <__aeabi_fmul>
  40307c:	4925      	ldr	r1, [pc, #148]	; (403114 <__kernel_sinf+0xdc>)
  40307e:	f000 fd19 	bl	403ab4 <__addsf3>
  403082:	4629      	mov	r1, r5
  403084:	f000 fe1e 	bl	403cc4 <__aeabi_fmul>
  403088:	4923      	ldr	r1, [pc, #140]	; (403118 <__kernel_sinf+0xe0>)
  40308a:	f000 fd11 	bl	403ab0 <__aeabi_fsub>
  40308e:	4629      	mov	r1, r5
  403090:	f000 fe18 	bl	403cc4 <__aeabi_fmul>
  403094:	4921      	ldr	r1, [pc, #132]	; (40311c <__kernel_sinf+0xe4>)
  403096:	f000 fd0d 	bl	403ab4 <__addsf3>
  40309a:	4681      	mov	r9, r0
  40309c:	f1b8 0f00 	cmp.w	r8, #0
  4030a0:	d022      	beq.n	4030e8 <__kernel_sinf+0xb0>
  4030a2:	f04f 517c 	mov.w	r1, #1056964608	; 0x3f000000
  4030a6:	4638      	mov	r0, r7
  4030a8:	f000 fe0c 	bl	403cc4 <__aeabi_fmul>
  4030ac:	4649      	mov	r1, r9
  4030ae:	4680      	mov	r8, r0
  4030b0:	4630      	mov	r0, r6
  4030b2:	f000 fe07 	bl	403cc4 <__aeabi_fmul>
  4030b6:	4601      	mov	r1, r0
  4030b8:	4640      	mov	r0, r8
  4030ba:	f000 fcf9 	bl	403ab0 <__aeabi_fsub>
  4030be:	4629      	mov	r1, r5
  4030c0:	f000 fe00 	bl	403cc4 <__aeabi_fmul>
  4030c4:	4639      	mov	r1, r7
  4030c6:	f000 fcf3 	bl	403ab0 <__aeabi_fsub>
  4030ca:	4915      	ldr	r1, [pc, #84]	; (403120 <__kernel_sinf+0xe8>)
  4030cc:	4605      	mov	r5, r0
  4030ce:	4630      	mov	r0, r6
  4030d0:	f000 fdf8 	bl	403cc4 <__aeabi_fmul>
  4030d4:	4601      	mov	r1, r0
  4030d6:	4628      	mov	r0, r5
  4030d8:	f000 fcec 	bl	403ab4 <__addsf3>
  4030dc:	4601      	mov	r1, r0
  4030de:	4620      	mov	r0, r4
  4030e0:	f000 fce6 	bl	403ab0 <__aeabi_fsub>
  4030e4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4030e8:	4601      	mov	r1, r0
  4030ea:	4628      	mov	r0, r5
  4030ec:	f000 fdea 	bl	403cc4 <__aeabi_fmul>
  4030f0:	490b      	ldr	r1, [pc, #44]	; (403120 <__kernel_sinf+0xe8>)
  4030f2:	f000 fcdd 	bl	403ab0 <__aeabi_fsub>
  4030f6:	4631      	mov	r1, r6
  4030f8:	f000 fde4 	bl	403cc4 <__aeabi_fmul>
  4030fc:	4621      	mov	r1, r4
  4030fe:	f000 fcd9 	bl	403ab4 <__addsf3>
  403102:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  403106:	4620      	mov	r0, r4
  403108:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40310c:	2f2ec9d3 	.word	0x2f2ec9d3
  403110:	32d72f34 	.word	0x32d72f34
  403114:	3638ef1b 	.word	0x3638ef1b
  403118:	39500d01 	.word	0x39500d01
  40311c:	3c088889 	.word	0x3c088889
  403120:	3e2aaaab 	.word	0x3e2aaaab

00403124 <fabsf>:
  403124:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
  403128:	4770      	bx	lr
  40312a:	bf00      	nop

0040312c <floorf>:
  40312c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  403130:	f020 4700 	bic.w	r7, r0, #2147483648	; 0x80000000
  403134:	0dfc      	lsrs	r4, r7, #23
  403136:	3c7f      	subs	r4, #127	; 0x7f
  403138:	2c16      	cmp	r4, #22
  40313a:	4605      	mov	r5, r0
  40313c:	dc13      	bgt.n	403166 <floorf+0x3a>
  40313e:	2c00      	cmp	r4, #0
  403140:	4680      	mov	r8, r0
  403142:	db1b      	blt.n	40317c <floorf+0x50>
  403144:	4f19      	ldr	r7, [pc, #100]	; (4031ac <floorf+0x80>)
  403146:	4127      	asrs	r7, r4
  403148:	4238      	tst	r0, r7
  40314a:	d014      	beq.n	403176 <floorf+0x4a>
  40314c:	4918      	ldr	r1, [pc, #96]	; (4031b0 <floorf+0x84>)
  40314e:	f000 fcb1 	bl	403ab4 <__addsf3>
  403152:	2100      	movs	r1, #0
  403154:	f000 ff72 	bl	40403c <__aeabi_fcmpgt>
  403158:	b168      	cbz	r0, 403176 <floorf+0x4a>
  40315a:	2d00      	cmp	r5, #0
  40315c:	db1b      	blt.n	403196 <floorf+0x6a>
  40315e:	ea28 0007 	bic.w	r0, r8, r7
  403162:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  403166:	f1b7 4fff 	cmp.w	r7, #2139095040	; 0x7f800000
  40316a:	d304      	bcc.n	403176 <floorf+0x4a>
  40316c:	4601      	mov	r1, r0
  40316e:	f000 fca1 	bl	403ab4 <__addsf3>
  403172:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  403176:	4628      	mov	r0, r5
  403178:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40317c:	490c      	ldr	r1, [pc, #48]	; (4031b0 <floorf+0x84>)
  40317e:	f000 fc99 	bl	403ab4 <__addsf3>
  403182:	2100      	movs	r1, #0
  403184:	f000 ff5a 	bl	40403c <__aeabi_fcmpgt>
  403188:	2800      	cmp	r0, #0
  40318a:	d0f4      	beq.n	403176 <floorf+0x4a>
  40318c:	2d00      	cmp	r5, #0
  40318e:	db08      	blt.n	4031a2 <floorf+0x76>
  403190:	2000      	movs	r0, #0
  403192:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  403196:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
  40319a:	fa43 f404 	asr.w	r4, r3, r4
  40319e:	44a0      	add	r8, r4
  4031a0:	e7dd      	b.n	40315e <floorf+0x32>
  4031a2:	2f00      	cmp	r7, #0
  4031a4:	d0e7      	beq.n	403176 <floorf+0x4a>
  4031a6:	4803      	ldr	r0, [pc, #12]	; (4031b4 <floorf+0x88>)
  4031a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4031ac:	007fffff 	.word	0x007fffff
  4031b0:	7149f2ca 	.word	0x7149f2ca
  4031b4:	bf800000 	.word	0xbf800000

004031b8 <scalbnf>:
  4031b8:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
  4031bc:	b538      	push	{r3, r4, r5, lr}
  4031be:	4603      	mov	r3, r0
  4031c0:	d016      	beq.n	4031f0 <scalbnf+0x38>
  4031c2:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
  4031c6:	d20f      	bcs.n	4031e8 <scalbnf+0x30>
  4031c8:	f5b2 0f00 	cmp.w	r2, #8388608	; 0x800000
  4031cc:	460d      	mov	r5, r1
  4031ce:	d310      	bcc.n	4031f2 <scalbnf+0x3a>
  4031d0:	4604      	mov	r4, r0
  4031d2:	0dd0      	lsrs	r0, r2, #23
  4031d4:	4428      	add	r0, r5
  4031d6:	28fe      	cmp	r0, #254	; 0xfe
  4031d8:	dc2e      	bgt.n	403238 <scalbnf+0x80>
  4031da:	2800      	cmp	r0, #0
  4031dc:	dd1d      	ble.n	40321a <scalbnf+0x62>
  4031de:	f024 44ff 	bic.w	r4, r4, #2139095040	; 0x7f800000
  4031e2:	ea44 50c0 	orr.w	r0, r4, r0, lsl #23
  4031e6:	bd38      	pop	{r3, r4, r5, pc}
  4031e8:	4601      	mov	r1, r0
  4031ea:	f000 fc63 	bl	403ab4 <__addsf3>
  4031ee:	bd38      	pop	{r3, r4, r5, pc}
  4031f0:	bd38      	pop	{r3, r4, r5, pc}
  4031f2:	f04f 4198 	mov.w	r1, #1275068416	; 0x4c000000
  4031f6:	f000 fd65 	bl	403cc4 <__aeabi_fmul>
  4031fa:	4a18      	ldr	r2, [pc, #96]	; (40325c <scalbnf+0xa4>)
  4031fc:	4295      	cmp	r5, r2
  4031fe:	4603      	mov	r3, r0
  403200:	db07      	blt.n	403212 <scalbnf+0x5a>
  403202:	4604      	mov	r4, r0
  403204:	f3c0 50c7 	ubfx	r0, r0, #23, #8
  403208:	3819      	subs	r0, #25
  40320a:	e7e3      	b.n	4031d4 <scalbnf+0x1c>
  40320c:	4814      	ldr	r0, [pc, #80]	; (403260 <scalbnf+0xa8>)
  40320e:	f000 f82b 	bl	403268 <copysignf>
  403212:	4913      	ldr	r1, [pc, #76]	; (403260 <scalbnf+0xa8>)
  403214:	f000 fd56 	bl	403cc4 <__aeabi_fmul>
  403218:	bd38      	pop	{r3, r4, r5, pc}
  40321a:	f110 0f16 	cmn.w	r0, #22
  40321e:	da13      	bge.n	403248 <scalbnf+0x90>
  403220:	f24c 3250 	movw	r2, #50000	; 0xc350
  403224:	4295      	cmp	r5, r2
  403226:	4619      	mov	r1, r3
  403228:	ddf0      	ble.n	40320c <scalbnf+0x54>
  40322a:	480e      	ldr	r0, [pc, #56]	; (403264 <scalbnf+0xac>)
  40322c:	f000 f81c 	bl	403268 <copysignf>
  403230:	490c      	ldr	r1, [pc, #48]	; (403264 <scalbnf+0xac>)
  403232:	f000 fd47 	bl	403cc4 <__aeabi_fmul>
  403236:	bd38      	pop	{r3, r4, r5, pc}
  403238:	4619      	mov	r1, r3
  40323a:	480a      	ldr	r0, [pc, #40]	; (403264 <scalbnf+0xac>)
  40323c:	f000 f814 	bl	403268 <copysignf>
  403240:	4908      	ldr	r1, [pc, #32]	; (403264 <scalbnf+0xac>)
  403242:	f000 fd3f 	bl	403cc4 <__aeabi_fmul>
  403246:	bd38      	pop	{r3, r4, r5, pc}
  403248:	f024 44ff 	bic.w	r4, r4, #2139095040	; 0x7f800000
  40324c:	3019      	adds	r0, #25
  40324e:	ea44 50c0 	orr.w	r0, r4, r0, lsl #23
  403252:	f04f 514c 	mov.w	r1, #855638016	; 0x33000000
  403256:	f000 fd35 	bl	403cc4 <__aeabi_fmul>
  40325a:	bd38      	pop	{r3, r4, r5, pc}
  40325c:	ffff3cb0 	.word	0xffff3cb0
  403260:	0da24260 	.word	0x0da24260
  403264:	7149f2ca 	.word	0x7149f2ca

00403268 <copysignf>:
  403268:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  40326c:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
  403270:	4308      	orrs	r0, r1
  403272:	4770      	bx	lr

00403274 <__aeabi_drsub>:
  403274:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  403278:	e002      	b.n	403280 <__adddf3>
  40327a:	bf00      	nop

0040327c <__aeabi_dsub>:
  40327c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00403280 <__adddf3>:
  403280:	b530      	push	{r4, r5, lr}
  403282:	ea4f 0441 	mov.w	r4, r1, lsl #1
  403286:	ea4f 0543 	mov.w	r5, r3, lsl #1
  40328a:	ea94 0f05 	teq	r4, r5
  40328e:	bf08      	it	eq
  403290:	ea90 0f02 	teqeq	r0, r2
  403294:	bf1f      	itttt	ne
  403296:	ea54 0c00 	orrsne.w	ip, r4, r0
  40329a:	ea55 0c02 	orrsne.w	ip, r5, r2
  40329e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  4032a2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  4032a6:	f000 80e2 	beq.w	40346e <__adddf3+0x1ee>
  4032aa:	ea4f 5454 	mov.w	r4, r4, lsr #21
  4032ae:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  4032b2:	bfb8      	it	lt
  4032b4:	426d      	neglt	r5, r5
  4032b6:	dd0c      	ble.n	4032d2 <__adddf3+0x52>
  4032b8:	442c      	add	r4, r5
  4032ba:	ea80 0202 	eor.w	r2, r0, r2
  4032be:	ea81 0303 	eor.w	r3, r1, r3
  4032c2:	ea82 0000 	eor.w	r0, r2, r0
  4032c6:	ea83 0101 	eor.w	r1, r3, r1
  4032ca:	ea80 0202 	eor.w	r2, r0, r2
  4032ce:	ea81 0303 	eor.w	r3, r1, r3
  4032d2:	2d36      	cmp	r5, #54	; 0x36
  4032d4:	bf88      	it	hi
  4032d6:	bd30      	pophi	{r4, r5, pc}
  4032d8:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4032dc:	ea4f 3101 	mov.w	r1, r1, lsl #12
  4032e0:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  4032e4:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  4032e8:	d002      	beq.n	4032f0 <__adddf3+0x70>
  4032ea:	4240      	negs	r0, r0
  4032ec:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  4032f0:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  4032f4:	ea4f 3303 	mov.w	r3, r3, lsl #12
  4032f8:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  4032fc:	d002      	beq.n	403304 <__adddf3+0x84>
  4032fe:	4252      	negs	r2, r2
  403300:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  403304:	ea94 0f05 	teq	r4, r5
  403308:	f000 80a7 	beq.w	40345a <__adddf3+0x1da>
  40330c:	f1a4 0401 	sub.w	r4, r4, #1
  403310:	f1d5 0e20 	rsbs	lr, r5, #32
  403314:	db0d      	blt.n	403332 <__adddf3+0xb2>
  403316:	fa02 fc0e 	lsl.w	ip, r2, lr
  40331a:	fa22 f205 	lsr.w	r2, r2, r5
  40331e:	1880      	adds	r0, r0, r2
  403320:	f141 0100 	adc.w	r1, r1, #0
  403324:	fa03 f20e 	lsl.w	r2, r3, lr
  403328:	1880      	adds	r0, r0, r2
  40332a:	fa43 f305 	asr.w	r3, r3, r5
  40332e:	4159      	adcs	r1, r3
  403330:	e00e      	b.n	403350 <__adddf3+0xd0>
  403332:	f1a5 0520 	sub.w	r5, r5, #32
  403336:	f10e 0e20 	add.w	lr, lr, #32
  40333a:	2a01      	cmp	r2, #1
  40333c:	fa03 fc0e 	lsl.w	ip, r3, lr
  403340:	bf28      	it	cs
  403342:	f04c 0c02 	orrcs.w	ip, ip, #2
  403346:	fa43 f305 	asr.w	r3, r3, r5
  40334a:	18c0      	adds	r0, r0, r3
  40334c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  403350:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  403354:	d507      	bpl.n	403366 <__adddf3+0xe6>
  403356:	f04f 0e00 	mov.w	lr, #0
  40335a:	f1dc 0c00 	rsbs	ip, ip, #0
  40335e:	eb7e 0000 	sbcs.w	r0, lr, r0
  403362:	eb6e 0101 	sbc.w	r1, lr, r1
  403366:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  40336a:	d31b      	bcc.n	4033a4 <__adddf3+0x124>
  40336c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  403370:	d30c      	bcc.n	40338c <__adddf3+0x10c>
  403372:	0849      	lsrs	r1, r1, #1
  403374:	ea5f 0030 	movs.w	r0, r0, rrx
  403378:	ea4f 0c3c 	mov.w	ip, ip, rrx
  40337c:	f104 0401 	add.w	r4, r4, #1
  403380:	ea4f 5244 	mov.w	r2, r4, lsl #21
  403384:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  403388:	f080 809a 	bcs.w	4034c0 <__adddf3+0x240>
  40338c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  403390:	bf08      	it	eq
  403392:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  403396:	f150 0000 	adcs.w	r0, r0, #0
  40339a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  40339e:	ea41 0105 	orr.w	r1, r1, r5
  4033a2:	bd30      	pop	{r4, r5, pc}
  4033a4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  4033a8:	4140      	adcs	r0, r0
  4033aa:	eb41 0101 	adc.w	r1, r1, r1
  4033ae:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4033b2:	f1a4 0401 	sub.w	r4, r4, #1
  4033b6:	d1e9      	bne.n	40338c <__adddf3+0x10c>
  4033b8:	f091 0f00 	teq	r1, #0
  4033bc:	bf04      	itt	eq
  4033be:	4601      	moveq	r1, r0
  4033c0:	2000      	moveq	r0, #0
  4033c2:	fab1 f381 	clz	r3, r1
  4033c6:	bf08      	it	eq
  4033c8:	3320      	addeq	r3, #32
  4033ca:	f1a3 030b 	sub.w	r3, r3, #11
  4033ce:	f1b3 0220 	subs.w	r2, r3, #32
  4033d2:	da0c      	bge.n	4033ee <__adddf3+0x16e>
  4033d4:	320c      	adds	r2, #12
  4033d6:	dd08      	ble.n	4033ea <__adddf3+0x16a>
  4033d8:	f102 0c14 	add.w	ip, r2, #20
  4033dc:	f1c2 020c 	rsb	r2, r2, #12
  4033e0:	fa01 f00c 	lsl.w	r0, r1, ip
  4033e4:	fa21 f102 	lsr.w	r1, r1, r2
  4033e8:	e00c      	b.n	403404 <__adddf3+0x184>
  4033ea:	f102 0214 	add.w	r2, r2, #20
  4033ee:	bfd8      	it	le
  4033f0:	f1c2 0c20 	rsble	ip, r2, #32
  4033f4:	fa01 f102 	lsl.w	r1, r1, r2
  4033f8:	fa20 fc0c 	lsr.w	ip, r0, ip
  4033fc:	bfdc      	itt	le
  4033fe:	ea41 010c 	orrle.w	r1, r1, ip
  403402:	4090      	lslle	r0, r2
  403404:	1ae4      	subs	r4, r4, r3
  403406:	bfa2      	ittt	ge
  403408:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  40340c:	4329      	orrge	r1, r5
  40340e:	bd30      	popge	{r4, r5, pc}
  403410:	ea6f 0404 	mvn.w	r4, r4
  403414:	3c1f      	subs	r4, #31
  403416:	da1c      	bge.n	403452 <__adddf3+0x1d2>
  403418:	340c      	adds	r4, #12
  40341a:	dc0e      	bgt.n	40343a <__adddf3+0x1ba>
  40341c:	f104 0414 	add.w	r4, r4, #20
  403420:	f1c4 0220 	rsb	r2, r4, #32
  403424:	fa20 f004 	lsr.w	r0, r0, r4
  403428:	fa01 f302 	lsl.w	r3, r1, r2
  40342c:	ea40 0003 	orr.w	r0, r0, r3
  403430:	fa21 f304 	lsr.w	r3, r1, r4
  403434:	ea45 0103 	orr.w	r1, r5, r3
  403438:	bd30      	pop	{r4, r5, pc}
  40343a:	f1c4 040c 	rsb	r4, r4, #12
  40343e:	f1c4 0220 	rsb	r2, r4, #32
  403442:	fa20 f002 	lsr.w	r0, r0, r2
  403446:	fa01 f304 	lsl.w	r3, r1, r4
  40344a:	ea40 0003 	orr.w	r0, r0, r3
  40344e:	4629      	mov	r1, r5
  403450:	bd30      	pop	{r4, r5, pc}
  403452:	fa21 f004 	lsr.w	r0, r1, r4
  403456:	4629      	mov	r1, r5
  403458:	bd30      	pop	{r4, r5, pc}
  40345a:	f094 0f00 	teq	r4, #0
  40345e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  403462:	bf06      	itte	eq
  403464:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  403468:	3401      	addeq	r4, #1
  40346a:	3d01      	subne	r5, #1
  40346c:	e74e      	b.n	40330c <__adddf3+0x8c>
  40346e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  403472:	bf18      	it	ne
  403474:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  403478:	d029      	beq.n	4034ce <__adddf3+0x24e>
  40347a:	ea94 0f05 	teq	r4, r5
  40347e:	bf08      	it	eq
  403480:	ea90 0f02 	teqeq	r0, r2
  403484:	d005      	beq.n	403492 <__adddf3+0x212>
  403486:	ea54 0c00 	orrs.w	ip, r4, r0
  40348a:	bf04      	itt	eq
  40348c:	4619      	moveq	r1, r3
  40348e:	4610      	moveq	r0, r2
  403490:	bd30      	pop	{r4, r5, pc}
  403492:	ea91 0f03 	teq	r1, r3
  403496:	bf1e      	ittt	ne
  403498:	2100      	movne	r1, #0
  40349a:	2000      	movne	r0, #0
  40349c:	bd30      	popne	{r4, r5, pc}
  40349e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  4034a2:	d105      	bne.n	4034b0 <__adddf3+0x230>
  4034a4:	0040      	lsls	r0, r0, #1
  4034a6:	4149      	adcs	r1, r1
  4034a8:	bf28      	it	cs
  4034aa:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  4034ae:	bd30      	pop	{r4, r5, pc}
  4034b0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  4034b4:	bf3c      	itt	cc
  4034b6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  4034ba:	bd30      	popcc	{r4, r5, pc}
  4034bc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4034c0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  4034c4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  4034c8:	f04f 0000 	mov.w	r0, #0
  4034cc:	bd30      	pop	{r4, r5, pc}
  4034ce:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  4034d2:	bf1a      	itte	ne
  4034d4:	4619      	movne	r1, r3
  4034d6:	4610      	movne	r0, r2
  4034d8:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  4034dc:	bf1c      	itt	ne
  4034de:	460b      	movne	r3, r1
  4034e0:	4602      	movne	r2, r0
  4034e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  4034e6:	bf06      	itte	eq
  4034e8:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  4034ec:	ea91 0f03 	teqeq	r1, r3
  4034f0:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  4034f4:	bd30      	pop	{r4, r5, pc}
  4034f6:	bf00      	nop

004034f8 <__aeabi_ui2d>:
  4034f8:	f090 0f00 	teq	r0, #0
  4034fc:	bf04      	itt	eq
  4034fe:	2100      	moveq	r1, #0
  403500:	4770      	bxeq	lr
  403502:	b530      	push	{r4, r5, lr}
  403504:	f44f 6480 	mov.w	r4, #1024	; 0x400
  403508:	f104 0432 	add.w	r4, r4, #50	; 0x32
  40350c:	f04f 0500 	mov.w	r5, #0
  403510:	f04f 0100 	mov.w	r1, #0
  403514:	e750      	b.n	4033b8 <__adddf3+0x138>
  403516:	bf00      	nop

00403518 <__aeabi_i2d>:
  403518:	f090 0f00 	teq	r0, #0
  40351c:	bf04      	itt	eq
  40351e:	2100      	moveq	r1, #0
  403520:	4770      	bxeq	lr
  403522:	b530      	push	{r4, r5, lr}
  403524:	f44f 6480 	mov.w	r4, #1024	; 0x400
  403528:	f104 0432 	add.w	r4, r4, #50	; 0x32
  40352c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  403530:	bf48      	it	mi
  403532:	4240      	negmi	r0, r0
  403534:	f04f 0100 	mov.w	r1, #0
  403538:	e73e      	b.n	4033b8 <__adddf3+0x138>
  40353a:	bf00      	nop

0040353c <__aeabi_f2d>:
  40353c:	0042      	lsls	r2, r0, #1
  40353e:	ea4f 01e2 	mov.w	r1, r2, asr #3
  403542:	ea4f 0131 	mov.w	r1, r1, rrx
  403546:	ea4f 7002 	mov.w	r0, r2, lsl #28
  40354a:	bf1f      	itttt	ne
  40354c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  403550:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  403554:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  403558:	4770      	bxne	lr
  40355a:	f092 0f00 	teq	r2, #0
  40355e:	bf14      	ite	ne
  403560:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  403564:	4770      	bxeq	lr
  403566:	b530      	push	{r4, r5, lr}
  403568:	f44f 7460 	mov.w	r4, #896	; 0x380
  40356c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  403570:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  403574:	e720      	b.n	4033b8 <__adddf3+0x138>
  403576:	bf00      	nop

00403578 <__aeabi_ul2d>:
  403578:	ea50 0201 	orrs.w	r2, r0, r1
  40357c:	bf08      	it	eq
  40357e:	4770      	bxeq	lr
  403580:	b530      	push	{r4, r5, lr}
  403582:	f04f 0500 	mov.w	r5, #0
  403586:	e00a      	b.n	40359e <__aeabi_l2d+0x16>

00403588 <__aeabi_l2d>:
  403588:	ea50 0201 	orrs.w	r2, r0, r1
  40358c:	bf08      	it	eq
  40358e:	4770      	bxeq	lr
  403590:	b530      	push	{r4, r5, lr}
  403592:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  403596:	d502      	bpl.n	40359e <__aeabi_l2d+0x16>
  403598:	4240      	negs	r0, r0
  40359a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  40359e:	f44f 6480 	mov.w	r4, #1024	; 0x400
  4035a2:	f104 0432 	add.w	r4, r4, #50	; 0x32
  4035a6:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  4035aa:	f43f aedc 	beq.w	403366 <__adddf3+0xe6>
  4035ae:	f04f 0203 	mov.w	r2, #3
  4035b2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  4035b6:	bf18      	it	ne
  4035b8:	3203      	addne	r2, #3
  4035ba:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  4035be:	bf18      	it	ne
  4035c0:	3203      	addne	r2, #3
  4035c2:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  4035c6:	f1c2 0320 	rsb	r3, r2, #32
  4035ca:	fa00 fc03 	lsl.w	ip, r0, r3
  4035ce:	fa20 f002 	lsr.w	r0, r0, r2
  4035d2:	fa01 fe03 	lsl.w	lr, r1, r3
  4035d6:	ea40 000e 	orr.w	r0, r0, lr
  4035da:	fa21 f102 	lsr.w	r1, r1, r2
  4035de:	4414      	add	r4, r2
  4035e0:	e6c1      	b.n	403366 <__adddf3+0xe6>
  4035e2:	bf00      	nop

004035e4 <__aeabi_dmul>:
  4035e4:	b570      	push	{r4, r5, r6, lr}
  4035e6:	f04f 0cff 	mov.w	ip, #255	; 0xff
  4035ea:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  4035ee:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  4035f2:	bf1d      	ittte	ne
  4035f4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  4035f8:	ea94 0f0c 	teqne	r4, ip
  4035fc:	ea95 0f0c 	teqne	r5, ip
  403600:	f000 f8de 	bleq	4037c0 <__aeabi_dmul+0x1dc>
  403604:	442c      	add	r4, r5
  403606:	ea81 0603 	eor.w	r6, r1, r3
  40360a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  40360e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  403612:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  403616:	bf18      	it	ne
  403618:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  40361c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  403620:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  403624:	d038      	beq.n	403698 <__aeabi_dmul+0xb4>
  403626:	fba0 ce02 	umull	ip, lr, r0, r2
  40362a:	f04f 0500 	mov.w	r5, #0
  40362e:	fbe1 e502 	umlal	lr, r5, r1, r2
  403632:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  403636:	fbe0 e503 	umlal	lr, r5, r0, r3
  40363a:	f04f 0600 	mov.w	r6, #0
  40363e:	fbe1 5603 	umlal	r5, r6, r1, r3
  403642:	f09c 0f00 	teq	ip, #0
  403646:	bf18      	it	ne
  403648:	f04e 0e01 	orrne.w	lr, lr, #1
  40364c:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  403650:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  403654:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  403658:	d204      	bcs.n	403664 <__aeabi_dmul+0x80>
  40365a:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  40365e:	416d      	adcs	r5, r5
  403660:	eb46 0606 	adc.w	r6, r6, r6
  403664:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  403668:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  40366c:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  403670:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  403674:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  403678:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  40367c:	bf88      	it	hi
  40367e:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  403682:	d81e      	bhi.n	4036c2 <__aeabi_dmul+0xde>
  403684:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  403688:	bf08      	it	eq
  40368a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  40368e:	f150 0000 	adcs.w	r0, r0, #0
  403692:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  403696:	bd70      	pop	{r4, r5, r6, pc}
  403698:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  40369c:	ea46 0101 	orr.w	r1, r6, r1
  4036a0:	ea40 0002 	orr.w	r0, r0, r2
  4036a4:	ea81 0103 	eor.w	r1, r1, r3
  4036a8:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  4036ac:	bfc2      	ittt	gt
  4036ae:	ebd4 050c 	rsbsgt	r5, r4, ip
  4036b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  4036b6:	bd70      	popgt	{r4, r5, r6, pc}
  4036b8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  4036bc:	f04f 0e00 	mov.w	lr, #0
  4036c0:	3c01      	subs	r4, #1
  4036c2:	f300 80ab 	bgt.w	40381c <__aeabi_dmul+0x238>
  4036c6:	f114 0f36 	cmn.w	r4, #54	; 0x36
  4036ca:	bfde      	ittt	le
  4036cc:	2000      	movle	r0, #0
  4036ce:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  4036d2:	bd70      	pople	{r4, r5, r6, pc}
  4036d4:	f1c4 0400 	rsb	r4, r4, #0
  4036d8:	3c20      	subs	r4, #32
  4036da:	da35      	bge.n	403748 <__aeabi_dmul+0x164>
  4036dc:	340c      	adds	r4, #12
  4036de:	dc1b      	bgt.n	403718 <__aeabi_dmul+0x134>
  4036e0:	f104 0414 	add.w	r4, r4, #20
  4036e4:	f1c4 0520 	rsb	r5, r4, #32
  4036e8:	fa00 f305 	lsl.w	r3, r0, r5
  4036ec:	fa20 f004 	lsr.w	r0, r0, r4
  4036f0:	fa01 f205 	lsl.w	r2, r1, r5
  4036f4:	ea40 0002 	orr.w	r0, r0, r2
  4036f8:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  4036fc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  403700:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  403704:	fa21 f604 	lsr.w	r6, r1, r4
  403708:	eb42 0106 	adc.w	r1, r2, r6
  40370c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  403710:	bf08      	it	eq
  403712:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  403716:	bd70      	pop	{r4, r5, r6, pc}
  403718:	f1c4 040c 	rsb	r4, r4, #12
  40371c:	f1c4 0520 	rsb	r5, r4, #32
  403720:	fa00 f304 	lsl.w	r3, r0, r4
  403724:	fa20 f005 	lsr.w	r0, r0, r5
  403728:	fa01 f204 	lsl.w	r2, r1, r4
  40372c:	ea40 0002 	orr.w	r0, r0, r2
  403730:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  403734:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  403738:	f141 0100 	adc.w	r1, r1, #0
  40373c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  403740:	bf08      	it	eq
  403742:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  403746:	bd70      	pop	{r4, r5, r6, pc}
  403748:	f1c4 0520 	rsb	r5, r4, #32
  40374c:	fa00 f205 	lsl.w	r2, r0, r5
  403750:	ea4e 0e02 	orr.w	lr, lr, r2
  403754:	fa20 f304 	lsr.w	r3, r0, r4
  403758:	fa01 f205 	lsl.w	r2, r1, r5
  40375c:	ea43 0302 	orr.w	r3, r3, r2
  403760:	fa21 f004 	lsr.w	r0, r1, r4
  403764:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  403768:	fa21 f204 	lsr.w	r2, r1, r4
  40376c:	ea20 0002 	bic.w	r0, r0, r2
  403770:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  403774:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  403778:	bf08      	it	eq
  40377a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  40377e:	bd70      	pop	{r4, r5, r6, pc}
  403780:	f094 0f00 	teq	r4, #0
  403784:	d10f      	bne.n	4037a6 <__aeabi_dmul+0x1c2>
  403786:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  40378a:	0040      	lsls	r0, r0, #1
  40378c:	eb41 0101 	adc.w	r1, r1, r1
  403790:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  403794:	bf08      	it	eq
  403796:	3c01      	subeq	r4, #1
  403798:	d0f7      	beq.n	40378a <__aeabi_dmul+0x1a6>
  40379a:	ea41 0106 	orr.w	r1, r1, r6
  40379e:	f095 0f00 	teq	r5, #0
  4037a2:	bf18      	it	ne
  4037a4:	4770      	bxne	lr
  4037a6:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  4037aa:	0052      	lsls	r2, r2, #1
  4037ac:	eb43 0303 	adc.w	r3, r3, r3
  4037b0:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  4037b4:	bf08      	it	eq
  4037b6:	3d01      	subeq	r5, #1
  4037b8:	d0f7      	beq.n	4037aa <__aeabi_dmul+0x1c6>
  4037ba:	ea43 0306 	orr.w	r3, r3, r6
  4037be:	4770      	bx	lr
  4037c0:	ea94 0f0c 	teq	r4, ip
  4037c4:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  4037c8:	bf18      	it	ne
  4037ca:	ea95 0f0c 	teqne	r5, ip
  4037ce:	d00c      	beq.n	4037ea <__aeabi_dmul+0x206>
  4037d0:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  4037d4:	bf18      	it	ne
  4037d6:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  4037da:	d1d1      	bne.n	403780 <__aeabi_dmul+0x19c>
  4037dc:	ea81 0103 	eor.w	r1, r1, r3
  4037e0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4037e4:	f04f 0000 	mov.w	r0, #0
  4037e8:	bd70      	pop	{r4, r5, r6, pc}
  4037ea:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  4037ee:	bf06      	itte	eq
  4037f0:	4610      	moveq	r0, r2
  4037f2:	4619      	moveq	r1, r3
  4037f4:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  4037f8:	d019      	beq.n	40382e <__aeabi_dmul+0x24a>
  4037fa:	ea94 0f0c 	teq	r4, ip
  4037fe:	d102      	bne.n	403806 <__aeabi_dmul+0x222>
  403800:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  403804:	d113      	bne.n	40382e <__aeabi_dmul+0x24a>
  403806:	ea95 0f0c 	teq	r5, ip
  40380a:	d105      	bne.n	403818 <__aeabi_dmul+0x234>
  40380c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  403810:	bf1c      	itt	ne
  403812:	4610      	movne	r0, r2
  403814:	4619      	movne	r1, r3
  403816:	d10a      	bne.n	40382e <__aeabi_dmul+0x24a>
  403818:	ea81 0103 	eor.w	r1, r1, r3
  40381c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  403820:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  403824:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  403828:	f04f 0000 	mov.w	r0, #0
  40382c:	bd70      	pop	{r4, r5, r6, pc}
  40382e:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  403832:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  403836:	bd70      	pop	{r4, r5, r6, pc}

00403838 <__aeabi_ddiv>:
  403838:	b570      	push	{r4, r5, r6, lr}
  40383a:	f04f 0cff 	mov.w	ip, #255	; 0xff
  40383e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  403842:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  403846:	bf1d      	ittte	ne
  403848:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  40384c:	ea94 0f0c 	teqne	r4, ip
  403850:	ea95 0f0c 	teqne	r5, ip
  403854:	f000 f8a7 	bleq	4039a6 <__aeabi_ddiv+0x16e>
  403858:	eba4 0405 	sub.w	r4, r4, r5
  40385c:	ea81 0e03 	eor.w	lr, r1, r3
  403860:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  403864:	ea4f 3101 	mov.w	r1, r1, lsl #12
  403868:	f000 8088 	beq.w	40397c <__aeabi_ddiv+0x144>
  40386c:	ea4f 3303 	mov.w	r3, r3, lsl #12
  403870:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  403874:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  403878:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  40387c:	ea4f 2202 	mov.w	r2, r2, lsl #8
  403880:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  403884:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  403888:	ea4f 2600 	mov.w	r6, r0, lsl #8
  40388c:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  403890:	429d      	cmp	r5, r3
  403892:	bf08      	it	eq
  403894:	4296      	cmpeq	r6, r2
  403896:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  40389a:	f504 7440 	add.w	r4, r4, #768	; 0x300
  40389e:	d202      	bcs.n	4038a6 <__aeabi_ddiv+0x6e>
  4038a0:	085b      	lsrs	r3, r3, #1
  4038a2:	ea4f 0232 	mov.w	r2, r2, rrx
  4038a6:	1ab6      	subs	r6, r6, r2
  4038a8:	eb65 0503 	sbc.w	r5, r5, r3
  4038ac:	085b      	lsrs	r3, r3, #1
  4038ae:	ea4f 0232 	mov.w	r2, r2, rrx
  4038b2:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  4038b6:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  4038ba:	ebb6 0e02 	subs.w	lr, r6, r2
  4038be:	eb75 0e03 	sbcs.w	lr, r5, r3
  4038c2:	bf22      	ittt	cs
  4038c4:	1ab6      	subcs	r6, r6, r2
  4038c6:	4675      	movcs	r5, lr
  4038c8:	ea40 000c 	orrcs.w	r0, r0, ip
  4038cc:	085b      	lsrs	r3, r3, #1
  4038ce:	ea4f 0232 	mov.w	r2, r2, rrx
  4038d2:	ebb6 0e02 	subs.w	lr, r6, r2
  4038d6:	eb75 0e03 	sbcs.w	lr, r5, r3
  4038da:	bf22      	ittt	cs
  4038dc:	1ab6      	subcs	r6, r6, r2
  4038de:	4675      	movcs	r5, lr
  4038e0:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  4038e4:	085b      	lsrs	r3, r3, #1
  4038e6:	ea4f 0232 	mov.w	r2, r2, rrx
  4038ea:	ebb6 0e02 	subs.w	lr, r6, r2
  4038ee:	eb75 0e03 	sbcs.w	lr, r5, r3
  4038f2:	bf22      	ittt	cs
  4038f4:	1ab6      	subcs	r6, r6, r2
  4038f6:	4675      	movcs	r5, lr
  4038f8:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  4038fc:	085b      	lsrs	r3, r3, #1
  4038fe:	ea4f 0232 	mov.w	r2, r2, rrx
  403902:	ebb6 0e02 	subs.w	lr, r6, r2
  403906:	eb75 0e03 	sbcs.w	lr, r5, r3
  40390a:	bf22      	ittt	cs
  40390c:	1ab6      	subcs	r6, r6, r2
  40390e:	4675      	movcs	r5, lr
  403910:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  403914:	ea55 0e06 	orrs.w	lr, r5, r6
  403918:	d018      	beq.n	40394c <__aeabi_ddiv+0x114>
  40391a:	ea4f 1505 	mov.w	r5, r5, lsl #4
  40391e:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  403922:	ea4f 1606 	mov.w	r6, r6, lsl #4
  403926:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  40392a:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  40392e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  403932:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  403936:	d1c0      	bne.n	4038ba <__aeabi_ddiv+0x82>
  403938:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  40393c:	d10b      	bne.n	403956 <__aeabi_ddiv+0x11e>
  40393e:	ea41 0100 	orr.w	r1, r1, r0
  403942:	f04f 0000 	mov.w	r0, #0
  403946:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  40394a:	e7b6      	b.n	4038ba <__aeabi_ddiv+0x82>
  40394c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  403950:	bf04      	itt	eq
  403952:	4301      	orreq	r1, r0
  403954:	2000      	moveq	r0, #0
  403956:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  40395a:	bf88      	it	hi
  40395c:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  403960:	f63f aeaf 	bhi.w	4036c2 <__aeabi_dmul+0xde>
  403964:	ebb5 0c03 	subs.w	ip, r5, r3
  403968:	bf04      	itt	eq
  40396a:	ebb6 0c02 	subseq.w	ip, r6, r2
  40396e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  403972:	f150 0000 	adcs.w	r0, r0, #0
  403976:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  40397a:	bd70      	pop	{r4, r5, r6, pc}
  40397c:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  403980:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  403984:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  403988:	bfc2      	ittt	gt
  40398a:	ebd4 050c 	rsbsgt	r5, r4, ip
  40398e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  403992:	bd70      	popgt	{r4, r5, r6, pc}
  403994:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  403998:	f04f 0e00 	mov.w	lr, #0
  40399c:	3c01      	subs	r4, #1
  40399e:	e690      	b.n	4036c2 <__aeabi_dmul+0xde>
  4039a0:	ea45 0e06 	orr.w	lr, r5, r6
  4039a4:	e68d      	b.n	4036c2 <__aeabi_dmul+0xde>
  4039a6:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  4039aa:	ea94 0f0c 	teq	r4, ip
  4039ae:	bf08      	it	eq
  4039b0:	ea95 0f0c 	teqeq	r5, ip
  4039b4:	f43f af3b 	beq.w	40382e <__aeabi_dmul+0x24a>
  4039b8:	ea94 0f0c 	teq	r4, ip
  4039bc:	d10a      	bne.n	4039d4 <__aeabi_ddiv+0x19c>
  4039be:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  4039c2:	f47f af34 	bne.w	40382e <__aeabi_dmul+0x24a>
  4039c6:	ea95 0f0c 	teq	r5, ip
  4039ca:	f47f af25 	bne.w	403818 <__aeabi_dmul+0x234>
  4039ce:	4610      	mov	r0, r2
  4039d0:	4619      	mov	r1, r3
  4039d2:	e72c      	b.n	40382e <__aeabi_dmul+0x24a>
  4039d4:	ea95 0f0c 	teq	r5, ip
  4039d8:	d106      	bne.n	4039e8 <__aeabi_ddiv+0x1b0>
  4039da:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  4039de:	f43f aefd 	beq.w	4037dc <__aeabi_dmul+0x1f8>
  4039e2:	4610      	mov	r0, r2
  4039e4:	4619      	mov	r1, r3
  4039e6:	e722      	b.n	40382e <__aeabi_dmul+0x24a>
  4039e8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  4039ec:	bf18      	it	ne
  4039ee:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  4039f2:	f47f aec5 	bne.w	403780 <__aeabi_dmul+0x19c>
  4039f6:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  4039fa:	f47f af0d 	bne.w	403818 <__aeabi_dmul+0x234>
  4039fe:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  403a02:	f47f aeeb 	bne.w	4037dc <__aeabi_dmul+0x1f8>
  403a06:	e712      	b.n	40382e <__aeabi_dmul+0x24a>

00403a08 <__aeabi_d2f>:
  403a08:	ea4f 0241 	mov.w	r2, r1, lsl #1
  403a0c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
  403a10:	bf24      	itt	cs
  403a12:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
  403a16:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
  403a1a:	d90d      	bls.n	403a38 <__aeabi_d2f+0x30>
  403a1c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
  403a20:	ea4f 02c0 	mov.w	r2, r0, lsl #3
  403a24:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
  403a28:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
  403a2c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
  403a30:	bf08      	it	eq
  403a32:	f020 0001 	biceq.w	r0, r0, #1
  403a36:	4770      	bx	lr
  403a38:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
  403a3c:	d121      	bne.n	403a82 <__aeabi_d2f+0x7a>
  403a3e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
  403a42:	bfbc      	itt	lt
  403a44:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
  403a48:	4770      	bxlt	lr
  403a4a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  403a4e:	ea4f 5252 	mov.w	r2, r2, lsr #21
  403a52:	f1c2 0218 	rsb	r2, r2, #24
  403a56:	f1c2 0c20 	rsb	ip, r2, #32
  403a5a:	fa10 f30c 	lsls.w	r3, r0, ip
  403a5e:	fa20 f002 	lsr.w	r0, r0, r2
  403a62:	bf18      	it	ne
  403a64:	f040 0001 	orrne.w	r0, r0, #1
  403a68:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  403a6c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
  403a70:	fa03 fc0c 	lsl.w	ip, r3, ip
  403a74:	ea40 000c 	orr.w	r0, r0, ip
  403a78:	fa23 f302 	lsr.w	r3, r3, r2
  403a7c:	ea4f 0343 	mov.w	r3, r3, lsl #1
  403a80:	e7cc      	b.n	403a1c <__aeabi_d2f+0x14>
  403a82:	ea7f 5362 	mvns.w	r3, r2, asr #21
  403a86:	d107      	bne.n	403a98 <__aeabi_d2f+0x90>
  403a88:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
  403a8c:	bf1e      	ittt	ne
  403a8e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
  403a92:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
  403a96:	4770      	bxne	lr
  403a98:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
  403a9c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  403aa0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  403aa4:	4770      	bx	lr
  403aa6:	bf00      	nop

00403aa8 <__aeabi_frsub>:
  403aa8:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
  403aac:	e002      	b.n	403ab4 <__addsf3>
  403aae:	bf00      	nop

00403ab0 <__aeabi_fsub>:
  403ab0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

00403ab4 <__addsf3>:
  403ab4:	0042      	lsls	r2, r0, #1
  403ab6:	bf1f      	itttt	ne
  403ab8:	ea5f 0341 	movsne.w	r3, r1, lsl #1
  403abc:	ea92 0f03 	teqne	r2, r3
  403ac0:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
  403ac4:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
  403ac8:	d06a      	beq.n	403ba0 <__addsf3+0xec>
  403aca:	ea4f 6212 	mov.w	r2, r2, lsr #24
  403ace:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
  403ad2:	bfc1      	itttt	gt
  403ad4:	18d2      	addgt	r2, r2, r3
  403ad6:	4041      	eorgt	r1, r0
  403ad8:	4048      	eorgt	r0, r1
  403ada:	4041      	eorgt	r1, r0
  403adc:	bfb8      	it	lt
  403ade:	425b      	neglt	r3, r3
  403ae0:	2b19      	cmp	r3, #25
  403ae2:	bf88      	it	hi
  403ae4:	4770      	bxhi	lr
  403ae6:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
  403aea:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  403aee:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
  403af2:	bf18      	it	ne
  403af4:	4240      	negne	r0, r0
  403af6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  403afa:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
  403afe:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
  403b02:	bf18      	it	ne
  403b04:	4249      	negne	r1, r1
  403b06:	ea92 0f03 	teq	r2, r3
  403b0a:	d03f      	beq.n	403b8c <__addsf3+0xd8>
  403b0c:	f1a2 0201 	sub.w	r2, r2, #1
  403b10:	fa41 fc03 	asr.w	ip, r1, r3
  403b14:	eb10 000c 	adds.w	r0, r0, ip
  403b18:	f1c3 0320 	rsb	r3, r3, #32
  403b1c:	fa01 f103 	lsl.w	r1, r1, r3
  403b20:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
  403b24:	d502      	bpl.n	403b2c <__addsf3+0x78>
  403b26:	4249      	negs	r1, r1
  403b28:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
  403b2c:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
  403b30:	d313      	bcc.n	403b5a <__addsf3+0xa6>
  403b32:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
  403b36:	d306      	bcc.n	403b46 <__addsf3+0x92>
  403b38:	0840      	lsrs	r0, r0, #1
  403b3a:	ea4f 0131 	mov.w	r1, r1, rrx
  403b3e:	f102 0201 	add.w	r2, r2, #1
  403b42:	2afe      	cmp	r2, #254	; 0xfe
  403b44:	d251      	bcs.n	403bea <__addsf3+0x136>
  403b46:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
  403b4a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
  403b4e:	bf08      	it	eq
  403b50:	f020 0001 	biceq.w	r0, r0, #1
  403b54:	ea40 0003 	orr.w	r0, r0, r3
  403b58:	4770      	bx	lr
  403b5a:	0049      	lsls	r1, r1, #1
  403b5c:	eb40 0000 	adc.w	r0, r0, r0
  403b60:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
  403b64:	f1a2 0201 	sub.w	r2, r2, #1
  403b68:	d1ed      	bne.n	403b46 <__addsf3+0x92>
  403b6a:	fab0 fc80 	clz	ip, r0
  403b6e:	f1ac 0c08 	sub.w	ip, ip, #8
  403b72:	ebb2 020c 	subs.w	r2, r2, ip
  403b76:	fa00 f00c 	lsl.w	r0, r0, ip
  403b7a:	bfaa      	itet	ge
  403b7c:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
  403b80:	4252      	neglt	r2, r2
  403b82:	4318      	orrge	r0, r3
  403b84:	bfbc      	itt	lt
  403b86:	40d0      	lsrlt	r0, r2
  403b88:	4318      	orrlt	r0, r3
  403b8a:	4770      	bx	lr
  403b8c:	f092 0f00 	teq	r2, #0
  403b90:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
  403b94:	bf06      	itte	eq
  403b96:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
  403b9a:	3201      	addeq	r2, #1
  403b9c:	3b01      	subne	r3, #1
  403b9e:	e7b5      	b.n	403b0c <__addsf3+0x58>
  403ba0:	ea4f 0341 	mov.w	r3, r1, lsl #1
  403ba4:	ea7f 6c22 	mvns.w	ip, r2, asr #24
  403ba8:	bf18      	it	ne
  403baa:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
  403bae:	d021      	beq.n	403bf4 <__addsf3+0x140>
  403bb0:	ea92 0f03 	teq	r2, r3
  403bb4:	d004      	beq.n	403bc0 <__addsf3+0x10c>
  403bb6:	f092 0f00 	teq	r2, #0
  403bba:	bf08      	it	eq
  403bbc:	4608      	moveq	r0, r1
  403bbe:	4770      	bx	lr
  403bc0:	ea90 0f01 	teq	r0, r1
  403bc4:	bf1c      	itt	ne
  403bc6:	2000      	movne	r0, #0
  403bc8:	4770      	bxne	lr
  403bca:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
  403bce:	d104      	bne.n	403bda <__addsf3+0x126>
  403bd0:	0040      	lsls	r0, r0, #1
  403bd2:	bf28      	it	cs
  403bd4:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
  403bd8:	4770      	bx	lr
  403bda:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
  403bde:	bf3c      	itt	cc
  403be0:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
  403be4:	4770      	bxcc	lr
  403be6:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
  403bea:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
  403bee:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  403bf2:	4770      	bx	lr
  403bf4:	ea7f 6222 	mvns.w	r2, r2, asr #24
  403bf8:	bf16      	itet	ne
  403bfa:	4608      	movne	r0, r1
  403bfc:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
  403c00:	4601      	movne	r1, r0
  403c02:	0242      	lsls	r2, r0, #9
  403c04:	bf06      	itte	eq
  403c06:	ea5f 2341 	movseq.w	r3, r1, lsl #9
  403c0a:	ea90 0f01 	teqeq	r0, r1
  403c0e:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
  403c12:	4770      	bx	lr

00403c14 <__aeabi_ui2f>:
  403c14:	f04f 0300 	mov.w	r3, #0
  403c18:	e004      	b.n	403c24 <__aeabi_i2f+0x8>
  403c1a:	bf00      	nop

00403c1c <__aeabi_i2f>:
  403c1c:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
  403c20:	bf48      	it	mi
  403c22:	4240      	negmi	r0, r0
  403c24:	ea5f 0c00 	movs.w	ip, r0
  403c28:	bf08      	it	eq
  403c2a:	4770      	bxeq	lr
  403c2c:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
  403c30:	4601      	mov	r1, r0
  403c32:	f04f 0000 	mov.w	r0, #0
  403c36:	e01c      	b.n	403c72 <__aeabi_l2f+0x2a>

00403c38 <__aeabi_ul2f>:
  403c38:	ea50 0201 	orrs.w	r2, r0, r1
  403c3c:	bf08      	it	eq
  403c3e:	4770      	bxeq	lr
  403c40:	f04f 0300 	mov.w	r3, #0
  403c44:	e00a      	b.n	403c5c <__aeabi_l2f+0x14>
  403c46:	bf00      	nop

00403c48 <__aeabi_l2f>:
  403c48:	ea50 0201 	orrs.w	r2, r0, r1
  403c4c:	bf08      	it	eq
  403c4e:	4770      	bxeq	lr
  403c50:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
  403c54:	d502      	bpl.n	403c5c <__aeabi_l2f+0x14>
  403c56:	4240      	negs	r0, r0
  403c58:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  403c5c:	ea5f 0c01 	movs.w	ip, r1
  403c60:	bf02      	ittt	eq
  403c62:	4684      	moveq	ip, r0
  403c64:	4601      	moveq	r1, r0
  403c66:	2000      	moveq	r0, #0
  403c68:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
  403c6c:	bf08      	it	eq
  403c6e:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
  403c72:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
  403c76:	fabc f28c 	clz	r2, ip
  403c7a:	3a08      	subs	r2, #8
  403c7c:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
  403c80:	db10      	blt.n	403ca4 <__aeabi_l2f+0x5c>
  403c82:	fa01 fc02 	lsl.w	ip, r1, r2
  403c86:	4463      	add	r3, ip
  403c88:	fa00 fc02 	lsl.w	ip, r0, r2
  403c8c:	f1c2 0220 	rsb	r2, r2, #32
  403c90:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  403c94:	fa20 f202 	lsr.w	r2, r0, r2
  403c98:	eb43 0002 	adc.w	r0, r3, r2
  403c9c:	bf08      	it	eq
  403c9e:	f020 0001 	biceq.w	r0, r0, #1
  403ca2:	4770      	bx	lr
  403ca4:	f102 0220 	add.w	r2, r2, #32
  403ca8:	fa01 fc02 	lsl.w	ip, r1, r2
  403cac:	f1c2 0220 	rsb	r2, r2, #32
  403cb0:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
  403cb4:	fa21 f202 	lsr.w	r2, r1, r2
  403cb8:	eb43 0002 	adc.w	r0, r3, r2
  403cbc:	bf08      	it	eq
  403cbe:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
  403cc2:	4770      	bx	lr

00403cc4 <__aeabi_fmul>:
  403cc4:	f04f 0cff 	mov.w	ip, #255	; 0xff
  403cc8:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
  403ccc:	bf1e      	ittt	ne
  403cce:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
  403cd2:	ea92 0f0c 	teqne	r2, ip
  403cd6:	ea93 0f0c 	teqne	r3, ip
  403cda:	d06f      	beq.n	403dbc <__aeabi_fmul+0xf8>
  403cdc:	441a      	add	r2, r3
  403cde:	ea80 0c01 	eor.w	ip, r0, r1
  403ce2:	0240      	lsls	r0, r0, #9
  403ce4:	bf18      	it	ne
  403ce6:	ea5f 2141 	movsne.w	r1, r1, lsl #9
  403cea:	d01e      	beq.n	403d2a <__aeabi_fmul+0x66>
  403cec:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
  403cf0:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
  403cf4:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
  403cf8:	fba0 3101 	umull	r3, r1, r0, r1
  403cfc:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
  403d00:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
  403d04:	bf3e      	ittt	cc
  403d06:	0049      	lslcc	r1, r1, #1
  403d08:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
  403d0c:	005b      	lslcc	r3, r3, #1
  403d0e:	ea40 0001 	orr.w	r0, r0, r1
  403d12:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
  403d16:	2afd      	cmp	r2, #253	; 0xfd
  403d18:	d81d      	bhi.n	403d56 <__aeabi_fmul+0x92>
  403d1a:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
  403d1e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
  403d22:	bf08      	it	eq
  403d24:	f020 0001 	biceq.w	r0, r0, #1
  403d28:	4770      	bx	lr
  403d2a:	f090 0f00 	teq	r0, #0
  403d2e:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
  403d32:	bf08      	it	eq
  403d34:	0249      	lsleq	r1, r1, #9
  403d36:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
  403d3a:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
  403d3e:	3a7f      	subs	r2, #127	; 0x7f
  403d40:	bfc2      	ittt	gt
  403d42:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
  403d46:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
  403d4a:	4770      	bxgt	lr
  403d4c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  403d50:	f04f 0300 	mov.w	r3, #0
  403d54:	3a01      	subs	r2, #1
  403d56:	dc5d      	bgt.n	403e14 <__aeabi_fmul+0x150>
  403d58:	f112 0f19 	cmn.w	r2, #25
  403d5c:	bfdc      	itt	le
  403d5e:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
  403d62:	4770      	bxle	lr
  403d64:	f1c2 0200 	rsb	r2, r2, #0
  403d68:	0041      	lsls	r1, r0, #1
  403d6a:	fa21 f102 	lsr.w	r1, r1, r2
  403d6e:	f1c2 0220 	rsb	r2, r2, #32
  403d72:	fa00 fc02 	lsl.w	ip, r0, r2
  403d76:	ea5f 0031 	movs.w	r0, r1, rrx
  403d7a:	f140 0000 	adc.w	r0, r0, #0
  403d7e:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
  403d82:	bf08      	it	eq
  403d84:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
  403d88:	4770      	bx	lr
  403d8a:	f092 0f00 	teq	r2, #0
  403d8e:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
  403d92:	bf02      	ittt	eq
  403d94:	0040      	lsleq	r0, r0, #1
  403d96:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
  403d9a:	3a01      	subeq	r2, #1
  403d9c:	d0f9      	beq.n	403d92 <__aeabi_fmul+0xce>
  403d9e:	ea40 000c 	orr.w	r0, r0, ip
  403da2:	f093 0f00 	teq	r3, #0
  403da6:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
  403daa:	bf02      	ittt	eq
  403dac:	0049      	lsleq	r1, r1, #1
  403dae:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
  403db2:	3b01      	subeq	r3, #1
  403db4:	d0f9      	beq.n	403daa <__aeabi_fmul+0xe6>
  403db6:	ea41 010c 	orr.w	r1, r1, ip
  403dba:	e78f      	b.n	403cdc <__aeabi_fmul+0x18>
  403dbc:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
  403dc0:	ea92 0f0c 	teq	r2, ip
  403dc4:	bf18      	it	ne
  403dc6:	ea93 0f0c 	teqne	r3, ip
  403dca:	d00a      	beq.n	403de2 <__aeabi_fmul+0x11e>
  403dcc:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
  403dd0:	bf18      	it	ne
  403dd2:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
  403dd6:	d1d8      	bne.n	403d8a <__aeabi_fmul+0xc6>
  403dd8:	ea80 0001 	eor.w	r0, r0, r1
  403ddc:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
  403de0:	4770      	bx	lr
  403de2:	f090 0f00 	teq	r0, #0
  403de6:	bf17      	itett	ne
  403de8:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
  403dec:	4608      	moveq	r0, r1
  403dee:	f091 0f00 	teqne	r1, #0
  403df2:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
  403df6:	d014      	beq.n	403e22 <__aeabi_fmul+0x15e>
  403df8:	ea92 0f0c 	teq	r2, ip
  403dfc:	d101      	bne.n	403e02 <__aeabi_fmul+0x13e>
  403dfe:	0242      	lsls	r2, r0, #9
  403e00:	d10f      	bne.n	403e22 <__aeabi_fmul+0x15e>
  403e02:	ea93 0f0c 	teq	r3, ip
  403e06:	d103      	bne.n	403e10 <__aeabi_fmul+0x14c>
  403e08:	024b      	lsls	r3, r1, #9
  403e0a:	bf18      	it	ne
  403e0c:	4608      	movne	r0, r1
  403e0e:	d108      	bne.n	403e22 <__aeabi_fmul+0x15e>
  403e10:	ea80 0001 	eor.w	r0, r0, r1
  403e14:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
  403e18:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  403e1c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  403e20:	4770      	bx	lr
  403e22:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  403e26:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
  403e2a:	4770      	bx	lr

00403e2c <__aeabi_fdiv>:
  403e2c:	f04f 0cff 	mov.w	ip, #255	; 0xff
  403e30:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
  403e34:	bf1e      	ittt	ne
  403e36:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
  403e3a:	ea92 0f0c 	teqne	r2, ip
  403e3e:	ea93 0f0c 	teqne	r3, ip
  403e42:	d069      	beq.n	403f18 <__aeabi_fdiv+0xec>
  403e44:	eba2 0203 	sub.w	r2, r2, r3
  403e48:	ea80 0c01 	eor.w	ip, r0, r1
  403e4c:	0249      	lsls	r1, r1, #9
  403e4e:	ea4f 2040 	mov.w	r0, r0, lsl #9
  403e52:	d037      	beq.n	403ec4 <__aeabi_fdiv+0x98>
  403e54:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
  403e58:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
  403e5c:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
  403e60:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
  403e64:	428b      	cmp	r3, r1
  403e66:	bf38      	it	cc
  403e68:	005b      	lslcc	r3, r3, #1
  403e6a:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
  403e6e:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
  403e72:	428b      	cmp	r3, r1
  403e74:	bf24      	itt	cs
  403e76:	1a5b      	subcs	r3, r3, r1
  403e78:	ea40 000c 	orrcs.w	r0, r0, ip
  403e7c:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
  403e80:	bf24      	itt	cs
  403e82:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
  403e86:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  403e8a:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
  403e8e:	bf24      	itt	cs
  403e90:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
  403e94:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  403e98:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
  403e9c:	bf24      	itt	cs
  403e9e:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
  403ea2:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  403ea6:	011b      	lsls	r3, r3, #4
  403ea8:	bf18      	it	ne
  403eaa:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
  403eae:	d1e0      	bne.n	403e72 <__aeabi_fdiv+0x46>
  403eb0:	2afd      	cmp	r2, #253	; 0xfd
  403eb2:	f63f af50 	bhi.w	403d56 <__aeabi_fmul+0x92>
  403eb6:	428b      	cmp	r3, r1
  403eb8:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
  403ebc:	bf08      	it	eq
  403ebe:	f020 0001 	biceq.w	r0, r0, #1
  403ec2:	4770      	bx	lr
  403ec4:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
  403ec8:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
  403ecc:	327f      	adds	r2, #127	; 0x7f
  403ece:	bfc2      	ittt	gt
  403ed0:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
  403ed4:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
  403ed8:	4770      	bxgt	lr
  403eda:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  403ede:	f04f 0300 	mov.w	r3, #0
  403ee2:	3a01      	subs	r2, #1
  403ee4:	e737      	b.n	403d56 <__aeabi_fmul+0x92>
  403ee6:	f092 0f00 	teq	r2, #0
  403eea:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
  403eee:	bf02      	ittt	eq
  403ef0:	0040      	lsleq	r0, r0, #1
  403ef2:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
  403ef6:	3a01      	subeq	r2, #1
  403ef8:	d0f9      	beq.n	403eee <__aeabi_fdiv+0xc2>
  403efa:	ea40 000c 	orr.w	r0, r0, ip
  403efe:	f093 0f00 	teq	r3, #0
  403f02:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
  403f06:	bf02      	ittt	eq
  403f08:	0049      	lsleq	r1, r1, #1
  403f0a:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
  403f0e:	3b01      	subeq	r3, #1
  403f10:	d0f9      	beq.n	403f06 <__aeabi_fdiv+0xda>
  403f12:	ea41 010c 	orr.w	r1, r1, ip
  403f16:	e795      	b.n	403e44 <__aeabi_fdiv+0x18>
  403f18:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
  403f1c:	ea92 0f0c 	teq	r2, ip
  403f20:	d108      	bne.n	403f34 <__aeabi_fdiv+0x108>
  403f22:	0242      	lsls	r2, r0, #9
  403f24:	f47f af7d 	bne.w	403e22 <__aeabi_fmul+0x15e>
  403f28:	ea93 0f0c 	teq	r3, ip
  403f2c:	f47f af70 	bne.w	403e10 <__aeabi_fmul+0x14c>
  403f30:	4608      	mov	r0, r1
  403f32:	e776      	b.n	403e22 <__aeabi_fmul+0x15e>
  403f34:	ea93 0f0c 	teq	r3, ip
  403f38:	d104      	bne.n	403f44 <__aeabi_fdiv+0x118>
  403f3a:	024b      	lsls	r3, r1, #9
  403f3c:	f43f af4c 	beq.w	403dd8 <__aeabi_fmul+0x114>
  403f40:	4608      	mov	r0, r1
  403f42:	e76e      	b.n	403e22 <__aeabi_fmul+0x15e>
  403f44:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
  403f48:	bf18      	it	ne
  403f4a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
  403f4e:	d1ca      	bne.n	403ee6 <__aeabi_fdiv+0xba>
  403f50:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
  403f54:	f47f af5c 	bne.w	403e10 <__aeabi_fmul+0x14c>
  403f58:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
  403f5c:	f47f af3c 	bne.w	403dd8 <__aeabi_fmul+0x114>
  403f60:	e75f      	b.n	403e22 <__aeabi_fmul+0x15e>
  403f62:	bf00      	nop

00403f64 <__gesf2>:
  403f64:	f04f 3cff 	mov.w	ip, #4294967295
  403f68:	e006      	b.n	403f78 <__cmpsf2+0x4>
  403f6a:	bf00      	nop

00403f6c <__lesf2>:
  403f6c:	f04f 0c01 	mov.w	ip, #1
  403f70:	e002      	b.n	403f78 <__cmpsf2+0x4>
  403f72:	bf00      	nop

00403f74 <__cmpsf2>:
  403f74:	f04f 0c01 	mov.w	ip, #1
  403f78:	f84d cd04 	str.w	ip, [sp, #-4]!
  403f7c:	ea4f 0240 	mov.w	r2, r0, lsl #1
  403f80:	ea4f 0341 	mov.w	r3, r1, lsl #1
  403f84:	ea7f 6c22 	mvns.w	ip, r2, asr #24
  403f88:	bf18      	it	ne
  403f8a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
  403f8e:	d011      	beq.n	403fb4 <__cmpsf2+0x40>
  403f90:	b001      	add	sp, #4
  403f92:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
  403f96:	bf18      	it	ne
  403f98:	ea90 0f01 	teqne	r0, r1
  403f9c:	bf58      	it	pl
  403f9e:	ebb2 0003 	subspl.w	r0, r2, r3
  403fa2:	bf88      	it	hi
  403fa4:	17c8      	asrhi	r0, r1, #31
  403fa6:	bf38      	it	cc
  403fa8:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
  403fac:	bf18      	it	ne
  403fae:	f040 0001 	orrne.w	r0, r0, #1
  403fb2:	4770      	bx	lr
  403fb4:	ea7f 6c22 	mvns.w	ip, r2, asr #24
  403fb8:	d102      	bne.n	403fc0 <__cmpsf2+0x4c>
  403fba:	ea5f 2c40 	movs.w	ip, r0, lsl #9
  403fbe:	d105      	bne.n	403fcc <__cmpsf2+0x58>
  403fc0:	ea7f 6c23 	mvns.w	ip, r3, asr #24
  403fc4:	d1e4      	bne.n	403f90 <__cmpsf2+0x1c>
  403fc6:	ea5f 2c41 	movs.w	ip, r1, lsl #9
  403fca:	d0e1      	beq.n	403f90 <__cmpsf2+0x1c>
  403fcc:	f85d 0b04 	ldr.w	r0, [sp], #4
  403fd0:	4770      	bx	lr
  403fd2:	bf00      	nop

00403fd4 <__aeabi_cfrcmple>:
  403fd4:	4684      	mov	ip, r0
  403fd6:	4608      	mov	r0, r1
  403fd8:	4661      	mov	r1, ip
  403fda:	e7ff      	b.n	403fdc <__aeabi_cfcmpeq>

00403fdc <__aeabi_cfcmpeq>:
  403fdc:	b50f      	push	{r0, r1, r2, r3, lr}
  403fde:	f7ff ffc9 	bl	403f74 <__cmpsf2>
  403fe2:	2800      	cmp	r0, #0
  403fe4:	bf48      	it	mi
  403fe6:	f110 0f00 	cmnmi.w	r0, #0
  403fea:	bd0f      	pop	{r0, r1, r2, r3, pc}

00403fec <__aeabi_fcmpeq>:
  403fec:	f84d ed08 	str.w	lr, [sp, #-8]!
  403ff0:	f7ff fff4 	bl	403fdc <__aeabi_cfcmpeq>
  403ff4:	bf0c      	ite	eq
  403ff6:	2001      	moveq	r0, #1
  403ff8:	2000      	movne	r0, #0
  403ffa:	f85d fb08 	ldr.w	pc, [sp], #8
  403ffe:	bf00      	nop

00404000 <__aeabi_fcmplt>:
  404000:	f84d ed08 	str.w	lr, [sp, #-8]!
  404004:	f7ff ffea 	bl	403fdc <__aeabi_cfcmpeq>
  404008:	bf34      	ite	cc
  40400a:	2001      	movcc	r0, #1
  40400c:	2000      	movcs	r0, #0
  40400e:	f85d fb08 	ldr.w	pc, [sp], #8
  404012:	bf00      	nop

00404014 <__aeabi_fcmple>:
  404014:	f84d ed08 	str.w	lr, [sp, #-8]!
  404018:	f7ff ffe0 	bl	403fdc <__aeabi_cfcmpeq>
  40401c:	bf94      	ite	ls
  40401e:	2001      	movls	r0, #1
  404020:	2000      	movhi	r0, #0
  404022:	f85d fb08 	ldr.w	pc, [sp], #8
  404026:	bf00      	nop

00404028 <__aeabi_fcmpge>:
  404028:	f84d ed08 	str.w	lr, [sp, #-8]!
  40402c:	f7ff ffd2 	bl	403fd4 <__aeabi_cfrcmple>
  404030:	bf94      	ite	ls
  404032:	2001      	movls	r0, #1
  404034:	2000      	movhi	r0, #0
  404036:	f85d fb08 	ldr.w	pc, [sp], #8
  40403a:	bf00      	nop

0040403c <__aeabi_fcmpgt>:
  40403c:	f84d ed08 	str.w	lr, [sp, #-8]!
  404040:	f7ff ffc8 	bl	403fd4 <__aeabi_cfrcmple>
  404044:	bf34      	ite	cc
  404046:	2001      	movcc	r0, #1
  404048:	2000      	movcs	r0, #0
  40404a:	f85d fb08 	ldr.w	pc, [sp], #8
  40404e:	bf00      	nop

00404050 <__aeabi_f2iz>:
  404050:	ea4f 0240 	mov.w	r2, r0, lsl #1
  404054:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
  404058:	d30f      	bcc.n	40407a <__aeabi_f2iz+0x2a>
  40405a:	f04f 039e 	mov.w	r3, #158	; 0x9e
  40405e:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
  404062:	d90d      	bls.n	404080 <__aeabi_f2iz+0x30>
  404064:	ea4f 2300 	mov.w	r3, r0, lsl #8
  404068:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  40406c:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
  404070:	fa23 f002 	lsr.w	r0, r3, r2
  404074:	bf18      	it	ne
  404076:	4240      	negne	r0, r0
  404078:	4770      	bx	lr
  40407a:	f04f 0000 	mov.w	r0, #0
  40407e:	4770      	bx	lr
  404080:	f112 0f61 	cmn.w	r2, #97	; 0x61
  404084:	d101      	bne.n	40408a <__aeabi_f2iz+0x3a>
  404086:	0242      	lsls	r2, r0, #9
  404088:	d105      	bne.n	404096 <__aeabi_f2iz+0x46>
  40408a:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
  40408e:	bf08      	it	eq
  404090:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  404094:	4770      	bx	lr
  404096:	f04f 0000 	mov.w	r0, #0
  40409a:	4770      	bx	lr

0040409c <__aeabi_uldivmod>:
  40409c:	b953      	cbnz	r3, 4040b4 <__aeabi_uldivmod+0x18>
  40409e:	b94a      	cbnz	r2, 4040b4 <__aeabi_uldivmod+0x18>
  4040a0:	2900      	cmp	r1, #0
  4040a2:	bf08      	it	eq
  4040a4:	2800      	cmpeq	r0, #0
  4040a6:	bf1c      	itt	ne
  4040a8:	f04f 31ff 	movne.w	r1, #4294967295
  4040ac:	f04f 30ff 	movne.w	r0, #4294967295
  4040b0:	f000 b97a 	b.w	4043a8 <__aeabi_idiv0>
  4040b4:	f1ad 0c08 	sub.w	ip, sp, #8
  4040b8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  4040bc:	f000 f806 	bl	4040cc <__udivmoddi4>
  4040c0:	f8dd e004 	ldr.w	lr, [sp, #4]
  4040c4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  4040c8:	b004      	add	sp, #16
  4040ca:	4770      	bx	lr

004040cc <__udivmoddi4>:
  4040cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4040d0:	468c      	mov	ip, r1
  4040d2:	460d      	mov	r5, r1
  4040d4:	4604      	mov	r4, r0
  4040d6:	9e08      	ldr	r6, [sp, #32]
  4040d8:	2b00      	cmp	r3, #0
  4040da:	d151      	bne.n	404180 <__udivmoddi4+0xb4>
  4040dc:	428a      	cmp	r2, r1
  4040de:	4617      	mov	r7, r2
  4040e0:	d96d      	bls.n	4041be <__udivmoddi4+0xf2>
  4040e2:	fab2 fe82 	clz	lr, r2
  4040e6:	f1be 0f00 	cmp.w	lr, #0
  4040ea:	d00b      	beq.n	404104 <__udivmoddi4+0x38>
  4040ec:	f1ce 0c20 	rsb	ip, lr, #32
  4040f0:	fa01 f50e 	lsl.w	r5, r1, lr
  4040f4:	fa20 fc0c 	lsr.w	ip, r0, ip
  4040f8:	fa02 f70e 	lsl.w	r7, r2, lr
  4040fc:	ea4c 0c05 	orr.w	ip, ip, r5
  404100:	fa00 f40e 	lsl.w	r4, r0, lr
  404104:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  404108:	0c25      	lsrs	r5, r4, #16
  40410a:	fbbc f8fa 	udiv	r8, ip, sl
  40410e:	fa1f f987 	uxth.w	r9, r7
  404112:	fb0a cc18 	mls	ip, sl, r8, ip
  404116:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  40411a:	fb08 f309 	mul.w	r3, r8, r9
  40411e:	42ab      	cmp	r3, r5
  404120:	d90a      	bls.n	404138 <__udivmoddi4+0x6c>
  404122:	19ed      	adds	r5, r5, r7
  404124:	f108 32ff 	add.w	r2, r8, #4294967295
  404128:	f080 8123 	bcs.w	404372 <__udivmoddi4+0x2a6>
  40412c:	42ab      	cmp	r3, r5
  40412e:	f240 8120 	bls.w	404372 <__udivmoddi4+0x2a6>
  404132:	f1a8 0802 	sub.w	r8, r8, #2
  404136:	443d      	add	r5, r7
  404138:	1aed      	subs	r5, r5, r3
  40413a:	b2a4      	uxth	r4, r4
  40413c:	fbb5 f0fa 	udiv	r0, r5, sl
  404140:	fb0a 5510 	mls	r5, sl, r0, r5
  404144:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  404148:	fb00 f909 	mul.w	r9, r0, r9
  40414c:	45a1      	cmp	r9, r4
  40414e:	d909      	bls.n	404164 <__udivmoddi4+0x98>
  404150:	19e4      	adds	r4, r4, r7
  404152:	f100 33ff 	add.w	r3, r0, #4294967295
  404156:	f080 810a 	bcs.w	40436e <__udivmoddi4+0x2a2>
  40415a:	45a1      	cmp	r9, r4
  40415c:	f240 8107 	bls.w	40436e <__udivmoddi4+0x2a2>
  404160:	3802      	subs	r0, #2
  404162:	443c      	add	r4, r7
  404164:	eba4 0409 	sub.w	r4, r4, r9
  404168:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  40416c:	2100      	movs	r1, #0
  40416e:	2e00      	cmp	r6, #0
  404170:	d061      	beq.n	404236 <__udivmoddi4+0x16a>
  404172:	fa24 f40e 	lsr.w	r4, r4, lr
  404176:	2300      	movs	r3, #0
  404178:	6034      	str	r4, [r6, #0]
  40417a:	6073      	str	r3, [r6, #4]
  40417c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  404180:	428b      	cmp	r3, r1
  404182:	d907      	bls.n	404194 <__udivmoddi4+0xc8>
  404184:	2e00      	cmp	r6, #0
  404186:	d054      	beq.n	404232 <__udivmoddi4+0x166>
  404188:	2100      	movs	r1, #0
  40418a:	e886 0021 	stmia.w	r6, {r0, r5}
  40418e:	4608      	mov	r0, r1
  404190:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  404194:	fab3 f183 	clz	r1, r3
  404198:	2900      	cmp	r1, #0
  40419a:	f040 808e 	bne.w	4042ba <__udivmoddi4+0x1ee>
  40419e:	42ab      	cmp	r3, r5
  4041a0:	d302      	bcc.n	4041a8 <__udivmoddi4+0xdc>
  4041a2:	4282      	cmp	r2, r0
  4041a4:	f200 80fa 	bhi.w	40439c <__udivmoddi4+0x2d0>
  4041a8:	1a84      	subs	r4, r0, r2
  4041aa:	eb65 0503 	sbc.w	r5, r5, r3
  4041ae:	2001      	movs	r0, #1
  4041b0:	46ac      	mov	ip, r5
  4041b2:	2e00      	cmp	r6, #0
  4041b4:	d03f      	beq.n	404236 <__udivmoddi4+0x16a>
  4041b6:	e886 1010 	stmia.w	r6, {r4, ip}
  4041ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4041be:	b912      	cbnz	r2, 4041c6 <__udivmoddi4+0xfa>
  4041c0:	2701      	movs	r7, #1
  4041c2:	fbb7 f7f2 	udiv	r7, r7, r2
  4041c6:	fab7 fe87 	clz	lr, r7
  4041ca:	f1be 0f00 	cmp.w	lr, #0
  4041ce:	d134      	bne.n	40423a <__udivmoddi4+0x16e>
  4041d0:	1beb      	subs	r3, r5, r7
  4041d2:	0c3a      	lsrs	r2, r7, #16
  4041d4:	fa1f fc87 	uxth.w	ip, r7
  4041d8:	2101      	movs	r1, #1
  4041da:	fbb3 f8f2 	udiv	r8, r3, r2
  4041de:	0c25      	lsrs	r5, r4, #16
  4041e0:	fb02 3318 	mls	r3, r2, r8, r3
  4041e4:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  4041e8:	fb0c f308 	mul.w	r3, ip, r8
  4041ec:	42ab      	cmp	r3, r5
  4041ee:	d907      	bls.n	404200 <__udivmoddi4+0x134>
  4041f0:	19ed      	adds	r5, r5, r7
  4041f2:	f108 30ff 	add.w	r0, r8, #4294967295
  4041f6:	d202      	bcs.n	4041fe <__udivmoddi4+0x132>
  4041f8:	42ab      	cmp	r3, r5
  4041fa:	f200 80d1 	bhi.w	4043a0 <__udivmoddi4+0x2d4>
  4041fe:	4680      	mov	r8, r0
  404200:	1aed      	subs	r5, r5, r3
  404202:	b2a3      	uxth	r3, r4
  404204:	fbb5 f0f2 	udiv	r0, r5, r2
  404208:	fb02 5510 	mls	r5, r2, r0, r5
  40420c:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  404210:	fb0c fc00 	mul.w	ip, ip, r0
  404214:	45a4      	cmp	ip, r4
  404216:	d907      	bls.n	404228 <__udivmoddi4+0x15c>
  404218:	19e4      	adds	r4, r4, r7
  40421a:	f100 33ff 	add.w	r3, r0, #4294967295
  40421e:	d202      	bcs.n	404226 <__udivmoddi4+0x15a>
  404220:	45a4      	cmp	ip, r4
  404222:	f200 80b8 	bhi.w	404396 <__udivmoddi4+0x2ca>
  404226:	4618      	mov	r0, r3
  404228:	eba4 040c 	sub.w	r4, r4, ip
  40422c:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  404230:	e79d      	b.n	40416e <__udivmoddi4+0xa2>
  404232:	4631      	mov	r1, r6
  404234:	4630      	mov	r0, r6
  404236:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40423a:	f1ce 0420 	rsb	r4, lr, #32
  40423e:	fa05 f30e 	lsl.w	r3, r5, lr
  404242:	fa07 f70e 	lsl.w	r7, r7, lr
  404246:	fa20 f804 	lsr.w	r8, r0, r4
  40424a:	0c3a      	lsrs	r2, r7, #16
  40424c:	fa25 f404 	lsr.w	r4, r5, r4
  404250:	ea48 0803 	orr.w	r8, r8, r3
  404254:	fbb4 f1f2 	udiv	r1, r4, r2
  404258:	ea4f 4518 	mov.w	r5, r8, lsr #16
  40425c:	fb02 4411 	mls	r4, r2, r1, r4
  404260:	fa1f fc87 	uxth.w	ip, r7
  404264:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  404268:	fb01 f30c 	mul.w	r3, r1, ip
  40426c:	42ab      	cmp	r3, r5
  40426e:	fa00 f40e 	lsl.w	r4, r0, lr
  404272:	d909      	bls.n	404288 <__udivmoddi4+0x1bc>
  404274:	19ed      	adds	r5, r5, r7
  404276:	f101 30ff 	add.w	r0, r1, #4294967295
  40427a:	f080 808a 	bcs.w	404392 <__udivmoddi4+0x2c6>
  40427e:	42ab      	cmp	r3, r5
  404280:	f240 8087 	bls.w	404392 <__udivmoddi4+0x2c6>
  404284:	3902      	subs	r1, #2
  404286:	443d      	add	r5, r7
  404288:	1aeb      	subs	r3, r5, r3
  40428a:	fa1f f588 	uxth.w	r5, r8
  40428e:	fbb3 f0f2 	udiv	r0, r3, r2
  404292:	fb02 3310 	mls	r3, r2, r0, r3
  404296:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  40429a:	fb00 f30c 	mul.w	r3, r0, ip
  40429e:	42ab      	cmp	r3, r5
  4042a0:	d907      	bls.n	4042b2 <__udivmoddi4+0x1e6>
  4042a2:	19ed      	adds	r5, r5, r7
  4042a4:	f100 38ff 	add.w	r8, r0, #4294967295
  4042a8:	d26f      	bcs.n	40438a <__udivmoddi4+0x2be>
  4042aa:	42ab      	cmp	r3, r5
  4042ac:	d96d      	bls.n	40438a <__udivmoddi4+0x2be>
  4042ae:	3802      	subs	r0, #2
  4042b0:	443d      	add	r5, r7
  4042b2:	1aeb      	subs	r3, r5, r3
  4042b4:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  4042b8:	e78f      	b.n	4041da <__udivmoddi4+0x10e>
  4042ba:	f1c1 0720 	rsb	r7, r1, #32
  4042be:	fa22 f807 	lsr.w	r8, r2, r7
  4042c2:	408b      	lsls	r3, r1
  4042c4:	fa05 f401 	lsl.w	r4, r5, r1
  4042c8:	ea48 0303 	orr.w	r3, r8, r3
  4042cc:	fa20 fe07 	lsr.w	lr, r0, r7
  4042d0:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  4042d4:	40fd      	lsrs	r5, r7
  4042d6:	ea4e 0e04 	orr.w	lr, lr, r4
  4042da:	fbb5 f9fc 	udiv	r9, r5, ip
  4042de:	ea4f 441e 	mov.w	r4, lr, lsr #16
  4042e2:	fb0c 5519 	mls	r5, ip, r9, r5
  4042e6:	fa1f f883 	uxth.w	r8, r3
  4042ea:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  4042ee:	fb09 f408 	mul.w	r4, r9, r8
  4042f2:	42ac      	cmp	r4, r5
  4042f4:	fa02 f201 	lsl.w	r2, r2, r1
  4042f8:	fa00 fa01 	lsl.w	sl, r0, r1
  4042fc:	d908      	bls.n	404310 <__udivmoddi4+0x244>
  4042fe:	18ed      	adds	r5, r5, r3
  404300:	f109 30ff 	add.w	r0, r9, #4294967295
  404304:	d243      	bcs.n	40438e <__udivmoddi4+0x2c2>
  404306:	42ac      	cmp	r4, r5
  404308:	d941      	bls.n	40438e <__udivmoddi4+0x2c2>
  40430a:	f1a9 0902 	sub.w	r9, r9, #2
  40430e:	441d      	add	r5, r3
  404310:	1b2d      	subs	r5, r5, r4
  404312:	fa1f fe8e 	uxth.w	lr, lr
  404316:	fbb5 f0fc 	udiv	r0, r5, ip
  40431a:	fb0c 5510 	mls	r5, ip, r0, r5
  40431e:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  404322:	fb00 f808 	mul.w	r8, r0, r8
  404326:	45a0      	cmp	r8, r4
  404328:	d907      	bls.n	40433a <__udivmoddi4+0x26e>
  40432a:	18e4      	adds	r4, r4, r3
  40432c:	f100 35ff 	add.w	r5, r0, #4294967295
  404330:	d229      	bcs.n	404386 <__udivmoddi4+0x2ba>
  404332:	45a0      	cmp	r8, r4
  404334:	d927      	bls.n	404386 <__udivmoddi4+0x2ba>
  404336:	3802      	subs	r0, #2
  404338:	441c      	add	r4, r3
  40433a:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  40433e:	eba4 0408 	sub.w	r4, r4, r8
  404342:	fba0 8902 	umull	r8, r9, r0, r2
  404346:	454c      	cmp	r4, r9
  404348:	46c6      	mov	lr, r8
  40434a:	464d      	mov	r5, r9
  40434c:	d315      	bcc.n	40437a <__udivmoddi4+0x2ae>
  40434e:	d012      	beq.n	404376 <__udivmoddi4+0x2aa>
  404350:	b156      	cbz	r6, 404368 <__udivmoddi4+0x29c>
  404352:	ebba 030e 	subs.w	r3, sl, lr
  404356:	eb64 0405 	sbc.w	r4, r4, r5
  40435a:	fa04 f707 	lsl.w	r7, r4, r7
  40435e:	40cb      	lsrs	r3, r1
  404360:	431f      	orrs	r7, r3
  404362:	40cc      	lsrs	r4, r1
  404364:	6037      	str	r7, [r6, #0]
  404366:	6074      	str	r4, [r6, #4]
  404368:	2100      	movs	r1, #0
  40436a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40436e:	4618      	mov	r0, r3
  404370:	e6f8      	b.n	404164 <__udivmoddi4+0x98>
  404372:	4690      	mov	r8, r2
  404374:	e6e0      	b.n	404138 <__udivmoddi4+0x6c>
  404376:	45c2      	cmp	sl, r8
  404378:	d2ea      	bcs.n	404350 <__udivmoddi4+0x284>
  40437a:	ebb8 0e02 	subs.w	lr, r8, r2
  40437e:	eb69 0503 	sbc.w	r5, r9, r3
  404382:	3801      	subs	r0, #1
  404384:	e7e4      	b.n	404350 <__udivmoddi4+0x284>
  404386:	4628      	mov	r0, r5
  404388:	e7d7      	b.n	40433a <__udivmoddi4+0x26e>
  40438a:	4640      	mov	r0, r8
  40438c:	e791      	b.n	4042b2 <__udivmoddi4+0x1e6>
  40438e:	4681      	mov	r9, r0
  404390:	e7be      	b.n	404310 <__udivmoddi4+0x244>
  404392:	4601      	mov	r1, r0
  404394:	e778      	b.n	404288 <__udivmoddi4+0x1bc>
  404396:	3802      	subs	r0, #2
  404398:	443c      	add	r4, r7
  40439a:	e745      	b.n	404228 <__udivmoddi4+0x15c>
  40439c:	4608      	mov	r0, r1
  40439e:	e708      	b.n	4041b2 <__udivmoddi4+0xe6>
  4043a0:	f1a8 0802 	sub.w	r8, r8, #2
  4043a4:	443d      	add	r5, r7
  4043a6:	e72b      	b.n	404200 <__udivmoddi4+0x134>

004043a8 <__aeabi_idiv0>:
  4043a8:	4770      	bx	lr
  4043aa:	bf00      	nop

004043ac <__libc_init_array>:
  4043ac:	b570      	push	{r4, r5, r6, lr}
  4043ae:	4e0f      	ldr	r6, [pc, #60]	; (4043ec <__libc_init_array+0x40>)
  4043b0:	4d0f      	ldr	r5, [pc, #60]	; (4043f0 <__libc_init_array+0x44>)
  4043b2:	1b76      	subs	r6, r6, r5
  4043b4:	10b6      	asrs	r6, r6, #2
  4043b6:	bf18      	it	ne
  4043b8:	2400      	movne	r4, #0
  4043ba:	d005      	beq.n	4043c8 <__libc_init_array+0x1c>
  4043bc:	3401      	adds	r4, #1
  4043be:	f855 3b04 	ldr.w	r3, [r5], #4
  4043c2:	4798      	blx	r3
  4043c4:	42a6      	cmp	r6, r4
  4043c6:	d1f9      	bne.n	4043bc <__libc_init_array+0x10>
  4043c8:	4e0a      	ldr	r6, [pc, #40]	; (4043f4 <__libc_init_array+0x48>)
  4043ca:	4d0b      	ldr	r5, [pc, #44]	; (4043f8 <__libc_init_array+0x4c>)
  4043cc:	1b76      	subs	r6, r6, r5
  4043ce:	f004 fe17 	bl	409000 <_init>
  4043d2:	10b6      	asrs	r6, r6, #2
  4043d4:	bf18      	it	ne
  4043d6:	2400      	movne	r4, #0
  4043d8:	d006      	beq.n	4043e8 <__libc_init_array+0x3c>
  4043da:	3401      	adds	r4, #1
  4043dc:	f855 3b04 	ldr.w	r3, [r5], #4
  4043e0:	4798      	blx	r3
  4043e2:	42a6      	cmp	r6, r4
  4043e4:	d1f9      	bne.n	4043da <__libc_init_array+0x2e>
  4043e6:	bd70      	pop	{r4, r5, r6, pc}
  4043e8:	bd70      	pop	{r4, r5, r6, pc}
  4043ea:	bf00      	nop
  4043ec:	0040900c 	.word	0x0040900c
  4043f0:	0040900c 	.word	0x0040900c
  4043f4:	00409014 	.word	0x00409014
  4043f8:	0040900c 	.word	0x0040900c

004043fc <memset>:
  4043fc:	b470      	push	{r4, r5, r6}
  4043fe:	0786      	lsls	r6, r0, #30
  404400:	d046      	beq.n	404490 <memset+0x94>
  404402:	1e54      	subs	r4, r2, #1
  404404:	2a00      	cmp	r2, #0
  404406:	d041      	beq.n	40448c <memset+0x90>
  404408:	b2ca      	uxtb	r2, r1
  40440a:	4603      	mov	r3, r0
  40440c:	e002      	b.n	404414 <memset+0x18>
  40440e:	f114 34ff 	adds.w	r4, r4, #4294967295
  404412:	d33b      	bcc.n	40448c <memset+0x90>
  404414:	f803 2b01 	strb.w	r2, [r3], #1
  404418:	079d      	lsls	r5, r3, #30
  40441a:	d1f8      	bne.n	40440e <memset+0x12>
  40441c:	2c03      	cmp	r4, #3
  40441e:	d92e      	bls.n	40447e <memset+0x82>
  404420:	b2cd      	uxtb	r5, r1
  404422:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  404426:	2c0f      	cmp	r4, #15
  404428:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  40442c:	d919      	bls.n	404462 <memset+0x66>
  40442e:	f103 0210 	add.w	r2, r3, #16
  404432:	4626      	mov	r6, r4
  404434:	3e10      	subs	r6, #16
  404436:	2e0f      	cmp	r6, #15
  404438:	f842 5c10 	str.w	r5, [r2, #-16]
  40443c:	f842 5c0c 	str.w	r5, [r2, #-12]
  404440:	f842 5c08 	str.w	r5, [r2, #-8]
  404444:	f842 5c04 	str.w	r5, [r2, #-4]
  404448:	f102 0210 	add.w	r2, r2, #16
  40444c:	d8f2      	bhi.n	404434 <memset+0x38>
  40444e:	f1a4 0210 	sub.w	r2, r4, #16
  404452:	f022 020f 	bic.w	r2, r2, #15
  404456:	f004 040f 	and.w	r4, r4, #15
  40445a:	3210      	adds	r2, #16
  40445c:	2c03      	cmp	r4, #3
  40445e:	4413      	add	r3, r2
  404460:	d90d      	bls.n	40447e <memset+0x82>
  404462:	461e      	mov	r6, r3
  404464:	4622      	mov	r2, r4
  404466:	3a04      	subs	r2, #4
  404468:	2a03      	cmp	r2, #3
  40446a:	f846 5b04 	str.w	r5, [r6], #4
  40446e:	d8fa      	bhi.n	404466 <memset+0x6a>
  404470:	1f22      	subs	r2, r4, #4
  404472:	f022 0203 	bic.w	r2, r2, #3
  404476:	3204      	adds	r2, #4
  404478:	4413      	add	r3, r2
  40447a:	f004 0403 	and.w	r4, r4, #3
  40447e:	b12c      	cbz	r4, 40448c <memset+0x90>
  404480:	b2c9      	uxtb	r1, r1
  404482:	441c      	add	r4, r3
  404484:	f803 1b01 	strb.w	r1, [r3], #1
  404488:	429c      	cmp	r4, r3
  40448a:	d1fb      	bne.n	404484 <memset+0x88>
  40448c:	bc70      	pop	{r4, r5, r6}
  40448e:	4770      	bx	lr
  404490:	4614      	mov	r4, r2
  404492:	4603      	mov	r3, r0
  404494:	e7c2      	b.n	40441c <memset+0x20>
  404496:	bf00      	nop

00404498 <sprintf>:
  404498:	b40e      	push	{r1, r2, r3}
  40449a:	b5f0      	push	{r4, r5, r6, r7, lr}
  40449c:	b09c      	sub	sp, #112	; 0x70
  40449e:	ab21      	add	r3, sp, #132	; 0x84
  4044a0:	490f      	ldr	r1, [pc, #60]	; (4044e0 <sprintf+0x48>)
  4044a2:	f853 2b04 	ldr.w	r2, [r3], #4
  4044a6:	9301      	str	r3, [sp, #4]
  4044a8:	4605      	mov	r5, r0
  4044aa:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  4044ae:	6808      	ldr	r0, [r1, #0]
  4044b0:	9502      	str	r5, [sp, #8]
  4044b2:	f44f 7702 	mov.w	r7, #520	; 0x208
  4044b6:	f64f 76ff 	movw	r6, #65535	; 0xffff
  4044ba:	a902      	add	r1, sp, #8
  4044bc:	9506      	str	r5, [sp, #24]
  4044be:	f8ad 7014 	strh.w	r7, [sp, #20]
  4044c2:	9404      	str	r4, [sp, #16]
  4044c4:	9407      	str	r4, [sp, #28]
  4044c6:	f8ad 6016 	strh.w	r6, [sp, #22]
  4044ca:	f000 fa6f 	bl	4049ac <_svfprintf_r>
  4044ce:	9b02      	ldr	r3, [sp, #8]
  4044d0:	2200      	movs	r2, #0
  4044d2:	701a      	strb	r2, [r3, #0]
  4044d4:	b01c      	add	sp, #112	; 0x70
  4044d6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  4044da:	b003      	add	sp, #12
  4044dc:	4770      	bx	lr
  4044de:	bf00      	nop
  4044e0:	20000010 	.word	0x20000010

004044e4 <critical_factorization>:
  4044e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4044e8:	f04f 0e01 	mov.w	lr, #1
  4044ec:	4674      	mov	r4, lr
  4044ee:	2500      	movs	r5, #0
  4044f0:	f04f 36ff 	mov.w	r6, #4294967295
  4044f4:	192b      	adds	r3, r5, r4
  4044f6:	428b      	cmp	r3, r1
  4044f8:	eb00 0706 	add.w	r7, r0, r6
  4044fc:	d20d      	bcs.n	40451a <critical_factorization+0x36>
  4044fe:	5d3f      	ldrb	r7, [r7, r4]
  404500:	f810 c003 	ldrb.w	ip, [r0, r3]
  404504:	45bc      	cmp	ip, r7
  404506:	d22d      	bcs.n	404564 <critical_factorization+0x80>
  404508:	461d      	mov	r5, r3
  40450a:	2401      	movs	r4, #1
  40450c:	eba3 0e06 	sub.w	lr, r3, r6
  404510:	192b      	adds	r3, r5, r4
  404512:	428b      	cmp	r3, r1
  404514:	eb00 0706 	add.w	r7, r0, r6
  404518:	d3f1      	bcc.n	4044fe <critical_factorization+0x1a>
  40451a:	f04f 0801 	mov.w	r8, #1
  40451e:	f8c2 e000 	str.w	lr, [r2]
  404522:	4644      	mov	r4, r8
  404524:	2500      	movs	r5, #0
  404526:	f04f 37ff 	mov.w	r7, #4294967295
  40452a:	192b      	adds	r3, r5, r4
  40452c:	4299      	cmp	r1, r3
  40452e:	eb00 0e07 	add.w	lr, r0, r7
  404532:	d90e      	bls.n	404552 <critical_factorization+0x6e>
  404534:	f81e e004 	ldrb.w	lr, [lr, r4]
  404538:	f810 c003 	ldrb.w	ip, [r0, r3]
  40453c:	45f4      	cmp	ip, lr
  40453e:	d918      	bls.n	404572 <critical_factorization+0x8e>
  404540:	461d      	mov	r5, r3
  404542:	2401      	movs	r4, #1
  404544:	eba3 0807 	sub.w	r8, r3, r7
  404548:	192b      	adds	r3, r5, r4
  40454a:	4299      	cmp	r1, r3
  40454c:	eb00 0e07 	add.w	lr, r0, r7
  404550:	d8f0      	bhi.n	404534 <critical_factorization+0x50>
  404552:	3701      	adds	r7, #1
  404554:	1c70      	adds	r0, r6, #1
  404556:	4287      	cmp	r7, r0
  404558:	bf24      	itt	cs
  40455a:	f8c2 8000 	strcs.w	r8, [r2]
  40455e:	4638      	movcs	r0, r7
  404560:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404564:	d00c      	beq.n	404580 <critical_factorization+0x9c>
  404566:	f04f 0e01 	mov.w	lr, #1
  40456a:	462e      	mov	r6, r5
  40456c:	4674      	mov	r4, lr
  40456e:	4475      	add	r5, lr
  404570:	e7c0      	b.n	4044f4 <critical_factorization+0x10>
  404572:	d00b      	beq.n	40458c <critical_factorization+0xa8>
  404574:	f04f 0801 	mov.w	r8, #1
  404578:	462f      	mov	r7, r5
  40457a:	4644      	mov	r4, r8
  40457c:	4445      	add	r5, r8
  40457e:	e7d4      	b.n	40452a <critical_factorization+0x46>
  404580:	4574      	cmp	r4, lr
  404582:	bf12      	itee	ne
  404584:	3401      	addne	r4, #1
  404586:	461d      	moveq	r5, r3
  404588:	2401      	moveq	r4, #1
  40458a:	e7b3      	b.n	4044f4 <critical_factorization+0x10>
  40458c:	4544      	cmp	r4, r8
  40458e:	bf12      	itee	ne
  404590:	3401      	addne	r4, #1
  404592:	461d      	moveq	r5, r3
  404594:	2401      	moveq	r4, #1
  404596:	e7c8      	b.n	40452a <critical_factorization+0x46>

00404598 <two_way_long_needle>:
  404598:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40459c:	f2ad 4d14 	subw	sp, sp, #1044	; 0x414
  4045a0:	4616      	mov	r6, r2
  4045a2:	4605      	mov	r5, r0
  4045a4:	468b      	mov	fp, r1
  4045a6:	4610      	mov	r0, r2
  4045a8:	4619      	mov	r1, r3
  4045aa:	aa03      	add	r2, sp, #12
  4045ac:	461c      	mov	r4, r3
  4045ae:	f7ff ff99 	bl	4044e4 <critical_factorization>
  4045b2:	ab03      	add	r3, sp, #12
  4045b4:	4681      	mov	r9, r0
  4045b6:	f20d 420c 	addw	r2, sp, #1036	; 0x40c
  4045ba:	f843 4f04 	str.w	r4, [r3, #4]!
  4045be:	4293      	cmp	r3, r2
  4045c0:	d1fb      	bne.n	4045ba <two_way_long_needle+0x22>
  4045c2:	b14c      	cbz	r4, 4045d8 <two_way_long_needle+0x40>
  4045c4:	1e63      	subs	r3, r4, #1
  4045c6:	1e72      	subs	r2, r6, #1
  4045c8:	a804      	add	r0, sp, #16
  4045ca:	f812 1f01 	ldrb.w	r1, [r2, #1]!
  4045ce:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
  4045d2:	f113 33ff 	adds.w	r3, r3, #4294967295
  4045d6:	d2f8      	bcs.n	4045ca <two_way_long_needle+0x32>
  4045d8:	9903      	ldr	r1, [sp, #12]
  4045da:	464a      	mov	r2, r9
  4045dc:	4431      	add	r1, r6
  4045de:	4630      	mov	r0, r6
  4045e0:	f002 ff06 	bl	4073f0 <memcmp>
  4045e4:	2800      	cmp	r0, #0
  4045e6:	d16f      	bne.n	4046c8 <two_way_long_needle+0x130>
  4045e8:	f109 33ff 	add.w	r3, r9, #4294967295
  4045ec:	9300      	str	r3, [sp, #0]
  4045ee:	18f3      	adds	r3, r6, r3
  4045f0:	4682      	mov	sl, r0
  4045f2:	9301      	str	r3, [sp, #4]
  4045f4:	4623      	mov	r3, r4
  4045f6:	4680      	mov	r8, r0
  4045f8:	4654      	mov	r4, sl
  4045fa:	4658      	mov	r0, fp
  4045fc:	469a      	mov	sl, r3
  4045fe:	eb08 070a 	add.w	r7, r8, sl
  404602:	1a3a      	subs	r2, r7, r0
  404604:	2100      	movs	r1, #0
  404606:	4428      	add	r0, r5
  404608:	f002 fea2 	bl	407350 <memchr>
  40460c:	2800      	cmp	r0, #0
  40460e:	d156      	bne.n	4046be <two_way_long_needle+0x126>
  404610:	2f00      	cmp	r7, #0
  404612:	d054      	beq.n	4046be <two_way_long_needle+0x126>
  404614:	19eb      	adds	r3, r5, r7
  404616:	aa04      	add	r2, sp, #16
  404618:	f813 3c01 	ldrb.w	r3, [r3, #-1]
  40461c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
  404620:	b14b      	cbz	r3, 404636 <two_way_long_needle+0x9e>
  404622:	b124      	cbz	r4, 40462e <two_way_long_needle+0x96>
  404624:	9a03      	ldr	r2, [sp, #12]
  404626:	4293      	cmp	r3, r2
  404628:	d201      	bcs.n	40462e <two_way_long_needle+0x96>
  40462a:	ebaa 0302 	sub.w	r3, sl, r2
  40462e:	4498      	add	r8, r3
  404630:	2400      	movs	r4, #0
  404632:	4638      	mov	r0, r7
  404634:	e7e3      	b.n	4045fe <two_way_long_needle+0x66>
  404636:	454c      	cmp	r4, r9
  404638:	4623      	mov	r3, r4
  40463a:	f10a 3eff 	add.w	lr, sl, #4294967295
  40463e:	bf38      	it	cc
  404640:	464b      	movcc	r3, r9
  404642:	4573      	cmp	r3, lr
  404644:	d213      	bcs.n	40466e <two_way_long_needle+0xd6>
  404646:	eb08 0203 	add.w	r2, r8, r3
  40464a:	f816 c003 	ldrb.w	ip, [r6, r3]
  40464e:	5ca8      	ldrb	r0, [r5, r2]
  404650:	4584      	cmp	ip, r0
  404652:	442a      	add	r2, r5
  404654:	eb06 0103 	add.w	r1, r6, r3
  404658:	d006      	beq.n	404668 <two_way_long_needle+0xd0>
  40465a:	e02c      	b.n	4046b6 <two_way_long_needle+0x11e>
  40465c:	f811 cf01 	ldrb.w	ip, [r1, #1]!
  404660:	f812 0f01 	ldrb.w	r0, [r2, #1]!
  404664:	4584      	cmp	ip, r0
  404666:	d126      	bne.n	4046b6 <two_way_long_needle+0x11e>
  404668:	3301      	adds	r3, #1
  40466a:	4573      	cmp	r3, lr
  40466c:	d3f6      	bcc.n	40465c <two_way_long_needle+0xc4>
  40466e:	454c      	cmp	r4, r9
  404670:	9900      	ldr	r1, [sp, #0]
  404672:	f080 8089 	bcs.w	404788 <two_way_long_needle+0x1f0>
  404676:	9b00      	ldr	r3, [sp, #0]
  404678:	eb08 0203 	add.w	r2, r8, r3
  40467c:	9b01      	ldr	r3, [sp, #4]
  40467e:	5ca8      	ldrb	r0, [r5, r2]
  404680:	781b      	ldrb	r3, [r3, #0]
  404682:	4298      	cmp	r0, r3
  404684:	442a      	add	r2, r5
  404686:	d17f      	bne.n	404788 <two_way_long_needle+0x1f0>
  404688:	9801      	ldr	r0, [sp, #4]
  40468a:	f104 3bff 	add.w	fp, r4, #4294967295
  40468e:	e006      	b.n	40469e <two_way_long_needle+0x106>
  404690:	f810 cd01 	ldrb.w	ip, [r0, #-1]!
  404694:	f812 ed01 	ldrb.w	lr, [r2, #-1]!
  404698:	45f4      	cmp	ip, lr
  40469a:	d103      	bne.n	4046a4 <two_way_long_needle+0x10c>
  40469c:	4619      	mov	r1, r3
  40469e:	1e4b      	subs	r3, r1, #1
  4046a0:	459b      	cmp	fp, r3
  4046a2:	d1f5      	bne.n	404690 <two_way_long_needle+0xf8>
  4046a4:	3401      	adds	r4, #1
  4046a6:	428c      	cmp	r4, r1
  4046a8:	d870      	bhi.n	40478c <two_way_long_needle+0x1f4>
  4046aa:	9c03      	ldr	r4, [sp, #12]
  4046ac:	4638      	mov	r0, r7
  4046ae:	44a0      	add	r8, r4
  4046b0:	ebaa 0404 	sub.w	r4, sl, r4
  4046b4:	e7a3      	b.n	4045fe <two_way_long_needle+0x66>
  4046b6:	f1c9 0201 	rsb	r2, r9, #1
  4046ba:	4490      	add	r8, r2
  4046bc:	e7b7      	b.n	40462e <two_way_long_needle+0x96>
  4046be:	2000      	movs	r0, #0
  4046c0:	f20d 4d14 	addw	sp, sp, #1044	; 0x414
  4046c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4046c8:	eba4 0309 	sub.w	r3, r4, r9
  4046cc:	454b      	cmp	r3, r9
  4046ce:	bf38      	it	cc
  4046d0:	464b      	movcc	r3, r9
  4046d2:	3301      	adds	r3, #1
  4046d4:	f109 38ff 	add.w	r8, r9, #4294967295
  4046d8:	9303      	str	r3, [sp, #12]
  4046da:	eb06 0308 	add.w	r3, r6, r8
  4046de:	4658      	mov	r0, fp
  4046e0:	f04f 0a00 	mov.w	sl, #0
  4046e4:	46cb      	mov	fp, r9
  4046e6:	4699      	mov	r9, r3
  4046e8:	eb0a 0704 	add.w	r7, sl, r4
  4046ec:	1a3a      	subs	r2, r7, r0
  4046ee:	2100      	movs	r1, #0
  4046f0:	4428      	add	r0, r5
  4046f2:	f002 fe2d 	bl	407350 <memchr>
  4046f6:	2800      	cmp	r0, #0
  4046f8:	d1e1      	bne.n	4046be <two_way_long_needle+0x126>
  4046fa:	2f00      	cmp	r7, #0
  4046fc:	d0df      	beq.n	4046be <two_way_long_needle+0x126>
  4046fe:	19eb      	adds	r3, r5, r7
  404700:	aa04      	add	r2, sp, #16
  404702:	f813 3c01 	ldrb.w	r3, [r3, #-1]
  404706:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
  40470a:	bba3      	cbnz	r3, 404776 <two_way_long_needle+0x1de>
  40470c:	1e61      	subs	r1, r4, #1
  40470e:	458b      	cmp	fp, r1
  404710:	d215      	bcs.n	40473e <two_way_long_needle+0x1a6>
  404712:	eb0a 020b 	add.w	r2, sl, fp
  404716:	f816 300b 	ldrb.w	r3, [r6, fp]
  40471a:	f815 e002 	ldrb.w	lr, [r5, r2]
  40471e:	459e      	cmp	lr, r3
  404720:	442a      	add	r2, r5
  404722:	eb06 000b 	add.w	r0, r6, fp
  404726:	465b      	mov	r3, fp
  404728:	d006      	beq.n	404738 <two_way_long_needle+0x1a0>
  40472a:	e027      	b.n	40477c <two_way_long_needle+0x1e4>
  40472c:	f810 cf01 	ldrb.w	ip, [r0, #1]!
  404730:	f812 ef01 	ldrb.w	lr, [r2, #1]!
  404734:	45f4      	cmp	ip, lr
  404736:	d121      	bne.n	40477c <two_way_long_needle+0x1e4>
  404738:	3301      	adds	r3, #1
  40473a:	428b      	cmp	r3, r1
  40473c:	d3f6      	bcc.n	40472c <two_way_long_needle+0x194>
  40473e:	f1b8 3fff 	cmp.w	r8, #4294967295
  404742:	d011      	beq.n	404768 <two_way_long_needle+0x1d0>
  404744:	eb0a 0208 	add.w	r2, sl, r8
  404748:	f899 1000 	ldrb.w	r1, [r9]
  40474c:	5cab      	ldrb	r3, [r5, r2]
  40474e:	4299      	cmp	r1, r3
  404750:	442a      	add	r2, r5
  404752:	d10f      	bne.n	404774 <two_way_long_needle+0x1dc>
  404754:	464b      	mov	r3, r9
  404756:	e005      	b.n	404764 <two_way_long_needle+0x1cc>
  404758:	f813 0d01 	ldrb.w	r0, [r3, #-1]!
  40475c:	f812 1d01 	ldrb.w	r1, [r2, #-1]!
  404760:	4288      	cmp	r0, r1
  404762:	d107      	bne.n	404774 <two_way_long_needle+0x1dc>
  404764:	42b3      	cmp	r3, r6
  404766:	d1f7      	bne.n	404758 <two_way_long_needle+0x1c0>
  404768:	eb05 000a 	add.w	r0, r5, sl
  40476c:	f20d 4d14 	addw	sp, sp, #1044	; 0x414
  404770:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404774:	9b03      	ldr	r3, [sp, #12]
  404776:	449a      	add	sl, r3
  404778:	4638      	mov	r0, r7
  40477a:	e7b5      	b.n	4046e8 <two_way_long_needle+0x150>
  40477c:	f1cb 0201 	rsb	r2, fp, #1
  404780:	4492      	add	sl, r2
  404782:	449a      	add	sl, r3
  404784:	4638      	mov	r0, r7
  404786:	e7af      	b.n	4046e8 <two_way_long_needle+0x150>
  404788:	4649      	mov	r1, r9
  40478a:	e78b      	b.n	4046a4 <two_way_long_needle+0x10c>
  40478c:	eb05 0008 	add.w	r0, r5, r8
  404790:	e796      	b.n	4046c0 <two_way_long_needle+0x128>
  404792:	bf00      	nop

00404794 <strstr>:
  404794:	7802      	ldrb	r2, [r0, #0]
  404796:	2a00      	cmp	r2, #0
  404798:	f000 8101 	beq.w	40499e <strstr+0x20a>
  40479c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4047a0:	f891 8000 	ldrb.w	r8, [r1]
  4047a4:	b085      	sub	sp, #20
  4047a6:	4644      	mov	r4, r8
  4047a8:	f1b8 0f00 	cmp.w	r8, #0
  4047ac:	d016      	beq.n	4047dc <strstr+0x48>
  4047ae:	4686      	mov	lr, r0
  4047b0:	f101 0c01 	add.w	ip, r1, #1
  4047b4:	2701      	movs	r7, #1
  4047b6:	e003      	b.n	4047c0 <strstr+0x2c>
  4047b8:	f813 4b01 	ldrb.w	r4, [r3], #1
  4047bc:	b16c      	cbz	r4, 4047da <strstr+0x46>
  4047be:	469c      	mov	ip, r3
  4047c0:	42a2      	cmp	r2, r4
  4047c2:	bf14      	ite	ne
  4047c4:	2700      	movne	r7, #0
  4047c6:	f007 0701 	andeq.w	r7, r7, #1
  4047ca:	f81e 2f01 	ldrb.w	r2, [lr, #1]!
  4047ce:	4663      	mov	r3, ip
  4047d0:	2a00      	cmp	r2, #0
  4047d2:	d1f1      	bne.n	4047b8 <strstr+0x24>
  4047d4:	f89c 3000 	ldrb.w	r3, [ip]
  4047d8:	b9fb      	cbnz	r3, 40481a <strstr+0x86>
  4047da:	b117      	cbz	r7, 4047e2 <strstr+0x4e>
  4047dc:	b005      	add	sp, #20
  4047de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4047e2:	460e      	mov	r6, r1
  4047e4:	4605      	mov	r5, r0
  4047e6:	4641      	mov	r1, r8
  4047e8:	3001      	adds	r0, #1
  4047ea:	ebac 0406 	sub.w	r4, ip, r6
  4047ee:	f003 f9d9 	bl	407ba4 <strchr>
  4047f2:	4607      	mov	r7, r0
  4047f4:	b188      	cbz	r0, 40481a <strstr+0x86>
  4047f6:	2c01      	cmp	r4, #1
  4047f8:	d0f0      	beq.n	4047dc <strstr+0x48>
  4047fa:	1928      	adds	r0, r5, r4
  4047fc:	4287      	cmp	r7, r0
  4047fe:	bf94      	ite	ls
  404800:	1bc1      	subls	r1, r0, r7
  404802:	2101      	movhi	r1, #1
  404804:	2c1f      	cmp	r4, #31
  404806:	468b      	mov	fp, r1
  404808:	d90b      	bls.n	404822 <strstr+0x8e>
  40480a:	4623      	mov	r3, r4
  40480c:	4632      	mov	r2, r6
  40480e:	4638      	mov	r0, r7
  404810:	f7ff fec2 	bl	404598 <two_way_long_needle>
  404814:	b005      	add	sp, #20
  404816:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40481a:	2000      	movs	r0, #0
  40481c:	b005      	add	sp, #20
  40481e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404822:	aa03      	add	r2, sp, #12
  404824:	4621      	mov	r1, r4
  404826:	4630      	mov	r0, r6
  404828:	f7ff fe5c 	bl	4044e4 <critical_factorization>
  40482c:	9903      	ldr	r1, [sp, #12]
  40482e:	4680      	mov	r8, r0
  404830:	4602      	mov	r2, r0
  404832:	4431      	add	r1, r6
  404834:	4630      	mov	r0, r6
  404836:	f002 fddb 	bl	4073f0 <memcmp>
  40483a:	2800      	cmp	r0, #0
  40483c:	d157      	bne.n	4048ee <strstr+0x15a>
  40483e:	f108 33ff 	add.w	r3, r8, #4294967295
  404842:	9300      	str	r3, [sp, #0]
  404844:	18f3      	adds	r3, r6, r3
  404846:	4681      	mov	r9, r0
  404848:	4605      	mov	r5, r0
  40484a:	9301      	str	r3, [sp, #4]
  40484c:	4658      	mov	r0, fp
  40484e:	46b2      	mov	sl, r6
  404850:	1966      	adds	r6, r4, r5
  404852:	1a32      	subs	r2, r6, r0
  404854:	2100      	movs	r1, #0
  404856:	4438      	add	r0, r7
  404858:	f002 fd7a 	bl	407350 <memchr>
  40485c:	2800      	cmp	r0, #0
  40485e:	d1dc      	bne.n	40481a <strstr+0x86>
  404860:	2e00      	cmp	r6, #0
  404862:	d0da      	beq.n	40481a <strstr+0x86>
  404864:	45c8      	cmp	r8, r9
  404866:	4643      	mov	r3, r8
  404868:	bf38      	it	cc
  40486a:	464b      	movcc	r3, r9
  40486c:	429c      	cmp	r4, r3
  40486e:	d912      	bls.n	404896 <strstr+0x102>
  404870:	195a      	adds	r2, r3, r5
  404872:	f81a 1003 	ldrb.w	r1, [sl, r3]
  404876:	5cb8      	ldrb	r0, [r7, r2]
  404878:	4281      	cmp	r1, r0
  40487a:	443a      	add	r2, r7
  40487c:	eb0a 0e03 	add.w	lr, sl, r3
  404880:	d006      	beq.n	404890 <strstr+0xfc>
  404882:	e02c      	b.n	4048de <strstr+0x14a>
  404884:	f81e 0f01 	ldrb.w	r0, [lr, #1]!
  404888:	f812 1f01 	ldrb.w	r1, [r2, #1]!
  40488c:	4288      	cmp	r0, r1
  40488e:	d126      	bne.n	4048de <strstr+0x14a>
  404890:	3301      	adds	r3, #1
  404892:	429c      	cmp	r4, r3
  404894:	d1f6      	bne.n	404884 <strstr+0xf0>
  404896:	45c8      	cmp	r8, r9
  404898:	9900      	ldr	r1, [sp, #0]
  40489a:	f240 8083 	bls.w	4049a4 <strstr+0x210>
  40489e:	9b00      	ldr	r3, [sp, #0]
  4048a0:	18ea      	adds	r2, r5, r3
  4048a2:	9b01      	ldr	r3, [sp, #4]
  4048a4:	5cb8      	ldrb	r0, [r7, r2]
  4048a6:	781b      	ldrb	r3, [r3, #0]
  4048a8:	4298      	cmp	r0, r3
  4048aa:	443a      	add	r2, r7
  4048ac:	d17a      	bne.n	4049a4 <strstr+0x210>
  4048ae:	9801      	ldr	r0, [sp, #4]
  4048b0:	f109 3bff 	add.w	fp, r9, #4294967295
  4048b4:	e006      	b.n	4048c4 <strstr+0x130>
  4048b6:	f810 cd01 	ldrb.w	ip, [r0, #-1]!
  4048ba:	f812 ed01 	ldrb.w	lr, [r2, #-1]!
  4048be:	45f4      	cmp	ip, lr
  4048c0:	d103      	bne.n	4048ca <strstr+0x136>
  4048c2:	4619      	mov	r1, r3
  4048c4:	1e4b      	subs	r3, r1, #1
  4048c6:	455b      	cmp	r3, fp
  4048c8:	d1f5      	bne.n	4048b6 <strstr+0x122>
  4048ca:	f109 0901 	add.w	r9, r9, #1
  4048ce:	4589      	cmp	r9, r1
  4048d0:	d857      	bhi.n	404982 <strstr+0x1ee>
  4048d2:	9b03      	ldr	r3, [sp, #12]
  4048d4:	4630      	mov	r0, r6
  4048d6:	441d      	add	r5, r3
  4048d8:	eba4 0903 	sub.w	r9, r4, r3
  4048dc:	e7b8      	b.n	404850 <strstr+0xbc>
  4048de:	f1c8 0201 	rsb	r2, r8, #1
  4048e2:	4415      	add	r5, r2
  4048e4:	441d      	add	r5, r3
  4048e6:	f04f 0900 	mov.w	r9, #0
  4048ea:	4630      	mov	r0, r6
  4048ec:	e7b0      	b.n	404850 <strstr+0xbc>
  4048ee:	eba4 0308 	sub.w	r3, r4, r8
  4048f2:	4543      	cmp	r3, r8
  4048f4:	bf38      	it	cc
  4048f6:	4643      	movcc	r3, r8
  4048f8:	3301      	adds	r3, #1
  4048fa:	f108 39ff 	add.w	r9, r8, #4294967295
  4048fe:	9303      	str	r3, [sp, #12]
  404900:	eb06 0309 	add.w	r3, r6, r9
  404904:	4658      	mov	r0, fp
  404906:	2500      	movs	r5, #0
  404908:	46bb      	mov	fp, r7
  40490a:	469a      	mov	sl, r3
  40490c:	1967      	adds	r7, r4, r5
  40490e:	1a3a      	subs	r2, r7, r0
  404910:	2100      	movs	r1, #0
  404912:	4458      	add	r0, fp
  404914:	f002 fd1c 	bl	407350 <memchr>
  404918:	2800      	cmp	r0, #0
  40491a:	f47f af7e 	bne.w	40481a <strstr+0x86>
  40491e:	2f00      	cmp	r7, #0
  404920:	f43f af7b 	beq.w	40481a <strstr+0x86>
  404924:	4544      	cmp	r4, r8
  404926:	d915      	bls.n	404954 <strstr+0x1c0>
  404928:	eb08 0205 	add.w	r2, r8, r5
  40492c:	f816 3008 	ldrb.w	r3, [r6, r8]
  404930:	f81b 0002 	ldrb.w	r0, [fp, r2]
  404934:	4298      	cmp	r0, r3
  404936:	445a      	add	r2, fp
  404938:	eb06 0108 	add.w	r1, r6, r8
  40493c:	4643      	mov	r3, r8
  40493e:	d006      	beq.n	40494e <strstr+0x1ba>
  404940:	e023      	b.n	40498a <strstr+0x1f6>
  404942:	f811 ef01 	ldrb.w	lr, [r1, #1]!
  404946:	f812 0f01 	ldrb.w	r0, [r2, #1]!
  40494a:	4586      	cmp	lr, r0
  40494c:	d11d      	bne.n	40498a <strstr+0x1f6>
  40494e:	3301      	adds	r3, #1
  404950:	429c      	cmp	r4, r3
  404952:	d1f6      	bne.n	404942 <strstr+0x1ae>
  404954:	f1b9 3fff 	cmp.w	r9, #4294967295
  404958:	d012      	beq.n	404980 <strstr+0x1ec>
  40495a:	eb05 0209 	add.w	r2, r5, r9
  40495e:	f89a 3000 	ldrb.w	r3, [sl]
  404962:	f81b 1002 	ldrb.w	r1, [fp, r2]
  404966:	4299      	cmp	r1, r3
  404968:	445a      	add	r2, fp
  40496a:	d114      	bne.n	404996 <strstr+0x202>
  40496c:	4653      	mov	r3, sl
  40496e:	e005      	b.n	40497c <strstr+0x1e8>
  404970:	f813 0d01 	ldrb.w	r0, [r3, #-1]!
  404974:	f812 1d01 	ldrb.w	r1, [r2, #-1]!
  404978:	4288      	cmp	r0, r1
  40497a:	d10c      	bne.n	404996 <strstr+0x202>
  40497c:	42b3      	cmp	r3, r6
  40497e:	d1f7      	bne.n	404970 <strstr+0x1dc>
  404980:	465f      	mov	r7, fp
  404982:	1978      	adds	r0, r7, r5
  404984:	b005      	add	sp, #20
  404986:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40498a:	f1c8 0201 	rsb	r2, r8, #1
  40498e:	4415      	add	r5, r2
  404990:	441d      	add	r5, r3
  404992:	4638      	mov	r0, r7
  404994:	e7ba      	b.n	40490c <strstr+0x178>
  404996:	9b03      	ldr	r3, [sp, #12]
  404998:	4638      	mov	r0, r7
  40499a:	441d      	add	r5, r3
  40499c:	e7b6      	b.n	40490c <strstr+0x178>
  40499e:	780b      	ldrb	r3, [r1, #0]
  4049a0:	b913      	cbnz	r3, 4049a8 <strstr+0x214>
  4049a2:	4770      	bx	lr
  4049a4:	4641      	mov	r1, r8
  4049a6:	e790      	b.n	4048ca <strstr+0x136>
  4049a8:	2000      	movs	r0, #0
  4049aa:	4770      	bx	lr

004049ac <_svfprintf_r>:
  4049ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4049b0:	b0c3      	sub	sp, #268	; 0x10c
  4049b2:	460c      	mov	r4, r1
  4049b4:	910b      	str	r1, [sp, #44]	; 0x2c
  4049b6:	4692      	mov	sl, r2
  4049b8:	930f      	str	r3, [sp, #60]	; 0x3c
  4049ba:	900c      	str	r0, [sp, #48]	; 0x30
  4049bc:	f002 fa04 	bl	406dc8 <_localeconv_r>
  4049c0:	6803      	ldr	r3, [r0, #0]
  4049c2:	931a      	str	r3, [sp, #104]	; 0x68
  4049c4:	4618      	mov	r0, r3
  4049c6:	f003 f97b 	bl	407cc0 <strlen>
  4049ca:	89a3      	ldrh	r3, [r4, #12]
  4049cc:	9019      	str	r0, [sp, #100]	; 0x64
  4049ce:	0619      	lsls	r1, r3, #24
  4049d0:	d503      	bpl.n	4049da <_svfprintf_r+0x2e>
  4049d2:	6923      	ldr	r3, [r4, #16]
  4049d4:	2b00      	cmp	r3, #0
  4049d6:	f001 8001 	beq.w	4059dc <_svfprintf_r+0x1030>
  4049da:	2300      	movs	r3, #0
  4049dc:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  4049e0:	9313      	str	r3, [sp, #76]	; 0x4c
  4049e2:	9314      	str	r3, [sp, #80]	; 0x50
  4049e4:	9315      	str	r3, [sp, #84]	; 0x54
  4049e6:	9327      	str	r3, [sp, #156]	; 0x9c
  4049e8:	9326      	str	r3, [sp, #152]	; 0x98
  4049ea:	9318      	str	r3, [sp, #96]	; 0x60
  4049ec:	931b      	str	r3, [sp, #108]	; 0x6c
  4049ee:	9309      	str	r3, [sp, #36]	; 0x24
  4049f0:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  4049f4:	46c8      	mov	r8, r9
  4049f6:	9316      	str	r3, [sp, #88]	; 0x58
  4049f8:	9317      	str	r3, [sp, #92]	; 0x5c
  4049fa:	f89a 3000 	ldrb.w	r3, [sl]
  4049fe:	4654      	mov	r4, sl
  404a00:	b1e3      	cbz	r3, 404a3c <_svfprintf_r+0x90>
  404a02:	2b25      	cmp	r3, #37	; 0x25
  404a04:	d102      	bne.n	404a0c <_svfprintf_r+0x60>
  404a06:	e019      	b.n	404a3c <_svfprintf_r+0x90>
  404a08:	2b25      	cmp	r3, #37	; 0x25
  404a0a:	d003      	beq.n	404a14 <_svfprintf_r+0x68>
  404a0c:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  404a10:	2b00      	cmp	r3, #0
  404a12:	d1f9      	bne.n	404a08 <_svfprintf_r+0x5c>
  404a14:	eba4 050a 	sub.w	r5, r4, sl
  404a18:	b185      	cbz	r5, 404a3c <_svfprintf_r+0x90>
  404a1a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404a1c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  404a1e:	f8c8 a000 	str.w	sl, [r8]
  404a22:	3301      	adds	r3, #1
  404a24:	442a      	add	r2, r5
  404a26:	2b07      	cmp	r3, #7
  404a28:	f8c8 5004 	str.w	r5, [r8, #4]
  404a2c:	9227      	str	r2, [sp, #156]	; 0x9c
  404a2e:	9326      	str	r3, [sp, #152]	; 0x98
  404a30:	dc7f      	bgt.n	404b32 <_svfprintf_r+0x186>
  404a32:	f108 0808 	add.w	r8, r8, #8
  404a36:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404a38:	442b      	add	r3, r5
  404a3a:	9309      	str	r3, [sp, #36]	; 0x24
  404a3c:	7823      	ldrb	r3, [r4, #0]
  404a3e:	2b00      	cmp	r3, #0
  404a40:	d07f      	beq.n	404b42 <_svfprintf_r+0x196>
  404a42:	2300      	movs	r3, #0
  404a44:	461a      	mov	r2, r3
  404a46:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  404a4a:	4619      	mov	r1, r3
  404a4c:	930d      	str	r3, [sp, #52]	; 0x34
  404a4e:	469b      	mov	fp, r3
  404a50:	f04f 30ff 	mov.w	r0, #4294967295
  404a54:	7863      	ldrb	r3, [r4, #1]
  404a56:	900a      	str	r0, [sp, #40]	; 0x28
  404a58:	f104 0a01 	add.w	sl, r4, #1
  404a5c:	f10a 0a01 	add.w	sl, sl, #1
  404a60:	f1a3 0020 	sub.w	r0, r3, #32
  404a64:	2858      	cmp	r0, #88	; 0x58
  404a66:	f200 83c0 	bhi.w	4051ea <_svfprintf_r+0x83e>
  404a6a:	e8df f010 	tbh	[pc, r0, lsl #1]
  404a6e:	0238      	.short	0x0238
  404a70:	03be03be 	.word	0x03be03be
  404a74:	03be0240 	.word	0x03be0240
  404a78:	03be03be 	.word	0x03be03be
  404a7c:	03be03be 	.word	0x03be03be
  404a80:	024503be 	.word	0x024503be
  404a84:	03be0203 	.word	0x03be0203
  404a88:	026b005d 	.word	0x026b005d
  404a8c:	028603be 	.word	0x028603be
  404a90:	039c039c 	.word	0x039c039c
  404a94:	039c039c 	.word	0x039c039c
  404a98:	039c039c 	.word	0x039c039c
  404a9c:	039c039c 	.word	0x039c039c
  404aa0:	03be039c 	.word	0x03be039c
  404aa4:	03be03be 	.word	0x03be03be
  404aa8:	03be03be 	.word	0x03be03be
  404aac:	03be03be 	.word	0x03be03be
  404ab0:	03be03be 	.word	0x03be03be
  404ab4:	033703be 	.word	0x033703be
  404ab8:	03be0357 	.word	0x03be0357
  404abc:	03be0357 	.word	0x03be0357
  404ac0:	03be03be 	.word	0x03be03be
  404ac4:	039703be 	.word	0x039703be
  404ac8:	03be03be 	.word	0x03be03be
  404acc:	03be03ac 	.word	0x03be03ac
  404ad0:	03be03be 	.word	0x03be03be
  404ad4:	03be03be 	.word	0x03be03be
  404ad8:	03be0259 	.word	0x03be0259
  404adc:	031e03be 	.word	0x031e03be
  404ae0:	03be03be 	.word	0x03be03be
  404ae4:	03be03be 	.word	0x03be03be
  404ae8:	03be03be 	.word	0x03be03be
  404aec:	03be03be 	.word	0x03be03be
  404af0:	03be03be 	.word	0x03be03be
  404af4:	02db02c6 	.word	0x02db02c6
  404af8:	03570357 	.word	0x03570357
  404afc:	028b0357 	.word	0x028b0357
  404b00:	03be02db 	.word	0x03be02db
  404b04:	029003be 	.word	0x029003be
  404b08:	029d03be 	.word	0x029d03be
  404b0c:	02b401cc 	.word	0x02b401cc
  404b10:	03be0208 	.word	0x03be0208
  404b14:	03be01e1 	.word	0x03be01e1
  404b18:	03be007e 	.word	0x03be007e
  404b1c:	020d03be 	.word	0x020d03be
  404b20:	980d      	ldr	r0, [sp, #52]	; 0x34
  404b22:	930f      	str	r3, [sp, #60]	; 0x3c
  404b24:	4240      	negs	r0, r0
  404b26:	900d      	str	r0, [sp, #52]	; 0x34
  404b28:	f04b 0b04 	orr.w	fp, fp, #4
  404b2c:	f89a 3000 	ldrb.w	r3, [sl]
  404b30:	e794      	b.n	404a5c <_svfprintf_r+0xb0>
  404b32:	aa25      	add	r2, sp, #148	; 0x94
  404b34:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404b36:	980c      	ldr	r0, [sp, #48]	; 0x30
  404b38:	f003 f930 	bl	407d9c <__ssprint_r>
  404b3c:	b940      	cbnz	r0, 404b50 <_svfprintf_r+0x1a4>
  404b3e:	46c8      	mov	r8, r9
  404b40:	e779      	b.n	404a36 <_svfprintf_r+0x8a>
  404b42:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  404b44:	b123      	cbz	r3, 404b50 <_svfprintf_r+0x1a4>
  404b46:	980c      	ldr	r0, [sp, #48]	; 0x30
  404b48:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404b4a:	aa25      	add	r2, sp, #148	; 0x94
  404b4c:	f003 f926 	bl	407d9c <__ssprint_r>
  404b50:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  404b52:	899b      	ldrh	r3, [r3, #12]
  404b54:	f013 0f40 	tst.w	r3, #64	; 0x40
  404b58:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404b5a:	bf18      	it	ne
  404b5c:	f04f 33ff 	movne.w	r3, #4294967295
  404b60:	9309      	str	r3, [sp, #36]	; 0x24
  404b62:	9809      	ldr	r0, [sp, #36]	; 0x24
  404b64:	b043      	add	sp, #268	; 0x10c
  404b66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404b6a:	f01b 0f20 	tst.w	fp, #32
  404b6e:	9311      	str	r3, [sp, #68]	; 0x44
  404b70:	f040 81dd 	bne.w	404f2e <_svfprintf_r+0x582>
  404b74:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  404b76:	f01b 0f10 	tst.w	fp, #16
  404b7a:	4613      	mov	r3, r2
  404b7c:	f040 856c 	bne.w	405658 <_svfprintf_r+0xcac>
  404b80:	f01b 0f40 	tst.w	fp, #64	; 0x40
  404b84:	f000 8568 	beq.w	405658 <_svfprintf_r+0xcac>
  404b88:	8814      	ldrh	r4, [r2, #0]
  404b8a:	3204      	adds	r2, #4
  404b8c:	2500      	movs	r5, #0
  404b8e:	2301      	movs	r3, #1
  404b90:	920f      	str	r2, [sp, #60]	; 0x3c
  404b92:	2700      	movs	r7, #0
  404b94:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  404b98:	990a      	ldr	r1, [sp, #40]	; 0x28
  404b9a:	1c4a      	adds	r2, r1, #1
  404b9c:	f000 8265 	beq.w	40506a <_svfprintf_r+0x6be>
  404ba0:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  404ba4:	9207      	str	r2, [sp, #28]
  404ba6:	ea54 0205 	orrs.w	r2, r4, r5
  404baa:	f040 8264 	bne.w	405076 <_svfprintf_r+0x6ca>
  404bae:	2900      	cmp	r1, #0
  404bb0:	f040 8439 	bne.w	405426 <_svfprintf_r+0xa7a>
  404bb4:	2b00      	cmp	r3, #0
  404bb6:	f040 84d4 	bne.w	405562 <_svfprintf_r+0xbb6>
  404bba:	f01b 0301 	ands.w	r3, fp, #1
  404bbe:	930e      	str	r3, [sp, #56]	; 0x38
  404bc0:	f000 8602 	beq.w	4057c8 <_svfprintf_r+0xe1c>
  404bc4:	ae42      	add	r6, sp, #264	; 0x108
  404bc6:	2330      	movs	r3, #48	; 0x30
  404bc8:	f806 3d41 	strb.w	r3, [r6, #-65]!
  404bcc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404bce:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  404bd0:	4293      	cmp	r3, r2
  404bd2:	bfb8      	it	lt
  404bd4:	4613      	movlt	r3, r2
  404bd6:	9308      	str	r3, [sp, #32]
  404bd8:	2300      	movs	r3, #0
  404bda:	9312      	str	r3, [sp, #72]	; 0x48
  404bdc:	b117      	cbz	r7, 404be4 <_svfprintf_r+0x238>
  404bde:	9b08      	ldr	r3, [sp, #32]
  404be0:	3301      	adds	r3, #1
  404be2:	9308      	str	r3, [sp, #32]
  404be4:	9b07      	ldr	r3, [sp, #28]
  404be6:	f013 0302 	ands.w	r3, r3, #2
  404bea:	9310      	str	r3, [sp, #64]	; 0x40
  404bec:	d002      	beq.n	404bf4 <_svfprintf_r+0x248>
  404bee:	9b08      	ldr	r3, [sp, #32]
  404bf0:	3302      	adds	r3, #2
  404bf2:	9308      	str	r3, [sp, #32]
  404bf4:	9b07      	ldr	r3, [sp, #28]
  404bf6:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  404bfa:	f040 830d 	bne.w	405218 <_svfprintf_r+0x86c>
  404bfe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  404c00:	9a08      	ldr	r2, [sp, #32]
  404c02:	eba3 0b02 	sub.w	fp, r3, r2
  404c06:	f1bb 0f00 	cmp.w	fp, #0
  404c0a:	f340 8305 	ble.w	405218 <_svfprintf_r+0x86c>
  404c0e:	f1bb 0f10 	cmp.w	fp, #16
  404c12:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404c14:	9a26      	ldr	r2, [sp, #152]	; 0x98
  404c16:	dd29      	ble.n	404c6c <_svfprintf_r+0x2c0>
  404c18:	4643      	mov	r3, r8
  404c1a:	4621      	mov	r1, r4
  404c1c:	46a8      	mov	r8, r5
  404c1e:	2710      	movs	r7, #16
  404c20:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  404c22:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  404c24:	e006      	b.n	404c34 <_svfprintf_r+0x288>
  404c26:	f1ab 0b10 	sub.w	fp, fp, #16
  404c2a:	f1bb 0f10 	cmp.w	fp, #16
  404c2e:	f103 0308 	add.w	r3, r3, #8
  404c32:	dd18      	ble.n	404c66 <_svfprintf_r+0x2ba>
  404c34:	3201      	adds	r2, #1
  404c36:	48b7      	ldr	r0, [pc, #732]	; (404f14 <_svfprintf_r+0x568>)
  404c38:	9226      	str	r2, [sp, #152]	; 0x98
  404c3a:	3110      	adds	r1, #16
  404c3c:	2a07      	cmp	r2, #7
  404c3e:	9127      	str	r1, [sp, #156]	; 0x9c
  404c40:	e883 0081 	stmia.w	r3, {r0, r7}
  404c44:	ddef      	ble.n	404c26 <_svfprintf_r+0x27a>
  404c46:	aa25      	add	r2, sp, #148	; 0x94
  404c48:	4629      	mov	r1, r5
  404c4a:	4620      	mov	r0, r4
  404c4c:	f003 f8a6 	bl	407d9c <__ssprint_r>
  404c50:	2800      	cmp	r0, #0
  404c52:	f47f af7d 	bne.w	404b50 <_svfprintf_r+0x1a4>
  404c56:	f1ab 0b10 	sub.w	fp, fp, #16
  404c5a:	f1bb 0f10 	cmp.w	fp, #16
  404c5e:	9927      	ldr	r1, [sp, #156]	; 0x9c
  404c60:	9a26      	ldr	r2, [sp, #152]	; 0x98
  404c62:	464b      	mov	r3, r9
  404c64:	dce6      	bgt.n	404c34 <_svfprintf_r+0x288>
  404c66:	4645      	mov	r5, r8
  404c68:	460c      	mov	r4, r1
  404c6a:	4698      	mov	r8, r3
  404c6c:	3201      	adds	r2, #1
  404c6e:	4ba9      	ldr	r3, [pc, #676]	; (404f14 <_svfprintf_r+0x568>)
  404c70:	9226      	str	r2, [sp, #152]	; 0x98
  404c72:	445c      	add	r4, fp
  404c74:	2a07      	cmp	r2, #7
  404c76:	9427      	str	r4, [sp, #156]	; 0x9c
  404c78:	e888 0808 	stmia.w	r8, {r3, fp}
  404c7c:	f300 8495 	bgt.w	4055aa <_svfprintf_r+0xbfe>
  404c80:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  404c84:	f108 0808 	add.w	r8, r8, #8
  404c88:	b177      	cbz	r7, 404ca8 <_svfprintf_r+0x2fc>
  404c8a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404c8c:	3301      	adds	r3, #1
  404c8e:	3401      	adds	r4, #1
  404c90:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  404c94:	2201      	movs	r2, #1
  404c96:	2b07      	cmp	r3, #7
  404c98:	9427      	str	r4, [sp, #156]	; 0x9c
  404c9a:	9326      	str	r3, [sp, #152]	; 0x98
  404c9c:	e888 0006 	stmia.w	r8, {r1, r2}
  404ca0:	f300 83d8 	bgt.w	405454 <_svfprintf_r+0xaa8>
  404ca4:	f108 0808 	add.w	r8, r8, #8
  404ca8:	9b10      	ldr	r3, [sp, #64]	; 0x40
  404caa:	b16b      	cbz	r3, 404cc8 <_svfprintf_r+0x31c>
  404cac:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404cae:	3301      	adds	r3, #1
  404cb0:	3402      	adds	r4, #2
  404cb2:	a91e      	add	r1, sp, #120	; 0x78
  404cb4:	2202      	movs	r2, #2
  404cb6:	2b07      	cmp	r3, #7
  404cb8:	9427      	str	r4, [sp, #156]	; 0x9c
  404cba:	9326      	str	r3, [sp, #152]	; 0x98
  404cbc:	e888 0006 	stmia.w	r8, {r1, r2}
  404cc0:	f300 83d3 	bgt.w	40546a <_svfprintf_r+0xabe>
  404cc4:	f108 0808 	add.w	r8, r8, #8
  404cc8:	2d80      	cmp	r5, #128	; 0x80
  404cca:	f000 8313 	beq.w	4052f4 <_svfprintf_r+0x948>
  404cce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404cd0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  404cd2:	1a9f      	subs	r7, r3, r2
  404cd4:	2f00      	cmp	r7, #0
  404cd6:	dd36      	ble.n	404d46 <_svfprintf_r+0x39a>
  404cd8:	2f10      	cmp	r7, #16
  404cda:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404cdc:	4d8e      	ldr	r5, [pc, #568]	; (404f18 <_svfprintf_r+0x56c>)
  404cde:	dd27      	ble.n	404d30 <_svfprintf_r+0x384>
  404ce0:	4642      	mov	r2, r8
  404ce2:	4621      	mov	r1, r4
  404ce4:	46b0      	mov	r8, r6
  404ce6:	f04f 0b10 	mov.w	fp, #16
  404cea:	462e      	mov	r6, r5
  404cec:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  404cee:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  404cf0:	e004      	b.n	404cfc <_svfprintf_r+0x350>
  404cf2:	3f10      	subs	r7, #16
  404cf4:	2f10      	cmp	r7, #16
  404cf6:	f102 0208 	add.w	r2, r2, #8
  404cfa:	dd15      	ble.n	404d28 <_svfprintf_r+0x37c>
  404cfc:	3301      	adds	r3, #1
  404cfe:	3110      	adds	r1, #16
  404d00:	2b07      	cmp	r3, #7
  404d02:	9127      	str	r1, [sp, #156]	; 0x9c
  404d04:	9326      	str	r3, [sp, #152]	; 0x98
  404d06:	e882 0840 	stmia.w	r2, {r6, fp}
  404d0a:	ddf2      	ble.n	404cf2 <_svfprintf_r+0x346>
  404d0c:	aa25      	add	r2, sp, #148	; 0x94
  404d0e:	4629      	mov	r1, r5
  404d10:	4620      	mov	r0, r4
  404d12:	f003 f843 	bl	407d9c <__ssprint_r>
  404d16:	2800      	cmp	r0, #0
  404d18:	f47f af1a 	bne.w	404b50 <_svfprintf_r+0x1a4>
  404d1c:	3f10      	subs	r7, #16
  404d1e:	2f10      	cmp	r7, #16
  404d20:	9927      	ldr	r1, [sp, #156]	; 0x9c
  404d22:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404d24:	464a      	mov	r2, r9
  404d26:	dce9      	bgt.n	404cfc <_svfprintf_r+0x350>
  404d28:	4635      	mov	r5, r6
  404d2a:	460c      	mov	r4, r1
  404d2c:	4646      	mov	r6, r8
  404d2e:	4690      	mov	r8, r2
  404d30:	3301      	adds	r3, #1
  404d32:	443c      	add	r4, r7
  404d34:	2b07      	cmp	r3, #7
  404d36:	9427      	str	r4, [sp, #156]	; 0x9c
  404d38:	9326      	str	r3, [sp, #152]	; 0x98
  404d3a:	e888 00a0 	stmia.w	r8, {r5, r7}
  404d3e:	f300 837e 	bgt.w	40543e <_svfprintf_r+0xa92>
  404d42:	f108 0808 	add.w	r8, r8, #8
  404d46:	9b07      	ldr	r3, [sp, #28]
  404d48:	05df      	lsls	r7, r3, #23
  404d4a:	f100 8267 	bmi.w	40521c <_svfprintf_r+0x870>
  404d4e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404d50:	990e      	ldr	r1, [sp, #56]	; 0x38
  404d52:	f8c8 6000 	str.w	r6, [r8]
  404d56:	3301      	adds	r3, #1
  404d58:	440c      	add	r4, r1
  404d5a:	2b07      	cmp	r3, #7
  404d5c:	9427      	str	r4, [sp, #156]	; 0x9c
  404d5e:	f8c8 1004 	str.w	r1, [r8, #4]
  404d62:	9326      	str	r3, [sp, #152]	; 0x98
  404d64:	f300 834a 	bgt.w	4053fc <_svfprintf_r+0xa50>
  404d68:	f108 0808 	add.w	r8, r8, #8
  404d6c:	9b07      	ldr	r3, [sp, #28]
  404d6e:	075b      	lsls	r3, r3, #29
  404d70:	d53a      	bpl.n	404de8 <_svfprintf_r+0x43c>
  404d72:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  404d74:	9a08      	ldr	r2, [sp, #32]
  404d76:	1a9d      	subs	r5, r3, r2
  404d78:	2d00      	cmp	r5, #0
  404d7a:	dd35      	ble.n	404de8 <_svfprintf_r+0x43c>
  404d7c:	2d10      	cmp	r5, #16
  404d7e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404d80:	dd20      	ble.n	404dc4 <_svfprintf_r+0x418>
  404d82:	2610      	movs	r6, #16
  404d84:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  404d86:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  404d8a:	e004      	b.n	404d96 <_svfprintf_r+0x3ea>
  404d8c:	3d10      	subs	r5, #16
  404d8e:	2d10      	cmp	r5, #16
  404d90:	f108 0808 	add.w	r8, r8, #8
  404d94:	dd16      	ble.n	404dc4 <_svfprintf_r+0x418>
  404d96:	3301      	adds	r3, #1
  404d98:	4a5e      	ldr	r2, [pc, #376]	; (404f14 <_svfprintf_r+0x568>)
  404d9a:	9326      	str	r3, [sp, #152]	; 0x98
  404d9c:	3410      	adds	r4, #16
  404d9e:	2b07      	cmp	r3, #7
  404da0:	9427      	str	r4, [sp, #156]	; 0x9c
  404da2:	e888 0044 	stmia.w	r8, {r2, r6}
  404da6:	ddf1      	ble.n	404d8c <_svfprintf_r+0x3e0>
  404da8:	aa25      	add	r2, sp, #148	; 0x94
  404daa:	4659      	mov	r1, fp
  404dac:	4638      	mov	r0, r7
  404dae:	f002 fff5 	bl	407d9c <__ssprint_r>
  404db2:	2800      	cmp	r0, #0
  404db4:	f47f aecc 	bne.w	404b50 <_svfprintf_r+0x1a4>
  404db8:	3d10      	subs	r5, #16
  404dba:	2d10      	cmp	r5, #16
  404dbc:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404dbe:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404dc0:	46c8      	mov	r8, r9
  404dc2:	dce8      	bgt.n	404d96 <_svfprintf_r+0x3ea>
  404dc4:	3301      	adds	r3, #1
  404dc6:	4a53      	ldr	r2, [pc, #332]	; (404f14 <_svfprintf_r+0x568>)
  404dc8:	9326      	str	r3, [sp, #152]	; 0x98
  404dca:	442c      	add	r4, r5
  404dcc:	2b07      	cmp	r3, #7
  404dce:	9427      	str	r4, [sp, #156]	; 0x9c
  404dd0:	e888 0024 	stmia.w	r8, {r2, r5}
  404dd4:	dd08      	ble.n	404de8 <_svfprintf_r+0x43c>
  404dd6:	aa25      	add	r2, sp, #148	; 0x94
  404dd8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404dda:	980c      	ldr	r0, [sp, #48]	; 0x30
  404ddc:	f002 ffde 	bl	407d9c <__ssprint_r>
  404de0:	2800      	cmp	r0, #0
  404de2:	f47f aeb5 	bne.w	404b50 <_svfprintf_r+0x1a4>
  404de6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404de8:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404dea:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  404dec:	9908      	ldr	r1, [sp, #32]
  404dee:	428a      	cmp	r2, r1
  404df0:	bfac      	ite	ge
  404df2:	189b      	addge	r3, r3, r2
  404df4:	185b      	addlt	r3, r3, r1
  404df6:	9309      	str	r3, [sp, #36]	; 0x24
  404df8:	2c00      	cmp	r4, #0
  404dfa:	f040 830a 	bne.w	405412 <_svfprintf_r+0xa66>
  404dfe:	2300      	movs	r3, #0
  404e00:	9326      	str	r3, [sp, #152]	; 0x98
  404e02:	46c8      	mov	r8, r9
  404e04:	e5f9      	b.n	4049fa <_svfprintf_r+0x4e>
  404e06:	9311      	str	r3, [sp, #68]	; 0x44
  404e08:	f01b 0320 	ands.w	r3, fp, #32
  404e0c:	f040 81e2 	bne.w	4051d4 <_svfprintf_r+0x828>
  404e10:	f01b 0210 	ands.w	r2, fp, #16
  404e14:	f040 842c 	bne.w	405670 <_svfprintf_r+0xcc4>
  404e18:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  404e1c:	f000 8428 	beq.w	405670 <_svfprintf_r+0xcc4>
  404e20:	990f      	ldr	r1, [sp, #60]	; 0x3c
  404e22:	4613      	mov	r3, r2
  404e24:	460a      	mov	r2, r1
  404e26:	3204      	adds	r2, #4
  404e28:	880c      	ldrh	r4, [r1, #0]
  404e2a:	920f      	str	r2, [sp, #60]	; 0x3c
  404e2c:	2500      	movs	r5, #0
  404e2e:	e6b0      	b.n	404b92 <_svfprintf_r+0x1e6>
  404e30:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  404e32:	9311      	str	r3, [sp, #68]	; 0x44
  404e34:	6816      	ldr	r6, [r2, #0]
  404e36:	2400      	movs	r4, #0
  404e38:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  404e3c:	1d15      	adds	r5, r2, #4
  404e3e:	2e00      	cmp	r6, #0
  404e40:	f000 86a5 	beq.w	405b8e <_svfprintf_r+0x11e2>
  404e44:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  404e46:	1c53      	adds	r3, r2, #1
  404e48:	f000 8607 	beq.w	405a5a <_svfprintf_r+0x10ae>
  404e4c:	4621      	mov	r1, r4
  404e4e:	4630      	mov	r0, r6
  404e50:	f002 fa7e 	bl	407350 <memchr>
  404e54:	2800      	cmp	r0, #0
  404e56:	f000 86df 	beq.w	405c18 <_svfprintf_r+0x126c>
  404e5a:	1b83      	subs	r3, r0, r6
  404e5c:	930e      	str	r3, [sp, #56]	; 0x38
  404e5e:	940a      	str	r4, [sp, #40]	; 0x28
  404e60:	950f      	str	r5, [sp, #60]	; 0x3c
  404e62:	f8cd b01c 	str.w	fp, [sp, #28]
  404e66:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  404e6a:	9308      	str	r3, [sp, #32]
  404e6c:	9412      	str	r4, [sp, #72]	; 0x48
  404e6e:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  404e72:	e6b3      	b.n	404bdc <_svfprintf_r+0x230>
  404e74:	f89a 3000 	ldrb.w	r3, [sl]
  404e78:	2201      	movs	r2, #1
  404e7a:	212b      	movs	r1, #43	; 0x2b
  404e7c:	e5ee      	b.n	404a5c <_svfprintf_r+0xb0>
  404e7e:	f04b 0b20 	orr.w	fp, fp, #32
  404e82:	f89a 3000 	ldrb.w	r3, [sl]
  404e86:	e5e9      	b.n	404a5c <_svfprintf_r+0xb0>
  404e88:	9311      	str	r3, [sp, #68]	; 0x44
  404e8a:	2a00      	cmp	r2, #0
  404e8c:	f040 878d 	bne.w	405daa <_svfprintf_r+0x13fe>
  404e90:	4b22      	ldr	r3, [pc, #136]	; (404f1c <_svfprintf_r+0x570>)
  404e92:	9318      	str	r3, [sp, #96]	; 0x60
  404e94:	f01b 0f20 	tst.w	fp, #32
  404e98:	f040 8111 	bne.w	4050be <_svfprintf_r+0x712>
  404e9c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  404e9e:	f01b 0f10 	tst.w	fp, #16
  404ea2:	4613      	mov	r3, r2
  404ea4:	f040 83df 	bne.w	405666 <_svfprintf_r+0xcba>
  404ea8:	f01b 0f40 	tst.w	fp, #64	; 0x40
  404eac:	f000 83db 	beq.w	405666 <_svfprintf_r+0xcba>
  404eb0:	3304      	adds	r3, #4
  404eb2:	8814      	ldrh	r4, [r2, #0]
  404eb4:	930f      	str	r3, [sp, #60]	; 0x3c
  404eb6:	2500      	movs	r5, #0
  404eb8:	f01b 0f01 	tst.w	fp, #1
  404ebc:	f000 810c 	beq.w	4050d8 <_svfprintf_r+0x72c>
  404ec0:	ea54 0305 	orrs.w	r3, r4, r5
  404ec4:	f000 8108 	beq.w	4050d8 <_svfprintf_r+0x72c>
  404ec8:	2330      	movs	r3, #48	; 0x30
  404eca:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  404ece:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  404ed2:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  404ed6:	f04b 0b02 	orr.w	fp, fp, #2
  404eda:	2302      	movs	r3, #2
  404edc:	e659      	b.n	404b92 <_svfprintf_r+0x1e6>
  404ede:	f89a 3000 	ldrb.w	r3, [sl]
  404ee2:	2900      	cmp	r1, #0
  404ee4:	f47f adba 	bne.w	404a5c <_svfprintf_r+0xb0>
  404ee8:	2201      	movs	r2, #1
  404eea:	2120      	movs	r1, #32
  404eec:	e5b6      	b.n	404a5c <_svfprintf_r+0xb0>
  404eee:	f04b 0b01 	orr.w	fp, fp, #1
  404ef2:	f89a 3000 	ldrb.w	r3, [sl]
  404ef6:	e5b1      	b.n	404a5c <_svfprintf_r+0xb0>
  404ef8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  404efa:	6823      	ldr	r3, [r4, #0]
  404efc:	930d      	str	r3, [sp, #52]	; 0x34
  404efe:	4618      	mov	r0, r3
  404f00:	2800      	cmp	r0, #0
  404f02:	4623      	mov	r3, r4
  404f04:	f103 0304 	add.w	r3, r3, #4
  404f08:	f6ff ae0a 	blt.w	404b20 <_svfprintf_r+0x174>
  404f0c:	930f      	str	r3, [sp, #60]	; 0x3c
  404f0e:	f89a 3000 	ldrb.w	r3, [sl]
  404f12:	e5a3      	b.n	404a5c <_svfprintf_r+0xb0>
  404f14:	00408dc0 	.word	0x00408dc0
  404f18:	00408dd0 	.word	0x00408dd0
  404f1c:	00408da0 	.word	0x00408da0
  404f20:	f04b 0b10 	orr.w	fp, fp, #16
  404f24:	f01b 0f20 	tst.w	fp, #32
  404f28:	9311      	str	r3, [sp, #68]	; 0x44
  404f2a:	f43f ae23 	beq.w	404b74 <_svfprintf_r+0x1c8>
  404f2e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  404f30:	3507      	adds	r5, #7
  404f32:	f025 0307 	bic.w	r3, r5, #7
  404f36:	f103 0208 	add.w	r2, r3, #8
  404f3a:	e9d3 4500 	ldrd	r4, r5, [r3]
  404f3e:	920f      	str	r2, [sp, #60]	; 0x3c
  404f40:	2301      	movs	r3, #1
  404f42:	e626      	b.n	404b92 <_svfprintf_r+0x1e6>
  404f44:	f89a 3000 	ldrb.w	r3, [sl]
  404f48:	2b2a      	cmp	r3, #42	; 0x2a
  404f4a:	f10a 0401 	add.w	r4, sl, #1
  404f4e:	f000 871f 	beq.w	405d90 <_svfprintf_r+0x13e4>
  404f52:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  404f56:	2809      	cmp	r0, #9
  404f58:	46a2      	mov	sl, r4
  404f5a:	f200 86ab 	bhi.w	405cb4 <_svfprintf_r+0x1308>
  404f5e:	2300      	movs	r3, #0
  404f60:	461c      	mov	r4, r3
  404f62:	f81a 3b01 	ldrb.w	r3, [sl], #1
  404f66:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  404f6a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  404f6e:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  404f72:	2809      	cmp	r0, #9
  404f74:	d9f5      	bls.n	404f62 <_svfprintf_r+0x5b6>
  404f76:	940a      	str	r4, [sp, #40]	; 0x28
  404f78:	e572      	b.n	404a60 <_svfprintf_r+0xb4>
  404f7a:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  404f7e:	f89a 3000 	ldrb.w	r3, [sl]
  404f82:	e56b      	b.n	404a5c <_svfprintf_r+0xb0>
  404f84:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  404f88:	f89a 3000 	ldrb.w	r3, [sl]
  404f8c:	e566      	b.n	404a5c <_svfprintf_r+0xb0>
  404f8e:	f89a 3000 	ldrb.w	r3, [sl]
  404f92:	2b6c      	cmp	r3, #108	; 0x6c
  404f94:	bf03      	ittte	eq
  404f96:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  404f9a:	f04b 0b20 	orreq.w	fp, fp, #32
  404f9e:	f10a 0a01 	addeq.w	sl, sl, #1
  404fa2:	f04b 0b10 	orrne.w	fp, fp, #16
  404fa6:	e559      	b.n	404a5c <_svfprintf_r+0xb0>
  404fa8:	2a00      	cmp	r2, #0
  404faa:	f040 8709 	bne.w	405dc0 <_svfprintf_r+0x1414>
  404fae:	f01b 0f20 	tst.w	fp, #32
  404fb2:	f040 84f7 	bne.w	4059a4 <_svfprintf_r+0xff8>
  404fb6:	f01b 0f10 	tst.w	fp, #16
  404fba:	f040 84aa 	bne.w	405912 <_svfprintf_r+0xf66>
  404fbe:	f01b 0f40 	tst.w	fp, #64	; 0x40
  404fc2:	f000 84a6 	beq.w	405912 <_svfprintf_r+0xf66>
  404fc6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  404fc8:	6813      	ldr	r3, [r2, #0]
  404fca:	3204      	adds	r2, #4
  404fcc:	920f      	str	r2, [sp, #60]	; 0x3c
  404fce:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  404fd2:	801a      	strh	r2, [r3, #0]
  404fd4:	e511      	b.n	4049fa <_svfprintf_r+0x4e>
  404fd6:	990f      	ldr	r1, [sp, #60]	; 0x3c
  404fd8:	4bb2      	ldr	r3, [pc, #712]	; (4052a4 <_svfprintf_r+0x8f8>)
  404fda:	680c      	ldr	r4, [r1, #0]
  404fdc:	9318      	str	r3, [sp, #96]	; 0x60
  404fde:	2230      	movs	r2, #48	; 0x30
  404fe0:	2378      	movs	r3, #120	; 0x78
  404fe2:	3104      	adds	r1, #4
  404fe4:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  404fe8:	9311      	str	r3, [sp, #68]	; 0x44
  404fea:	f04b 0b02 	orr.w	fp, fp, #2
  404fee:	910f      	str	r1, [sp, #60]	; 0x3c
  404ff0:	2500      	movs	r5, #0
  404ff2:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  404ff6:	2302      	movs	r3, #2
  404ff8:	e5cb      	b.n	404b92 <_svfprintf_r+0x1e6>
  404ffa:	990f      	ldr	r1, [sp, #60]	; 0x3c
  404ffc:	9311      	str	r3, [sp, #68]	; 0x44
  404ffe:	680a      	ldr	r2, [r1, #0]
  405000:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  405004:	2300      	movs	r3, #0
  405006:	460a      	mov	r2, r1
  405008:	461f      	mov	r7, r3
  40500a:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  40500e:	3204      	adds	r2, #4
  405010:	2301      	movs	r3, #1
  405012:	9308      	str	r3, [sp, #32]
  405014:	f8cd b01c 	str.w	fp, [sp, #28]
  405018:	970a      	str	r7, [sp, #40]	; 0x28
  40501a:	9712      	str	r7, [sp, #72]	; 0x48
  40501c:	920f      	str	r2, [sp, #60]	; 0x3c
  40501e:	930e      	str	r3, [sp, #56]	; 0x38
  405020:	ae28      	add	r6, sp, #160	; 0xa0
  405022:	e5df      	b.n	404be4 <_svfprintf_r+0x238>
  405024:	9311      	str	r3, [sp, #68]	; 0x44
  405026:	2a00      	cmp	r2, #0
  405028:	f040 86e2 	bne.w	405df0 <_svfprintf_r+0x1444>
  40502c:	f01b 0f20 	tst.w	fp, #32
  405030:	d15d      	bne.n	4050ee <_svfprintf_r+0x742>
  405032:	f01b 0f10 	tst.w	fp, #16
  405036:	f040 8306 	bne.w	405646 <_svfprintf_r+0xc9a>
  40503a:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40503e:	f000 8302 	beq.w	405646 <_svfprintf_r+0xc9a>
  405042:	990f      	ldr	r1, [sp, #60]	; 0x3c
  405044:	f9b1 4000 	ldrsh.w	r4, [r1]
  405048:	3104      	adds	r1, #4
  40504a:	17e5      	asrs	r5, r4, #31
  40504c:	4622      	mov	r2, r4
  40504e:	462b      	mov	r3, r5
  405050:	910f      	str	r1, [sp, #60]	; 0x3c
  405052:	2a00      	cmp	r2, #0
  405054:	f173 0300 	sbcs.w	r3, r3, #0
  405058:	db58      	blt.n	40510c <_svfprintf_r+0x760>
  40505a:	990a      	ldr	r1, [sp, #40]	; 0x28
  40505c:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  405060:	1c4a      	adds	r2, r1, #1
  405062:	f04f 0301 	mov.w	r3, #1
  405066:	f47f ad9b 	bne.w	404ba0 <_svfprintf_r+0x1f4>
  40506a:	ea54 0205 	orrs.w	r2, r4, r5
  40506e:	f000 81dc 	beq.w	40542a <_svfprintf_r+0xa7e>
  405072:	f8cd b01c 	str.w	fp, [sp, #28]
  405076:	2b01      	cmp	r3, #1
  405078:	f000 8278 	beq.w	40556c <_svfprintf_r+0xbc0>
  40507c:	2b02      	cmp	r3, #2
  40507e:	f040 8203 	bne.w	405488 <_svfprintf_r+0xadc>
  405082:	9818      	ldr	r0, [sp, #96]	; 0x60
  405084:	464e      	mov	r6, r9
  405086:	0923      	lsrs	r3, r4, #4
  405088:	f004 010f 	and.w	r1, r4, #15
  40508c:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  405090:	092a      	lsrs	r2, r5, #4
  405092:	461c      	mov	r4, r3
  405094:	4615      	mov	r5, r2
  405096:	5c43      	ldrb	r3, [r0, r1]
  405098:	f806 3d01 	strb.w	r3, [r6, #-1]!
  40509c:	ea54 0305 	orrs.w	r3, r4, r5
  4050a0:	d1f1      	bne.n	405086 <_svfprintf_r+0x6da>
  4050a2:	eba9 0306 	sub.w	r3, r9, r6
  4050a6:	930e      	str	r3, [sp, #56]	; 0x38
  4050a8:	e590      	b.n	404bcc <_svfprintf_r+0x220>
  4050aa:	9311      	str	r3, [sp, #68]	; 0x44
  4050ac:	2a00      	cmp	r2, #0
  4050ae:	f040 869b 	bne.w	405de8 <_svfprintf_r+0x143c>
  4050b2:	4b7d      	ldr	r3, [pc, #500]	; (4052a8 <_svfprintf_r+0x8fc>)
  4050b4:	9318      	str	r3, [sp, #96]	; 0x60
  4050b6:	f01b 0f20 	tst.w	fp, #32
  4050ba:	f43f aeef 	beq.w	404e9c <_svfprintf_r+0x4f0>
  4050be:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4050c0:	3507      	adds	r5, #7
  4050c2:	f025 0307 	bic.w	r3, r5, #7
  4050c6:	f103 0208 	add.w	r2, r3, #8
  4050ca:	f01b 0f01 	tst.w	fp, #1
  4050ce:	920f      	str	r2, [sp, #60]	; 0x3c
  4050d0:	e9d3 4500 	ldrd	r4, r5, [r3]
  4050d4:	f47f aef4 	bne.w	404ec0 <_svfprintf_r+0x514>
  4050d8:	2302      	movs	r3, #2
  4050da:	e55a      	b.n	404b92 <_svfprintf_r+0x1e6>
  4050dc:	9311      	str	r3, [sp, #68]	; 0x44
  4050de:	2a00      	cmp	r2, #0
  4050e0:	f040 867e 	bne.w	405de0 <_svfprintf_r+0x1434>
  4050e4:	f04b 0b10 	orr.w	fp, fp, #16
  4050e8:	f01b 0f20 	tst.w	fp, #32
  4050ec:	d0a1      	beq.n	405032 <_svfprintf_r+0x686>
  4050ee:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4050f0:	3507      	adds	r5, #7
  4050f2:	f025 0507 	bic.w	r5, r5, #7
  4050f6:	e9d5 2300 	ldrd	r2, r3, [r5]
  4050fa:	2a00      	cmp	r2, #0
  4050fc:	f105 0108 	add.w	r1, r5, #8
  405100:	461d      	mov	r5, r3
  405102:	f173 0300 	sbcs.w	r3, r3, #0
  405106:	910f      	str	r1, [sp, #60]	; 0x3c
  405108:	4614      	mov	r4, r2
  40510a:	daa6      	bge.n	40505a <_svfprintf_r+0x6ae>
  40510c:	272d      	movs	r7, #45	; 0x2d
  40510e:	4264      	negs	r4, r4
  405110:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  405114:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  405118:	2301      	movs	r3, #1
  40511a:	e53d      	b.n	404b98 <_svfprintf_r+0x1ec>
  40511c:	9311      	str	r3, [sp, #68]	; 0x44
  40511e:	2a00      	cmp	r2, #0
  405120:	f040 865a 	bne.w	405dd8 <_svfprintf_r+0x142c>
  405124:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  405126:	3507      	adds	r5, #7
  405128:	f025 0307 	bic.w	r3, r5, #7
  40512c:	f103 0208 	add.w	r2, r3, #8
  405130:	920f      	str	r2, [sp, #60]	; 0x3c
  405132:	681a      	ldr	r2, [r3, #0]
  405134:	9214      	str	r2, [sp, #80]	; 0x50
  405136:	685b      	ldr	r3, [r3, #4]
  405138:	9315      	str	r3, [sp, #84]	; 0x54
  40513a:	9b15      	ldr	r3, [sp, #84]	; 0x54
  40513c:	9d14      	ldr	r5, [sp, #80]	; 0x50
  40513e:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  405142:	4628      	mov	r0, r5
  405144:	4621      	mov	r1, r4
  405146:	f04f 32ff 	mov.w	r2, #4294967295
  40514a:	4b58      	ldr	r3, [pc, #352]	; (4052ac <_svfprintf_r+0x900>)
  40514c:	f003 fb12 	bl	408774 <__aeabi_dcmpun>
  405150:	2800      	cmp	r0, #0
  405152:	f040 8348 	bne.w	4057e6 <_svfprintf_r+0xe3a>
  405156:	4628      	mov	r0, r5
  405158:	4621      	mov	r1, r4
  40515a:	f04f 32ff 	mov.w	r2, #4294967295
  40515e:	4b53      	ldr	r3, [pc, #332]	; (4052ac <_svfprintf_r+0x900>)
  405160:	f003 faea 	bl	408738 <__aeabi_dcmple>
  405164:	2800      	cmp	r0, #0
  405166:	f040 833e 	bne.w	4057e6 <_svfprintf_r+0xe3a>
  40516a:	a814      	add	r0, sp, #80	; 0x50
  40516c:	c80f      	ldmia	r0, {r0, r1, r2, r3}
  40516e:	f003 fad9 	bl	408724 <__aeabi_dcmplt>
  405172:	2800      	cmp	r0, #0
  405174:	f040 852f 	bne.w	405bd6 <_svfprintf_r+0x122a>
  405178:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40517c:	4e4c      	ldr	r6, [pc, #304]	; (4052b0 <_svfprintf_r+0x904>)
  40517e:	4b4d      	ldr	r3, [pc, #308]	; (4052b4 <_svfprintf_r+0x908>)
  405180:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  405184:	9007      	str	r0, [sp, #28]
  405186:	9811      	ldr	r0, [sp, #68]	; 0x44
  405188:	2203      	movs	r2, #3
  40518a:	2100      	movs	r1, #0
  40518c:	9208      	str	r2, [sp, #32]
  40518e:	910a      	str	r1, [sp, #40]	; 0x28
  405190:	2847      	cmp	r0, #71	; 0x47
  405192:	bfd8      	it	le
  405194:	461e      	movle	r6, r3
  405196:	920e      	str	r2, [sp, #56]	; 0x38
  405198:	9112      	str	r1, [sp, #72]	; 0x48
  40519a:	e51f      	b.n	404bdc <_svfprintf_r+0x230>
  40519c:	f04b 0b08 	orr.w	fp, fp, #8
  4051a0:	f89a 3000 	ldrb.w	r3, [sl]
  4051a4:	e45a      	b.n	404a5c <_svfprintf_r+0xb0>
  4051a6:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4051aa:	2300      	movs	r3, #0
  4051ac:	461c      	mov	r4, r3
  4051ae:	f81a 3b01 	ldrb.w	r3, [sl], #1
  4051b2:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  4051b6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  4051ba:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4051be:	2809      	cmp	r0, #9
  4051c0:	d9f5      	bls.n	4051ae <_svfprintf_r+0x802>
  4051c2:	940d      	str	r4, [sp, #52]	; 0x34
  4051c4:	e44c      	b.n	404a60 <_svfprintf_r+0xb4>
  4051c6:	f04b 0b10 	orr.w	fp, fp, #16
  4051ca:	9311      	str	r3, [sp, #68]	; 0x44
  4051cc:	f01b 0320 	ands.w	r3, fp, #32
  4051d0:	f43f ae1e 	beq.w	404e10 <_svfprintf_r+0x464>
  4051d4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4051d6:	3507      	adds	r5, #7
  4051d8:	f025 0307 	bic.w	r3, r5, #7
  4051dc:	f103 0208 	add.w	r2, r3, #8
  4051e0:	e9d3 4500 	ldrd	r4, r5, [r3]
  4051e4:	920f      	str	r2, [sp, #60]	; 0x3c
  4051e6:	2300      	movs	r3, #0
  4051e8:	e4d3      	b.n	404b92 <_svfprintf_r+0x1e6>
  4051ea:	9311      	str	r3, [sp, #68]	; 0x44
  4051ec:	2a00      	cmp	r2, #0
  4051ee:	f040 85e0 	bne.w	405db2 <_svfprintf_r+0x1406>
  4051f2:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4051f4:	2a00      	cmp	r2, #0
  4051f6:	f43f aca4 	beq.w	404b42 <_svfprintf_r+0x196>
  4051fa:	2300      	movs	r3, #0
  4051fc:	2101      	movs	r1, #1
  4051fe:	461f      	mov	r7, r3
  405200:	9108      	str	r1, [sp, #32]
  405202:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  405206:	f8cd b01c 	str.w	fp, [sp, #28]
  40520a:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  40520e:	930a      	str	r3, [sp, #40]	; 0x28
  405210:	9312      	str	r3, [sp, #72]	; 0x48
  405212:	910e      	str	r1, [sp, #56]	; 0x38
  405214:	ae28      	add	r6, sp, #160	; 0xa0
  405216:	e4e5      	b.n	404be4 <_svfprintf_r+0x238>
  405218:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40521a:	e535      	b.n	404c88 <_svfprintf_r+0x2dc>
  40521c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40521e:	2b65      	cmp	r3, #101	; 0x65
  405220:	f340 80a6 	ble.w	405370 <_svfprintf_r+0x9c4>
  405224:	a814      	add	r0, sp, #80	; 0x50
  405226:	c80f      	ldmia	r0, {r0, r1, r2, r3}
  405228:	f003 fa72 	bl	408710 <__aeabi_dcmpeq>
  40522c:	2800      	cmp	r0, #0
  40522e:	f000 814f 	beq.w	4054d0 <_svfprintf_r+0xb24>
  405232:	9b26      	ldr	r3, [sp, #152]	; 0x98
  405234:	4a20      	ldr	r2, [pc, #128]	; (4052b8 <_svfprintf_r+0x90c>)
  405236:	f8c8 2000 	str.w	r2, [r8]
  40523a:	3301      	adds	r3, #1
  40523c:	3401      	adds	r4, #1
  40523e:	2201      	movs	r2, #1
  405240:	2b07      	cmp	r3, #7
  405242:	9427      	str	r4, [sp, #156]	; 0x9c
  405244:	9326      	str	r3, [sp, #152]	; 0x98
  405246:	f8c8 2004 	str.w	r2, [r8, #4]
  40524a:	f300 836a 	bgt.w	405922 <_svfprintf_r+0xf76>
  40524e:	f108 0808 	add.w	r8, r8, #8
  405252:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  405254:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  405256:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  405258:	4293      	cmp	r3, r2
  40525a:	db03      	blt.n	405264 <_svfprintf_r+0x8b8>
  40525c:	9b07      	ldr	r3, [sp, #28]
  40525e:	07dd      	lsls	r5, r3, #31
  405260:	f57f ad84 	bpl.w	404d6c <_svfprintf_r+0x3c0>
  405264:	9b26      	ldr	r3, [sp, #152]	; 0x98
  405266:	9919      	ldr	r1, [sp, #100]	; 0x64
  405268:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  40526a:	f8c8 2000 	str.w	r2, [r8]
  40526e:	3301      	adds	r3, #1
  405270:	440c      	add	r4, r1
  405272:	2b07      	cmp	r3, #7
  405274:	f8c8 1004 	str.w	r1, [r8, #4]
  405278:	9427      	str	r4, [sp, #156]	; 0x9c
  40527a:	9326      	str	r3, [sp, #152]	; 0x98
  40527c:	f300 839e 	bgt.w	4059bc <_svfprintf_r+0x1010>
  405280:	f108 0808 	add.w	r8, r8, #8
  405284:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  405286:	1e5e      	subs	r6, r3, #1
  405288:	2e00      	cmp	r6, #0
  40528a:	f77f ad6f 	ble.w	404d6c <_svfprintf_r+0x3c0>
  40528e:	2e10      	cmp	r6, #16
  405290:	9b26      	ldr	r3, [sp, #152]	; 0x98
  405292:	4d0a      	ldr	r5, [pc, #40]	; (4052bc <_svfprintf_r+0x910>)
  405294:	f340 81f5 	ble.w	405682 <_svfprintf_r+0xcd6>
  405298:	4622      	mov	r2, r4
  40529a:	2710      	movs	r7, #16
  40529c:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  4052a0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  4052a2:	e013      	b.n	4052cc <_svfprintf_r+0x920>
  4052a4:	00408da0 	.word	0x00408da0
  4052a8:	00408d8c 	.word	0x00408d8c
  4052ac:	7fefffff 	.word	0x7fefffff
  4052b0:	00408d80 	.word	0x00408d80
  4052b4:	00408d7c 	.word	0x00408d7c
  4052b8:	00408dbc 	.word	0x00408dbc
  4052bc:	00408dd0 	.word	0x00408dd0
  4052c0:	f108 0808 	add.w	r8, r8, #8
  4052c4:	3e10      	subs	r6, #16
  4052c6:	2e10      	cmp	r6, #16
  4052c8:	f340 81da 	ble.w	405680 <_svfprintf_r+0xcd4>
  4052cc:	3301      	adds	r3, #1
  4052ce:	3210      	adds	r2, #16
  4052d0:	2b07      	cmp	r3, #7
  4052d2:	9227      	str	r2, [sp, #156]	; 0x9c
  4052d4:	9326      	str	r3, [sp, #152]	; 0x98
  4052d6:	e888 00a0 	stmia.w	r8, {r5, r7}
  4052da:	ddf1      	ble.n	4052c0 <_svfprintf_r+0x914>
  4052dc:	aa25      	add	r2, sp, #148	; 0x94
  4052de:	4621      	mov	r1, r4
  4052e0:	4658      	mov	r0, fp
  4052e2:	f002 fd5b 	bl	407d9c <__ssprint_r>
  4052e6:	2800      	cmp	r0, #0
  4052e8:	f47f ac32 	bne.w	404b50 <_svfprintf_r+0x1a4>
  4052ec:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4052ee:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4052f0:	46c8      	mov	r8, r9
  4052f2:	e7e7      	b.n	4052c4 <_svfprintf_r+0x918>
  4052f4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4052f6:	9a08      	ldr	r2, [sp, #32]
  4052f8:	1a9f      	subs	r7, r3, r2
  4052fa:	2f00      	cmp	r7, #0
  4052fc:	f77f ace7 	ble.w	404cce <_svfprintf_r+0x322>
  405300:	2f10      	cmp	r7, #16
  405302:	9b26      	ldr	r3, [sp, #152]	; 0x98
  405304:	4db6      	ldr	r5, [pc, #728]	; (4055e0 <_svfprintf_r+0xc34>)
  405306:	dd27      	ble.n	405358 <_svfprintf_r+0x9ac>
  405308:	4642      	mov	r2, r8
  40530a:	4621      	mov	r1, r4
  40530c:	46b0      	mov	r8, r6
  40530e:	f04f 0b10 	mov.w	fp, #16
  405312:	462e      	mov	r6, r5
  405314:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  405316:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  405318:	e004      	b.n	405324 <_svfprintf_r+0x978>
  40531a:	3f10      	subs	r7, #16
  40531c:	2f10      	cmp	r7, #16
  40531e:	f102 0208 	add.w	r2, r2, #8
  405322:	dd15      	ble.n	405350 <_svfprintf_r+0x9a4>
  405324:	3301      	adds	r3, #1
  405326:	3110      	adds	r1, #16
  405328:	2b07      	cmp	r3, #7
  40532a:	9127      	str	r1, [sp, #156]	; 0x9c
  40532c:	9326      	str	r3, [sp, #152]	; 0x98
  40532e:	e882 0840 	stmia.w	r2, {r6, fp}
  405332:	ddf2      	ble.n	40531a <_svfprintf_r+0x96e>
  405334:	aa25      	add	r2, sp, #148	; 0x94
  405336:	4629      	mov	r1, r5
  405338:	4620      	mov	r0, r4
  40533a:	f002 fd2f 	bl	407d9c <__ssprint_r>
  40533e:	2800      	cmp	r0, #0
  405340:	f47f ac06 	bne.w	404b50 <_svfprintf_r+0x1a4>
  405344:	3f10      	subs	r7, #16
  405346:	2f10      	cmp	r7, #16
  405348:	9927      	ldr	r1, [sp, #156]	; 0x9c
  40534a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40534c:	464a      	mov	r2, r9
  40534e:	dce9      	bgt.n	405324 <_svfprintf_r+0x978>
  405350:	4635      	mov	r5, r6
  405352:	460c      	mov	r4, r1
  405354:	4646      	mov	r6, r8
  405356:	4690      	mov	r8, r2
  405358:	3301      	adds	r3, #1
  40535a:	443c      	add	r4, r7
  40535c:	2b07      	cmp	r3, #7
  40535e:	9427      	str	r4, [sp, #156]	; 0x9c
  405360:	9326      	str	r3, [sp, #152]	; 0x98
  405362:	e888 00a0 	stmia.w	r8, {r5, r7}
  405366:	f300 8232 	bgt.w	4057ce <_svfprintf_r+0xe22>
  40536a:	f108 0808 	add.w	r8, r8, #8
  40536e:	e4ae      	b.n	404cce <_svfprintf_r+0x322>
  405370:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  405372:	9f26      	ldr	r7, [sp, #152]	; 0x98
  405374:	2b01      	cmp	r3, #1
  405376:	f340 81fe 	ble.w	405776 <_svfprintf_r+0xdca>
  40537a:	3701      	adds	r7, #1
  40537c:	3401      	adds	r4, #1
  40537e:	2301      	movs	r3, #1
  405380:	2f07      	cmp	r7, #7
  405382:	9427      	str	r4, [sp, #156]	; 0x9c
  405384:	9726      	str	r7, [sp, #152]	; 0x98
  405386:	f8c8 6000 	str.w	r6, [r8]
  40538a:	f8c8 3004 	str.w	r3, [r8, #4]
  40538e:	f300 8203 	bgt.w	405798 <_svfprintf_r+0xdec>
  405392:	f108 0808 	add.w	r8, r8, #8
  405396:	9a19      	ldr	r2, [sp, #100]	; 0x64
  405398:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  40539a:	f8c8 3000 	str.w	r3, [r8]
  40539e:	3701      	adds	r7, #1
  4053a0:	4414      	add	r4, r2
  4053a2:	2f07      	cmp	r7, #7
  4053a4:	9427      	str	r4, [sp, #156]	; 0x9c
  4053a6:	9726      	str	r7, [sp, #152]	; 0x98
  4053a8:	f8c8 2004 	str.w	r2, [r8, #4]
  4053ac:	f300 8200 	bgt.w	4057b0 <_svfprintf_r+0xe04>
  4053b0:	f108 0808 	add.w	r8, r8, #8
  4053b4:	a814      	add	r0, sp, #80	; 0x50
  4053b6:	c80f      	ldmia	r0, {r0, r1, r2, r3}
  4053b8:	f003 f9aa 	bl	408710 <__aeabi_dcmpeq>
  4053bc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4053be:	2800      	cmp	r0, #0
  4053c0:	f040 8101 	bne.w	4055c6 <_svfprintf_r+0xc1a>
  4053c4:	3b01      	subs	r3, #1
  4053c6:	3701      	adds	r7, #1
  4053c8:	3601      	adds	r6, #1
  4053ca:	441c      	add	r4, r3
  4053cc:	2f07      	cmp	r7, #7
  4053ce:	9726      	str	r7, [sp, #152]	; 0x98
  4053d0:	9427      	str	r4, [sp, #156]	; 0x9c
  4053d2:	f8c8 6000 	str.w	r6, [r8]
  4053d6:	f8c8 3004 	str.w	r3, [r8, #4]
  4053da:	f300 8128 	bgt.w	40562e <_svfprintf_r+0xc82>
  4053de:	f108 0808 	add.w	r8, r8, #8
  4053e2:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  4053e4:	f8c8 2004 	str.w	r2, [r8, #4]
  4053e8:	3701      	adds	r7, #1
  4053ea:	4414      	add	r4, r2
  4053ec:	ab21      	add	r3, sp, #132	; 0x84
  4053ee:	2f07      	cmp	r7, #7
  4053f0:	9427      	str	r4, [sp, #156]	; 0x9c
  4053f2:	9726      	str	r7, [sp, #152]	; 0x98
  4053f4:	f8c8 3000 	str.w	r3, [r8]
  4053f8:	f77f acb6 	ble.w	404d68 <_svfprintf_r+0x3bc>
  4053fc:	aa25      	add	r2, sp, #148	; 0x94
  4053fe:	990b      	ldr	r1, [sp, #44]	; 0x2c
  405400:	980c      	ldr	r0, [sp, #48]	; 0x30
  405402:	f002 fccb 	bl	407d9c <__ssprint_r>
  405406:	2800      	cmp	r0, #0
  405408:	f47f aba2 	bne.w	404b50 <_svfprintf_r+0x1a4>
  40540c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40540e:	46c8      	mov	r8, r9
  405410:	e4ac      	b.n	404d6c <_svfprintf_r+0x3c0>
  405412:	aa25      	add	r2, sp, #148	; 0x94
  405414:	990b      	ldr	r1, [sp, #44]	; 0x2c
  405416:	980c      	ldr	r0, [sp, #48]	; 0x30
  405418:	f002 fcc0 	bl	407d9c <__ssprint_r>
  40541c:	2800      	cmp	r0, #0
  40541e:	f43f acee 	beq.w	404dfe <_svfprintf_r+0x452>
  405422:	f7ff bb95 	b.w	404b50 <_svfprintf_r+0x1a4>
  405426:	f8dd b01c 	ldr.w	fp, [sp, #28]
  40542a:	2b01      	cmp	r3, #1
  40542c:	f000 8135 	beq.w	40569a <_svfprintf_r+0xcee>
  405430:	2b02      	cmp	r3, #2
  405432:	d125      	bne.n	405480 <_svfprintf_r+0xad4>
  405434:	f8cd b01c 	str.w	fp, [sp, #28]
  405438:	2400      	movs	r4, #0
  40543a:	2500      	movs	r5, #0
  40543c:	e621      	b.n	405082 <_svfprintf_r+0x6d6>
  40543e:	aa25      	add	r2, sp, #148	; 0x94
  405440:	990b      	ldr	r1, [sp, #44]	; 0x2c
  405442:	980c      	ldr	r0, [sp, #48]	; 0x30
  405444:	f002 fcaa 	bl	407d9c <__ssprint_r>
  405448:	2800      	cmp	r0, #0
  40544a:	f47f ab81 	bne.w	404b50 <_svfprintf_r+0x1a4>
  40544e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  405450:	46c8      	mov	r8, r9
  405452:	e478      	b.n	404d46 <_svfprintf_r+0x39a>
  405454:	aa25      	add	r2, sp, #148	; 0x94
  405456:	990b      	ldr	r1, [sp, #44]	; 0x2c
  405458:	980c      	ldr	r0, [sp, #48]	; 0x30
  40545a:	f002 fc9f 	bl	407d9c <__ssprint_r>
  40545e:	2800      	cmp	r0, #0
  405460:	f47f ab76 	bne.w	404b50 <_svfprintf_r+0x1a4>
  405464:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  405466:	46c8      	mov	r8, r9
  405468:	e41e      	b.n	404ca8 <_svfprintf_r+0x2fc>
  40546a:	aa25      	add	r2, sp, #148	; 0x94
  40546c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40546e:	980c      	ldr	r0, [sp, #48]	; 0x30
  405470:	f002 fc94 	bl	407d9c <__ssprint_r>
  405474:	2800      	cmp	r0, #0
  405476:	f47f ab6b 	bne.w	404b50 <_svfprintf_r+0x1a4>
  40547a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40547c:	46c8      	mov	r8, r9
  40547e:	e423      	b.n	404cc8 <_svfprintf_r+0x31c>
  405480:	f8cd b01c 	str.w	fp, [sp, #28]
  405484:	2400      	movs	r4, #0
  405486:	2500      	movs	r5, #0
  405488:	4649      	mov	r1, r9
  40548a:	e000      	b.n	40548e <_svfprintf_r+0xae2>
  40548c:	4631      	mov	r1, r6
  40548e:	08e2      	lsrs	r2, r4, #3
  405490:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  405494:	08e8      	lsrs	r0, r5, #3
  405496:	f004 0307 	and.w	r3, r4, #7
  40549a:	4605      	mov	r5, r0
  40549c:	4614      	mov	r4, r2
  40549e:	3330      	adds	r3, #48	; 0x30
  4054a0:	ea54 0205 	orrs.w	r2, r4, r5
  4054a4:	f801 3c01 	strb.w	r3, [r1, #-1]
  4054a8:	f101 36ff 	add.w	r6, r1, #4294967295
  4054ac:	d1ee      	bne.n	40548c <_svfprintf_r+0xae0>
  4054ae:	9a07      	ldr	r2, [sp, #28]
  4054b0:	07d2      	lsls	r2, r2, #31
  4054b2:	f57f adf6 	bpl.w	4050a2 <_svfprintf_r+0x6f6>
  4054b6:	2b30      	cmp	r3, #48	; 0x30
  4054b8:	f43f adf3 	beq.w	4050a2 <_svfprintf_r+0x6f6>
  4054bc:	3902      	subs	r1, #2
  4054be:	2330      	movs	r3, #48	; 0x30
  4054c0:	f806 3c01 	strb.w	r3, [r6, #-1]
  4054c4:	eba9 0301 	sub.w	r3, r9, r1
  4054c8:	930e      	str	r3, [sp, #56]	; 0x38
  4054ca:	460e      	mov	r6, r1
  4054cc:	f7ff bb7e 	b.w	404bcc <_svfprintf_r+0x220>
  4054d0:	991f      	ldr	r1, [sp, #124]	; 0x7c
  4054d2:	2900      	cmp	r1, #0
  4054d4:	f340 822f 	ble.w	405936 <_svfprintf_r+0xf8a>
  4054d8:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4054da:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4054dc:	4293      	cmp	r3, r2
  4054de:	bfa8      	it	ge
  4054e0:	4613      	movge	r3, r2
  4054e2:	2b00      	cmp	r3, #0
  4054e4:	461f      	mov	r7, r3
  4054e6:	dd0d      	ble.n	405504 <_svfprintf_r+0xb58>
  4054e8:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4054ea:	f8c8 6000 	str.w	r6, [r8]
  4054ee:	3301      	adds	r3, #1
  4054f0:	443c      	add	r4, r7
  4054f2:	2b07      	cmp	r3, #7
  4054f4:	9427      	str	r4, [sp, #156]	; 0x9c
  4054f6:	f8c8 7004 	str.w	r7, [r8, #4]
  4054fa:	9326      	str	r3, [sp, #152]	; 0x98
  4054fc:	f300 8320 	bgt.w	405b40 <_svfprintf_r+0x1194>
  405500:	f108 0808 	add.w	r8, r8, #8
  405504:	9b12      	ldr	r3, [sp, #72]	; 0x48
  405506:	2f00      	cmp	r7, #0
  405508:	bfa8      	it	ge
  40550a:	1bdb      	subge	r3, r3, r7
  40550c:	2b00      	cmp	r3, #0
  40550e:	461f      	mov	r7, r3
  405510:	f340 80d7 	ble.w	4056c2 <_svfprintf_r+0xd16>
  405514:	2f10      	cmp	r7, #16
  405516:	9b26      	ldr	r3, [sp, #152]	; 0x98
  405518:	4d31      	ldr	r5, [pc, #196]	; (4055e0 <_svfprintf_r+0xc34>)
  40551a:	f340 81ee 	ble.w	4058fa <_svfprintf_r+0xf4e>
  40551e:	4642      	mov	r2, r8
  405520:	4621      	mov	r1, r4
  405522:	46b0      	mov	r8, r6
  405524:	f04f 0b10 	mov.w	fp, #16
  405528:	462e      	mov	r6, r5
  40552a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40552c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  40552e:	e004      	b.n	40553a <_svfprintf_r+0xb8e>
  405530:	3208      	adds	r2, #8
  405532:	3f10      	subs	r7, #16
  405534:	2f10      	cmp	r7, #16
  405536:	f340 81dc 	ble.w	4058f2 <_svfprintf_r+0xf46>
  40553a:	3301      	adds	r3, #1
  40553c:	3110      	adds	r1, #16
  40553e:	2b07      	cmp	r3, #7
  405540:	9127      	str	r1, [sp, #156]	; 0x9c
  405542:	9326      	str	r3, [sp, #152]	; 0x98
  405544:	e882 0840 	stmia.w	r2, {r6, fp}
  405548:	ddf2      	ble.n	405530 <_svfprintf_r+0xb84>
  40554a:	aa25      	add	r2, sp, #148	; 0x94
  40554c:	4629      	mov	r1, r5
  40554e:	4620      	mov	r0, r4
  405550:	f002 fc24 	bl	407d9c <__ssprint_r>
  405554:	2800      	cmp	r0, #0
  405556:	f47f aafb 	bne.w	404b50 <_svfprintf_r+0x1a4>
  40555a:	9927      	ldr	r1, [sp, #156]	; 0x9c
  40555c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40555e:	464a      	mov	r2, r9
  405560:	e7e7      	b.n	405532 <_svfprintf_r+0xb86>
  405562:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405564:	930e      	str	r3, [sp, #56]	; 0x38
  405566:	464e      	mov	r6, r9
  405568:	f7ff bb30 	b.w	404bcc <_svfprintf_r+0x220>
  40556c:	2d00      	cmp	r5, #0
  40556e:	bf08      	it	eq
  405570:	2c0a      	cmpeq	r4, #10
  405572:	f0c0 8090 	bcc.w	405696 <_svfprintf_r+0xcea>
  405576:	464e      	mov	r6, r9
  405578:	4620      	mov	r0, r4
  40557a:	4629      	mov	r1, r5
  40557c:	220a      	movs	r2, #10
  40557e:	2300      	movs	r3, #0
  405580:	f7fe fd8c 	bl	40409c <__aeabi_uldivmod>
  405584:	3230      	adds	r2, #48	; 0x30
  405586:	f806 2d01 	strb.w	r2, [r6, #-1]!
  40558a:	4620      	mov	r0, r4
  40558c:	4629      	mov	r1, r5
  40558e:	2300      	movs	r3, #0
  405590:	220a      	movs	r2, #10
  405592:	f7fe fd83 	bl	40409c <__aeabi_uldivmod>
  405596:	4604      	mov	r4, r0
  405598:	460d      	mov	r5, r1
  40559a:	ea54 0305 	orrs.w	r3, r4, r5
  40559e:	d1eb      	bne.n	405578 <_svfprintf_r+0xbcc>
  4055a0:	eba9 0306 	sub.w	r3, r9, r6
  4055a4:	930e      	str	r3, [sp, #56]	; 0x38
  4055a6:	f7ff bb11 	b.w	404bcc <_svfprintf_r+0x220>
  4055aa:	aa25      	add	r2, sp, #148	; 0x94
  4055ac:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4055ae:	980c      	ldr	r0, [sp, #48]	; 0x30
  4055b0:	f002 fbf4 	bl	407d9c <__ssprint_r>
  4055b4:	2800      	cmp	r0, #0
  4055b6:	f47f aacb 	bne.w	404b50 <_svfprintf_r+0x1a4>
  4055ba:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4055be:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4055c0:	46c8      	mov	r8, r9
  4055c2:	f7ff bb61 	b.w	404c88 <_svfprintf_r+0x2dc>
  4055c6:	1e5e      	subs	r6, r3, #1
  4055c8:	2e00      	cmp	r6, #0
  4055ca:	f77f af0a 	ble.w	4053e2 <_svfprintf_r+0xa36>
  4055ce:	2e10      	cmp	r6, #16
  4055d0:	4d03      	ldr	r5, [pc, #12]	; (4055e0 <_svfprintf_r+0xc34>)
  4055d2:	dd23      	ble.n	40561c <_svfprintf_r+0xc70>
  4055d4:	4622      	mov	r2, r4
  4055d6:	f04f 0b10 	mov.w	fp, #16
  4055da:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4055dc:	e007      	b.n	4055ee <_svfprintf_r+0xc42>
  4055de:	bf00      	nop
  4055e0:	00408dd0 	.word	0x00408dd0
  4055e4:	3e10      	subs	r6, #16
  4055e6:	2e10      	cmp	r6, #16
  4055e8:	f108 0808 	add.w	r8, r8, #8
  4055ec:	dd15      	ble.n	40561a <_svfprintf_r+0xc6e>
  4055ee:	3701      	adds	r7, #1
  4055f0:	3210      	adds	r2, #16
  4055f2:	2f07      	cmp	r7, #7
  4055f4:	9227      	str	r2, [sp, #156]	; 0x9c
  4055f6:	9726      	str	r7, [sp, #152]	; 0x98
  4055f8:	e888 0820 	stmia.w	r8, {r5, fp}
  4055fc:	ddf2      	ble.n	4055e4 <_svfprintf_r+0xc38>
  4055fe:	aa25      	add	r2, sp, #148	; 0x94
  405600:	990b      	ldr	r1, [sp, #44]	; 0x2c
  405602:	4620      	mov	r0, r4
  405604:	f002 fbca 	bl	407d9c <__ssprint_r>
  405608:	2800      	cmp	r0, #0
  40560a:	f47f aaa1 	bne.w	404b50 <_svfprintf_r+0x1a4>
  40560e:	3e10      	subs	r6, #16
  405610:	2e10      	cmp	r6, #16
  405612:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  405614:	9f26      	ldr	r7, [sp, #152]	; 0x98
  405616:	46c8      	mov	r8, r9
  405618:	dce9      	bgt.n	4055ee <_svfprintf_r+0xc42>
  40561a:	4614      	mov	r4, r2
  40561c:	3701      	adds	r7, #1
  40561e:	4434      	add	r4, r6
  405620:	2f07      	cmp	r7, #7
  405622:	9427      	str	r4, [sp, #156]	; 0x9c
  405624:	9726      	str	r7, [sp, #152]	; 0x98
  405626:	e888 0060 	stmia.w	r8, {r5, r6}
  40562a:	f77f aed8 	ble.w	4053de <_svfprintf_r+0xa32>
  40562e:	aa25      	add	r2, sp, #148	; 0x94
  405630:	990b      	ldr	r1, [sp, #44]	; 0x2c
  405632:	980c      	ldr	r0, [sp, #48]	; 0x30
  405634:	f002 fbb2 	bl	407d9c <__ssprint_r>
  405638:	2800      	cmp	r0, #0
  40563a:	f47f aa89 	bne.w	404b50 <_svfprintf_r+0x1a4>
  40563e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  405640:	9f26      	ldr	r7, [sp, #152]	; 0x98
  405642:	46c8      	mov	r8, r9
  405644:	e6cd      	b.n	4053e2 <_svfprintf_r+0xa36>
  405646:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  405648:	6814      	ldr	r4, [r2, #0]
  40564a:	4613      	mov	r3, r2
  40564c:	3304      	adds	r3, #4
  40564e:	17e5      	asrs	r5, r4, #31
  405650:	930f      	str	r3, [sp, #60]	; 0x3c
  405652:	4622      	mov	r2, r4
  405654:	462b      	mov	r3, r5
  405656:	e4fc      	b.n	405052 <_svfprintf_r+0x6a6>
  405658:	3204      	adds	r2, #4
  40565a:	681c      	ldr	r4, [r3, #0]
  40565c:	920f      	str	r2, [sp, #60]	; 0x3c
  40565e:	2301      	movs	r3, #1
  405660:	2500      	movs	r5, #0
  405662:	f7ff ba96 	b.w	404b92 <_svfprintf_r+0x1e6>
  405666:	681c      	ldr	r4, [r3, #0]
  405668:	3304      	adds	r3, #4
  40566a:	930f      	str	r3, [sp, #60]	; 0x3c
  40566c:	2500      	movs	r5, #0
  40566e:	e423      	b.n	404eb8 <_svfprintf_r+0x50c>
  405670:	990f      	ldr	r1, [sp, #60]	; 0x3c
  405672:	460a      	mov	r2, r1
  405674:	3204      	adds	r2, #4
  405676:	680c      	ldr	r4, [r1, #0]
  405678:	920f      	str	r2, [sp, #60]	; 0x3c
  40567a:	2500      	movs	r5, #0
  40567c:	f7ff ba89 	b.w	404b92 <_svfprintf_r+0x1e6>
  405680:	4614      	mov	r4, r2
  405682:	3301      	adds	r3, #1
  405684:	4434      	add	r4, r6
  405686:	2b07      	cmp	r3, #7
  405688:	9427      	str	r4, [sp, #156]	; 0x9c
  40568a:	9326      	str	r3, [sp, #152]	; 0x98
  40568c:	e888 0060 	stmia.w	r8, {r5, r6}
  405690:	f77f ab6a 	ble.w	404d68 <_svfprintf_r+0x3bc>
  405694:	e6b2      	b.n	4053fc <_svfprintf_r+0xa50>
  405696:	f8dd b01c 	ldr.w	fp, [sp, #28]
  40569a:	f8cd b01c 	str.w	fp, [sp, #28]
  40569e:	ae42      	add	r6, sp, #264	; 0x108
  4056a0:	3430      	adds	r4, #48	; 0x30
  4056a2:	2301      	movs	r3, #1
  4056a4:	f806 4d41 	strb.w	r4, [r6, #-65]!
  4056a8:	930e      	str	r3, [sp, #56]	; 0x38
  4056aa:	f7ff ba8f 	b.w	404bcc <_svfprintf_r+0x220>
  4056ae:	aa25      	add	r2, sp, #148	; 0x94
  4056b0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4056b2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4056b4:	f002 fb72 	bl	407d9c <__ssprint_r>
  4056b8:	2800      	cmp	r0, #0
  4056ba:	f47f aa49 	bne.w	404b50 <_svfprintf_r+0x1a4>
  4056be:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4056c0:	46c8      	mov	r8, r9
  4056c2:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  4056c4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4056c6:	429a      	cmp	r2, r3
  4056c8:	db44      	blt.n	405754 <_svfprintf_r+0xda8>
  4056ca:	9b07      	ldr	r3, [sp, #28]
  4056cc:	07d9      	lsls	r1, r3, #31
  4056ce:	d441      	bmi.n	405754 <_svfprintf_r+0xda8>
  4056d0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4056d2:	9812      	ldr	r0, [sp, #72]	; 0x48
  4056d4:	1a9a      	subs	r2, r3, r2
  4056d6:	1a1d      	subs	r5, r3, r0
  4056d8:	4295      	cmp	r5, r2
  4056da:	bfa8      	it	ge
  4056dc:	4615      	movge	r5, r2
  4056de:	2d00      	cmp	r5, #0
  4056e0:	dd0e      	ble.n	405700 <_svfprintf_r+0xd54>
  4056e2:	9926      	ldr	r1, [sp, #152]	; 0x98
  4056e4:	f8c8 5004 	str.w	r5, [r8, #4]
  4056e8:	3101      	adds	r1, #1
  4056ea:	4406      	add	r6, r0
  4056ec:	442c      	add	r4, r5
  4056ee:	2907      	cmp	r1, #7
  4056f0:	f8c8 6000 	str.w	r6, [r8]
  4056f4:	9427      	str	r4, [sp, #156]	; 0x9c
  4056f6:	9126      	str	r1, [sp, #152]	; 0x98
  4056f8:	f300 823b 	bgt.w	405b72 <_svfprintf_r+0x11c6>
  4056fc:	f108 0808 	add.w	r8, r8, #8
  405700:	2d00      	cmp	r5, #0
  405702:	bfac      	ite	ge
  405704:	1b56      	subge	r6, r2, r5
  405706:	4616      	movlt	r6, r2
  405708:	2e00      	cmp	r6, #0
  40570a:	f77f ab2f 	ble.w	404d6c <_svfprintf_r+0x3c0>
  40570e:	2e10      	cmp	r6, #16
  405710:	9b26      	ldr	r3, [sp, #152]	; 0x98
  405712:	4db0      	ldr	r5, [pc, #704]	; (4059d4 <_svfprintf_r+0x1028>)
  405714:	ddb5      	ble.n	405682 <_svfprintf_r+0xcd6>
  405716:	4622      	mov	r2, r4
  405718:	2710      	movs	r7, #16
  40571a:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  40571e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  405720:	e004      	b.n	40572c <_svfprintf_r+0xd80>
  405722:	f108 0808 	add.w	r8, r8, #8
  405726:	3e10      	subs	r6, #16
  405728:	2e10      	cmp	r6, #16
  40572a:	dda9      	ble.n	405680 <_svfprintf_r+0xcd4>
  40572c:	3301      	adds	r3, #1
  40572e:	3210      	adds	r2, #16
  405730:	2b07      	cmp	r3, #7
  405732:	9227      	str	r2, [sp, #156]	; 0x9c
  405734:	9326      	str	r3, [sp, #152]	; 0x98
  405736:	e888 00a0 	stmia.w	r8, {r5, r7}
  40573a:	ddf2      	ble.n	405722 <_svfprintf_r+0xd76>
  40573c:	aa25      	add	r2, sp, #148	; 0x94
  40573e:	4621      	mov	r1, r4
  405740:	4658      	mov	r0, fp
  405742:	f002 fb2b 	bl	407d9c <__ssprint_r>
  405746:	2800      	cmp	r0, #0
  405748:	f47f aa02 	bne.w	404b50 <_svfprintf_r+0x1a4>
  40574c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40574e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  405750:	46c8      	mov	r8, r9
  405752:	e7e8      	b.n	405726 <_svfprintf_r+0xd7a>
  405754:	9b26      	ldr	r3, [sp, #152]	; 0x98
  405756:	9819      	ldr	r0, [sp, #100]	; 0x64
  405758:	991a      	ldr	r1, [sp, #104]	; 0x68
  40575a:	f8c8 1000 	str.w	r1, [r8]
  40575e:	3301      	adds	r3, #1
  405760:	4404      	add	r4, r0
  405762:	2b07      	cmp	r3, #7
  405764:	9427      	str	r4, [sp, #156]	; 0x9c
  405766:	f8c8 0004 	str.w	r0, [r8, #4]
  40576a:	9326      	str	r3, [sp, #152]	; 0x98
  40576c:	f300 81f5 	bgt.w	405b5a <_svfprintf_r+0x11ae>
  405770:	f108 0808 	add.w	r8, r8, #8
  405774:	e7ac      	b.n	4056d0 <_svfprintf_r+0xd24>
  405776:	9b07      	ldr	r3, [sp, #28]
  405778:	07da      	lsls	r2, r3, #31
  40577a:	f53f adfe 	bmi.w	40537a <_svfprintf_r+0x9ce>
  40577e:	3701      	adds	r7, #1
  405780:	3401      	adds	r4, #1
  405782:	2301      	movs	r3, #1
  405784:	2f07      	cmp	r7, #7
  405786:	9427      	str	r4, [sp, #156]	; 0x9c
  405788:	9726      	str	r7, [sp, #152]	; 0x98
  40578a:	f8c8 6000 	str.w	r6, [r8]
  40578e:	f8c8 3004 	str.w	r3, [r8, #4]
  405792:	f77f ae24 	ble.w	4053de <_svfprintf_r+0xa32>
  405796:	e74a      	b.n	40562e <_svfprintf_r+0xc82>
  405798:	aa25      	add	r2, sp, #148	; 0x94
  40579a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40579c:	980c      	ldr	r0, [sp, #48]	; 0x30
  40579e:	f002 fafd 	bl	407d9c <__ssprint_r>
  4057a2:	2800      	cmp	r0, #0
  4057a4:	f47f a9d4 	bne.w	404b50 <_svfprintf_r+0x1a4>
  4057a8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4057aa:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4057ac:	46c8      	mov	r8, r9
  4057ae:	e5f2      	b.n	405396 <_svfprintf_r+0x9ea>
  4057b0:	aa25      	add	r2, sp, #148	; 0x94
  4057b2:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4057b4:	980c      	ldr	r0, [sp, #48]	; 0x30
  4057b6:	f002 faf1 	bl	407d9c <__ssprint_r>
  4057ba:	2800      	cmp	r0, #0
  4057bc:	f47f a9c8 	bne.w	404b50 <_svfprintf_r+0x1a4>
  4057c0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4057c2:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4057c4:	46c8      	mov	r8, r9
  4057c6:	e5f5      	b.n	4053b4 <_svfprintf_r+0xa08>
  4057c8:	464e      	mov	r6, r9
  4057ca:	f7ff b9ff 	b.w	404bcc <_svfprintf_r+0x220>
  4057ce:	aa25      	add	r2, sp, #148	; 0x94
  4057d0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4057d2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4057d4:	f002 fae2 	bl	407d9c <__ssprint_r>
  4057d8:	2800      	cmp	r0, #0
  4057da:	f47f a9b9 	bne.w	404b50 <_svfprintf_r+0x1a4>
  4057de:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4057e0:	46c8      	mov	r8, r9
  4057e2:	f7ff ba74 	b.w	404cce <_svfprintf_r+0x322>
  4057e6:	9c14      	ldr	r4, [sp, #80]	; 0x50
  4057e8:	4622      	mov	r2, r4
  4057ea:	4620      	mov	r0, r4
  4057ec:	9c15      	ldr	r4, [sp, #84]	; 0x54
  4057ee:	4623      	mov	r3, r4
  4057f0:	4621      	mov	r1, r4
  4057f2:	f002 ffbf 	bl	408774 <__aeabi_dcmpun>
  4057f6:	2800      	cmp	r0, #0
  4057f8:	f040 8286 	bne.w	405d08 <_svfprintf_r+0x135c>
  4057fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4057fe:	3301      	adds	r3, #1
  405800:	9b11      	ldr	r3, [sp, #68]	; 0x44
  405802:	f023 0320 	bic.w	r3, r3, #32
  405806:	930e      	str	r3, [sp, #56]	; 0x38
  405808:	f000 81e2 	beq.w	405bd0 <_svfprintf_r+0x1224>
  40580c:	2b47      	cmp	r3, #71	; 0x47
  40580e:	f000 811e 	beq.w	405a4e <_svfprintf_r+0x10a2>
  405812:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  405816:	9307      	str	r3, [sp, #28]
  405818:	9b15      	ldr	r3, [sp, #84]	; 0x54
  40581a:	1e1f      	subs	r7, r3, #0
  40581c:	9b14      	ldr	r3, [sp, #80]	; 0x50
  40581e:	9308      	str	r3, [sp, #32]
  405820:	bfbb      	ittet	lt
  405822:	463b      	movlt	r3, r7
  405824:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  405828:	2300      	movge	r3, #0
  40582a:	232d      	movlt	r3, #45	; 0x2d
  40582c:	9310      	str	r3, [sp, #64]	; 0x40
  40582e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  405830:	2b66      	cmp	r3, #102	; 0x66
  405832:	f000 81bb 	beq.w	405bac <_svfprintf_r+0x1200>
  405836:	2b46      	cmp	r3, #70	; 0x46
  405838:	f000 80df 	beq.w	4059fa <_svfprintf_r+0x104e>
  40583c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40583e:	9a08      	ldr	r2, [sp, #32]
  405840:	2b45      	cmp	r3, #69	; 0x45
  405842:	bf0c      	ite	eq
  405844:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  405846:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  405848:	a823      	add	r0, sp, #140	; 0x8c
  40584a:	a920      	add	r1, sp, #128	; 0x80
  40584c:	bf08      	it	eq
  40584e:	1c5d      	addeq	r5, r3, #1
  405850:	9004      	str	r0, [sp, #16]
  405852:	9103      	str	r1, [sp, #12]
  405854:	a81f      	add	r0, sp, #124	; 0x7c
  405856:	2102      	movs	r1, #2
  405858:	463b      	mov	r3, r7
  40585a:	9002      	str	r0, [sp, #8]
  40585c:	9501      	str	r5, [sp, #4]
  40585e:	9100      	str	r1, [sp, #0]
  405860:	980c      	ldr	r0, [sp, #48]	; 0x30
  405862:	f000 fb6d 	bl	405f40 <_dtoa_r>
  405866:	9b11      	ldr	r3, [sp, #68]	; 0x44
  405868:	2b67      	cmp	r3, #103	; 0x67
  40586a:	4606      	mov	r6, r0
  40586c:	f040 81e0 	bne.w	405c30 <_svfprintf_r+0x1284>
  405870:	f01b 0f01 	tst.w	fp, #1
  405874:	f000 8246 	beq.w	405d04 <_svfprintf_r+0x1358>
  405878:	1974      	adds	r4, r6, r5
  40587a:	9a16      	ldr	r2, [sp, #88]	; 0x58
  40587c:	9808      	ldr	r0, [sp, #32]
  40587e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  405880:	4639      	mov	r1, r7
  405882:	f002 ff45 	bl	408710 <__aeabi_dcmpeq>
  405886:	2800      	cmp	r0, #0
  405888:	f040 8165 	bne.w	405b56 <_svfprintf_r+0x11aa>
  40588c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  40588e:	42a3      	cmp	r3, r4
  405890:	d206      	bcs.n	4058a0 <_svfprintf_r+0xef4>
  405892:	2130      	movs	r1, #48	; 0x30
  405894:	1c5a      	adds	r2, r3, #1
  405896:	9223      	str	r2, [sp, #140]	; 0x8c
  405898:	7019      	strb	r1, [r3, #0]
  40589a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  40589c:	429c      	cmp	r4, r3
  40589e:	d8f9      	bhi.n	405894 <_svfprintf_r+0xee8>
  4058a0:	1b9b      	subs	r3, r3, r6
  4058a2:	9313      	str	r3, [sp, #76]	; 0x4c
  4058a4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4058a6:	2b47      	cmp	r3, #71	; 0x47
  4058a8:	f000 80e9 	beq.w	405a7e <_svfprintf_r+0x10d2>
  4058ac:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4058ae:	2b65      	cmp	r3, #101	; 0x65
  4058b0:	f340 81cd 	ble.w	405c4e <_svfprintf_r+0x12a2>
  4058b4:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4058b6:	2b66      	cmp	r3, #102	; 0x66
  4058b8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4058ba:	9312      	str	r3, [sp, #72]	; 0x48
  4058bc:	f000 819e 	beq.w	405bfc <_svfprintf_r+0x1250>
  4058c0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4058c2:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4058c4:	4619      	mov	r1, r3
  4058c6:	4291      	cmp	r1, r2
  4058c8:	f300 818a 	bgt.w	405be0 <_svfprintf_r+0x1234>
  4058cc:	f01b 0f01 	tst.w	fp, #1
  4058d0:	f040 8213 	bne.w	405cfa <_svfprintf_r+0x134e>
  4058d4:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  4058d8:	9308      	str	r3, [sp, #32]
  4058da:	2367      	movs	r3, #103	; 0x67
  4058dc:	920e      	str	r2, [sp, #56]	; 0x38
  4058de:	9311      	str	r3, [sp, #68]	; 0x44
  4058e0:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4058e2:	2b00      	cmp	r3, #0
  4058e4:	f040 80c4 	bne.w	405a70 <_svfprintf_r+0x10c4>
  4058e8:	930a      	str	r3, [sp, #40]	; 0x28
  4058ea:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4058ee:	f7ff b975 	b.w	404bdc <_svfprintf_r+0x230>
  4058f2:	4635      	mov	r5, r6
  4058f4:	460c      	mov	r4, r1
  4058f6:	4646      	mov	r6, r8
  4058f8:	4690      	mov	r8, r2
  4058fa:	3301      	adds	r3, #1
  4058fc:	443c      	add	r4, r7
  4058fe:	2b07      	cmp	r3, #7
  405900:	9427      	str	r4, [sp, #156]	; 0x9c
  405902:	9326      	str	r3, [sp, #152]	; 0x98
  405904:	e888 00a0 	stmia.w	r8, {r5, r7}
  405908:	f73f aed1 	bgt.w	4056ae <_svfprintf_r+0xd02>
  40590c:	f108 0808 	add.w	r8, r8, #8
  405910:	e6d7      	b.n	4056c2 <_svfprintf_r+0xd16>
  405912:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  405914:	6813      	ldr	r3, [r2, #0]
  405916:	3204      	adds	r2, #4
  405918:	920f      	str	r2, [sp, #60]	; 0x3c
  40591a:	9a09      	ldr	r2, [sp, #36]	; 0x24
  40591c:	601a      	str	r2, [r3, #0]
  40591e:	f7ff b86c 	b.w	4049fa <_svfprintf_r+0x4e>
  405922:	aa25      	add	r2, sp, #148	; 0x94
  405924:	990b      	ldr	r1, [sp, #44]	; 0x2c
  405926:	980c      	ldr	r0, [sp, #48]	; 0x30
  405928:	f002 fa38 	bl	407d9c <__ssprint_r>
  40592c:	2800      	cmp	r0, #0
  40592e:	f47f a90f 	bne.w	404b50 <_svfprintf_r+0x1a4>
  405932:	46c8      	mov	r8, r9
  405934:	e48d      	b.n	405252 <_svfprintf_r+0x8a6>
  405936:	9b26      	ldr	r3, [sp, #152]	; 0x98
  405938:	4a27      	ldr	r2, [pc, #156]	; (4059d8 <_svfprintf_r+0x102c>)
  40593a:	f8c8 2000 	str.w	r2, [r8]
  40593e:	3301      	adds	r3, #1
  405940:	3401      	adds	r4, #1
  405942:	2201      	movs	r2, #1
  405944:	2b07      	cmp	r3, #7
  405946:	9427      	str	r4, [sp, #156]	; 0x9c
  405948:	9326      	str	r3, [sp, #152]	; 0x98
  40594a:	f8c8 2004 	str.w	r2, [r8, #4]
  40594e:	dc72      	bgt.n	405a36 <_svfprintf_r+0x108a>
  405950:	f108 0808 	add.w	r8, r8, #8
  405954:	b929      	cbnz	r1, 405962 <_svfprintf_r+0xfb6>
  405956:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  405958:	b91b      	cbnz	r3, 405962 <_svfprintf_r+0xfb6>
  40595a:	9b07      	ldr	r3, [sp, #28]
  40595c:	07d8      	lsls	r0, r3, #31
  40595e:	f57f aa05 	bpl.w	404d6c <_svfprintf_r+0x3c0>
  405962:	9b26      	ldr	r3, [sp, #152]	; 0x98
  405964:	9819      	ldr	r0, [sp, #100]	; 0x64
  405966:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  405968:	f8c8 2000 	str.w	r2, [r8]
  40596c:	3301      	adds	r3, #1
  40596e:	4602      	mov	r2, r0
  405970:	4422      	add	r2, r4
  405972:	2b07      	cmp	r3, #7
  405974:	9227      	str	r2, [sp, #156]	; 0x9c
  405976:	f8c8 0004 	str.w	r0, [r8, #4]
  40597a:	9326      	str	r3, [sp, #152]	; 0x98
  40597c:	f300 818d 	bgt.w	405c9a <_svfprintf_r+0x12ee>
  405980:	f108 0808 	add.w	r8, r8, #8
  405984:	2900      	cmp	r1, #0
  405986:	f2c0 8165 	blt.w	405c54 <_svfprintf_r+0x12a8>
  40598a:	9913      	ldr	r1, [sp, #76]	; 0x4c
  40598c:	f8c8 6000 	str.w	r6, [r8]
  405990:	3301      	adds	r3, #1
  405992:	188c      	adds	r4, r1, r2
  405994:	2b07      	cmp	r3, #7
  405996:	9427      	str	r4, [sp, #156]	; 0x9c
  405998:	9326      	str	r3, [sp, #152]	; 0x98
  40599a:	f8c8 1004 	str.w	r1, [r8, #4]
  40599e:	f77f a9e3 	ble.w	404d68 <_svfprintf_r+0x3bc>
  4059a2:	e52b      	b.n	4053fc <_svfprintf_r+0xa50>
  4059a4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4059a6:	9909      	ldr	r1, [sp, #36]	; 0x24
  4059a8:	6813      	ldr	r3, [r2, #0]
  4059aa:	17cd      	asrs	r5, r1, #31
  4059ac:	4608      	mov	r0, r1
  4059ae:	3204      	adds	r2, #4
  4059b0:	4629      	mov	r1, r5
  4059b2:	920f      	str	r2, [sp, #60]	; 0x3c
  4059b4:	e9c3 0100 	strd	r0, r1, [r3]
  4059b8:	f7ff b81f 	b.w	4049fa <_svfprintf_r+0x4e>
  4059bc:	aa25      	add	r2, sp, #148	; 0x94
  4059be:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4059c0:	980c      	ldr	r0, [sp, #48]	; 0x30
  4059c2:	f002 f9eb 	bl	407d9c <__ssprint_r>
  4059c6:	2800      	cmp	r0, #0
  4059c8:	f47f a8c2 	bne.w	404b50 <_svfprintf_r+0x1a4>
  4059cc:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4059ce:	46c8      	mov	r8, r9
  4059d0:	e458      	b.n	405284 <_svfprintf_r+0x8d8>
  4059d2:	bf00      	nop
  4059d4:	00408dd0 	.word	0x00408dd0
  4059d8:	00408dbc 	.word	0x00408dbc
  4059dc:	2140      	movs	r1, #64	; 0x40
  4059de:	980c      	ldr	r0, [sp, #48]	; 0x30
  4059e0:	f001 fa00 	bl	406de4 <_malloc_r>
  4059e4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4059e6:	6010      	str	r0, [r2, #0]
  4059e8:	6110      	str	r0, [r2, #16]
  4059ea:	2800      	cmp	r0, #0
  4059ec:	f000 81ec 	beq.w	405dc8 <_svfprintf_r+0x141c>
  4059f0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4059f2:	2340      	movs	r3, #64	; 0x40
  4059f4:	6153      	str	r3, [r2, #20]
  4059f6:	f7fe bff0 	b.w	4049da <_svfprintf_r+0x2e>
  4059fa:	a823      	add	r0, sp, #140	; 0x8c
  4059fc:	a920      	add	r1, sp, #128	; 0x80
  4059fe:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  405a00:	9004      	str	r0, [sp, #16]
  405a02:	9103      	str	r1, [sp, #12]
  405a04:	a81f      	add	r0, sp, #124	; 0x7c
  405a06:	2103      	movs	r1, #3
  405a08:	9002      	str	r0, [sp, #8]
  405a0a:	9a08      	ldr	r2, [sp, #32]
  405a0c:	9401      	str	r4, [sp, #4]
  405a0e:	463b      	mov	r3, r7
  405a10:	9100      	str	r1, [sp, #0]
  405a12:	980c      	ldr	r0, [sp, #48]	; 0x30
  405a14:	f000 fa94 	bl	405f40 <_dtoa_r>
  405a18:	4625      	mov	r5, r4
  405a1a:	4606      	mov	r6, r0
  405a1c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  405a1e:	2b46      	cmp	r3, #70	; 0x46
  405a20:	eb06 0405 	add.w	r4, r6, r5
  405a24:	f47f af29 	bne.w	40587a <_svfprintf_r+0xece>
  405a28:	7833      	ldrb	r3, [r6, #0]
  405a2a:	2b30      	cmp	r3, #48	; 0x30
  405a2c:	f000 8172 	beq.w	405d14 <_svfprintf_r+0x1368>
  405a30:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  405a32:	442c      	add	r4, r5
  405a34:	e721      	b.n	40587a <_svfprintf_r+0xece>
  405a36:	aa25      	add	r2, sp, #148	; 0x94
  405a38:	990b      	ldr	r1, [sp, #44]	; 0x2c
  405a3a:	980c      	ldr	r0, [sp, #48]	; 0x30
  405a3c:	f002 f9ae 	bl	407d9c <__ssprint_r>
  405a40:	2800      	cmp	r0, #0
  405a42:	f47f a885 	bne.w	404b50 <_svfprintf_r+0x1a4>
  405a46:	991f      	ldr	r1, [sp, #124]	; 0x7c
  405a48:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  405a4a:	46c8      	mov	r8, r9
  405a4c:	e782      	b.n	405954 <_svfprintf_r+0xfa8>
  405a4e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405a50:	2b00      	cmp	r3, #0
  405a52:	bf08      	it	eq
  405a54:	2301      	moveq	r3, #1
  405a56:	930a      	str	r3, [sp, #40]	; 0x28
  405a58:	e6db      	b.n	405812 <_svfprintf_r+0xe66>
  405a5a:	4630      	mov	r0, r6
  405a5c:	940a      	str	r4, [sp, #40]	; 0x28
  405a5e:	f002 f92f 	bl	407cc0 <strlen>
  405a62:	950f      	str	r5, [sp, #60]	; 0x3c
  405a64:	900e      	str	r0, [sp, #56]	; 0x38
  405a66:	f8cd b01c 	str.w	fp, [sp, #28]
  405a6a:	4603      	mov	r3, r0
  405a6c:	f7ff b9fb 	b.w	404e66 <_svfprintf_r+0x4ba>
  405a70:	272d      	movs	r7, #45	; 0x2d
  405a72:	2300      	movs	r3, #0
  405a74:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  405a78:	930a      	str	r3, [sp, #40]	; 0x28
  405a7a:	f7ff b8b0 	b.w	404bde <_svfprintf_r+0x232>
  405a7e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  405a80:	9312      	str	r3, [sp, #72]	; 0x48
  405a82:	461a      	mov	r2, r3
  405a84:	3303      	adds	r3, #3
  405a86:	db04      	blt.n	405a92 <_svfprintf_r+0x10e6>
  405a88:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405a8a:	4619      	mov	r1, r3
  405a8c:	4291      	cmp	r1, r2
  405a8e:	f6bf af17 	bge.w	4058c0 <_svfprintf_r+0xf14>
  405a92:	9b11      	ldr	r3, [sp, #68]	; 0x44
  405a94:	3b02      	subs	r3, #2
  405a96:	9311      	str	r3, [sp, #68]	; 0x44
  405a98:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  405a9c:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  405aa0:	9b12      	ldr	r3, [sp, #72]	; 0x48
  405aa2:	3b01      	subs	r3, #1
  405aa4:	2b00      	cmp	r3, #0
  405aa6:	931f      	str	r3, [sp, #124]	; 0x7c
  405aa8:	bfbd      	ittte	lt
  405aaa:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  405aac:	f1c3 0301 	rsblt	r3, r3, #1
  405ab0:	222d      	movlt	r2, #45	; 0x2d
  405ab2:	222b      	movge	r2, #43	; 0x2b
  405ab4:	2b09      	cmp	r3, #9
  405ab6:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  405aba:	f340 8116 	ble.w	405cea <_svfprintf_r+0x133e>
  405abe:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  405ac2:	4620      	mov	r0, r4
  405ac4:	4dad      	ldr	r5, [pc, #692]	; (405d7c <_svfprintf_r+0x13d0>)
  405ac6:	e000      	b.n	405aca <_svfprintf_r+0x111e>
  405ac8:	4610      	mov	r0, r2
  405aca:	fb85 1203 	smull	r1, r2, r5, r3
  405ace:	17d9      	asrs	r1, r3, #31
  405ad0:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  405ad4:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  405ad8:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  405adc:	3230      	adds	r2, #48	; 0x30
  405ade:	2909      	cmp	r1, #9
  405ae0:	f800 2c01 	strb.w	r2, [r0, #-1]
  405ae4:	460b      	mov	r3, r1
  405ae6:	f100 32ff 	add.w	r2, r0, #4294967295
  405aea:	dced      	bgt.n	405ac8 <_svfprintf_r+0x111c>
  405aec:	3330      	adds	r3, #48	; 0x30
  405aee:	3802      	subs	r0, #2
  405af0:	b2d9      	uxtb	r1, r3
  405af2:	4284      	cmp	r4, r0
  405af4:	f802 1c01 	strb.w	r1, [r2, #-1]
  405af8:	f240 815f 	bls.w	405dba <_svfprintf_r+0x140e>
  405afc:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  405b00:	4613      	mov	r3, r2
  405b02:	e001      	b.n	405b08 <_svfprintf_r+0x115c>
  405b04:	f813 1b01 	ldrb.w	r1, [r3], #1
  405b08:	f800 1b01 	strb.w	r1, [r0], #1
  405b0c:	42a3      	cmp	r3, r4
  405b0e:	d1f9      	bne.n	405b04 <_svfprintf_r+0x1158>
  405b10:	3301      	adds	r3, #1
  405b12:	1a9b      	subs	r3, r3, r2
  405b14:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  405b18:	4413      	add	r3, r2
  405b1a:	aa21      	add	r2, sp, #132	; 0x84
  405b1c:	1a9b      	subs	r3, r3, r2
  405b1e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  405b20:	931b      	str	r3, [sp, #108]	; 0x6c
  405b22:	2a01      	cmp	r2, #1
  405b24:	4413      	add	r3, r2
  405b26:	930e      	str	r3, [sp, #56]	; 0x38
  405b28:	f340 8113 	ble.w	405d52 <_svfprintf_r+0x13a6>
  405b2c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  405b2e:	9a19      	ldr	r2, [sp, #100]	; 0x64
  405b30:	4413      	add	r3, r2
  405b32:	930e      	str	r3, [sp, #56]	; 0x38
  405b34:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  405b38:	9308      	str	r3, [sp, #32]
  405b3a:	2300      	movs	r3, #0
  405b3c:	9312      	str	r3, [sp, #72]	; 0x48
  405b3e:	e6cf      	b.n	4058e0 <_svfprintf_r+0xf34>
  405b40:	aa25      	add	r2, sp, #148	; 0x94
  405b42:	990b      	ldr	r1, [sp, #44]	; 0x2c
  405b44:	980c      	ldr	r0, [sp, #48]	; 0x30
  405b46:	f002 f929 	bl	407d9c <__ssprint_r>
  405b4a:	2800      	cmp	r0, #0
  405b4c:	f47f a800 	bne.w	404b50 <_svfprintf_r+0x1a4>
  405b50:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  405b52:	46c8      	mov	r8, r9
  405b54:	e4d6      	b.n	405504 <_svfprintf_r+0xb58>
  405b56:	4623      	mov	r3, r4
  405b58:	e6a2      	b.n	4058a0 <_svfprintf_r+0xef4>
  405b5a:	aa25      	add	r2, sp, #148	; 0x94
  405b5c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  405b5e:	980c      	ldr	r0, [sp, #48]	; 0x30
  405b60:	f002 f91c 	bl	407d9c <__ssprint_r>
  405b64:	2800      	cmp	r0, #0
  405b66:	f47e aff3 	bne.w	404b50 <_svfprintf_r+0x1a4>
  405b6a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  405b6c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  405b6e:	46c8      	mov	r8, r9
  405b70:	e5ae      	b.n	4056d0 <_svfprintf_r+0xd24>
  405b72:	aa25      	add	r2, sp, #148	; 0x94
  405b74:	990b      	ldr	r1, [sp, #44]	; 0x2c
  405b76:	980c      	ldr	r0, [sp, #48]	; 0x30
  405b78:	f002 f910 	bl	407d9c <__ssprint_r>
  405b7c:	2800      	cmp	r0, #0
  405b7e:	f47e afe7 	bne.w	404b50 <_svfprintf_r+0x1a4>
  405b82:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  405b84:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  405b86:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  405b88:	1a9a      	subs	r2, r3, r2
  405b8a:	46c8      	mov	r8, r9
  405b8c:	e5b8      	b.n	405700 <_svfprintf_r+0xd54>
  405b8e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405b90:	9612      	str	r6, [sp, #72]	; 0x48
  405b92:	2b06      	cmp	r3, #6
  405b94:	bf28      	it	cs
  405b96:	2306      	movcs	r3, #6
  405b98:	960a      	str	r6, [sp, #40]	; 0x28
  405b9a:	4637      	mov	r7, r6
  405b9c:	9308      	str	r3, [sp, #32]
  405b9e:	950f      	str	r5, [sp, #60]	; 0x3c
  405ba0:	f8cd b01c 	str.w	fp, [sp, #28]
  405ba4:	930e      	str	r3, [sp, #56]	; 0x38
  405ba6:	4e76      	ldr	r6, [pc, #472]	; (405d80 <_svfprintf_r+0x13d4>)
  405ba8:	f7ff b818 	b.w	404bdc <_svfprintf_r+0x230>
  405bac:	a823      	add	r0, sp, #140	; 0x8c
  405bae:	a920      	add	r1, sp, #128	; 0x80
  405bb0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  405bb2:	9004      	str	r0, [sp, #16]
  405bb4:	9103      	str	r1, [sp, #12]
  405bb6:	a81f      	add	r0, sp, #124	; 0x7c
  405bb8:	2103      	movs	r1, #3
  405bba:	9002      	str	r0, [sp, #8]
  405bbc:	9a08      	ldr	r2, [sp, #32]
  405bbe:	9501      	str	r5, [sp, #4]
  405bc0:	463b      	mov	r3, r7
  405bc2:	9100      	str	r1, [sp, #0]
  405bc4:	980c      	ldr	r0, [sp, #48]	; 0x30
  405bc6:	f000 f9bb 	bl	405f40 <_dtoa_r>
  405bca:	4606      	mov	r6, r0
  405bcc:	1944      	adds	r4, r0, r5
  405bce:	e72b      	b.n	405a28 <_svfprintf_r+0x107c>
  405bd0:	2306      	movs	r3, #6
  405bd2:	930a      	str	r3, [sp, #40]	; 0x28
  405bd4:	e61d      	b.n	405812 <_svfprintf_r+0xe66>
  405bd6:	272d      	movs	r7, #45	; 0x2d
  405bd8:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  405bdc:	f7ff bace 	b.w	40517c <_svfprintf_r+0x7d0>
  405be0:	9a19      	ldr	r2, [sp, #100]	; 0x64
  405be2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  405be4:	4413      	add	r3, r2
  405be6:	9a12      	ldr	r2, [sp, #72]	; 0x48
  405be8:	930e      	str	r3, [sp, #56]	; 0x38
  405bea:	2a00      	cmp	r2, #0
  405bec:	f340 80aa 	ble.w	405d44 <_svfprintf_r+0x1398>
  405bf0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  405bf4:	9308      	str	r3, [sp, #32]
  405bf6:	2367      	movs	r3, #103	; 0x67
  405bf8:	9311      	str	r3, [sp, #68]	; 0x44
  405bfa:	e671      	b.n	4058e0 <_svfprintf_r+0xf34>
  405bfc:	2b00      	cmp	r3, #0
  405bfe:	f340 80b2 	ble.w	405d66 <_svfprintf_r+0x13ba>
  405c02:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  405c04:	2a00      	cmp	r2, #0
  405c06:	f040 8093 	bne.w	405d30 <_svfprintf_r+0x1384>
  405c0a:	f01b 0f01 	tst.w	fp, #1
  405c0e:	f040 808f 	bne.w	405d30 <_svfprintf_r+0x1384>
  405c12:	9308      	str	r3, [sp, #32]
  405c14:	930e      	str	r3, [sp, #56]	; 0x38
  405c16:	e663      	b.n	4058e0 <_svfprintf_r+0xf34>
  405c18:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405c1a:	9308      	str	r3, [sp, #32]
  405c1c:	930e      	str	r3, [sp, #56]	; 0x38
  405c1e:	900a      	str	r0, [sp, #40]	; 0x28
  405c20:	950f      	str	r5, [sp, #60]	; 0x3c
  405c22:	f8cd b01c 	str.w	fp, [sp, #28]
  405c26:	9012      	str	r0, [sp, #72]	; 0x48
  405c28:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  405c2c:	f7fe bfd6 	b.w	404bdc <_svfprintf_r+0x230>
  405c30:	9b11      	ldr	r3, [sp, #68]	; 0x44
  405c32:	2b47      	cmp	r3, #71	; 0x47
  405c34:	f47f ae20 	bne.w	405878 <_svfprintf_r+0xecc>
  405c38:	f01b 0f01 	tst.w	fp, #1
  405c3c:	f47f aeee 	bne.w	405a1c <_svfprintf_r+0x1070>
  405c40:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  405c42:	1b9b      	subs	r3, r3, r6
  405c44:	9313      	str	r3, [sp, #76]	; 0x4c
  405c46:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  405c48:	2b47      	cmp	r3, #71	; 0x47
  405c4a:	f43f af18 	beq.w	405a7e <_svfprintf_r+0x10d2>
  405c4e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  405c50:	9312      	str	r3, [sp, #72]	; 0x48
  405c52:	e721      	b.n	405a98 <_svfprintf_r+0x10ec>
  405c54:	424f      	negs	r7, r1
  405c56:	3110      	adds	r1, #16
  405c58:	4d4a      	ldr	r5, [pc, #296]	; (405d84 <_svfprintf_r+0x13d8>)
  405c5a:	da2f      	bge.n	405cbc <_svfprintf_r+0x1310>
  405c5c:	2410      	movs	r4, #16
  405c5e:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  405c62:	e004      	b.n	405c6e <_svfprintf_r+0x12c2>
  405c64:	f108 0808 	add.w	r8, r8, #8
  405c68:	3f10      	subs	r7, #16
  405c6a:	2f10      	cmp	r7, #16
  405c6c:	dd26      	ble.n	405cbc <_svfprintf_r+0x1310>
  405c6e:	3301      	adds	r3, #1
  405c70:	3210      	adds	r2, #16
  405c72:	2b07      	cmp	r3, #7
  405c74:	9227      	str	r2, [sp, #156]	; 0x9c
  405c76:	9326      	str	r3, [sp, #152]	; 0x98
  405c78:	f8c8 5000 	str.w	r5, [r8]
  405c7c:	f8c8 4004 	str.w	r4, [r8, #4]
  405c80:	ddf0      	ble.n	405c64 <_svfprintf_r+0x12b8>
  405c82:	aa25      	add	r2, sp, #148	; 0x94
  405c84:	990b      	ldr	r1, [sp, #44]	; 0x2c
  405c86:	4658      	mov	r0, fp
  405c88:	f002 f888 	bl	407d9c <__ssprint_r>
  405c8c:	2800      	cmp	r0, #0
  405c8e:	f47e af5f 	bne.w	404b50 <_svfprintf_r+0x1a4>
  405c92:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  405c94:	9b26      	ldr	r3, [sp, #152]	; 0x98
  405c96:	46c8      	mov	r8, r9
  405c98:	e7e6      	b.n	405c68 <_svfprintf_r+0x12bc>
  405c9a:	aa25      	add	r2, sp, #148	; 0x94
  405c9c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  405c9e:	980c      	ldr	r0, [sp, #48]	; 0x30
  405ca0:	f002 f87c 	bl	407d9c <__ssprint_r>
  405ca4:	2800      	cmp	r0, #0
  405ca6:	f47e af53 	bne.w	404b50 <_svfprintf_r+0x1a4>
  405caa:	991f      	ldr	r1, [sp, #124]	; 0x7c
  405cac:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  405cae:	9b26      	ldr	r3, [sp, #152]	; 0x98
  405cb0:	46c8      	mov	r8, r9
  405cb2:	e667      	b.n	405984 <_svfprintf_r+0xfd8>
  405cb4:	2000      	movs	r0, #0
  405cb6:	900a      	str	r0, [sp, #40]	; 0x28
  405cb8:	f7fe bed2 	b.w	404a60 <_svfprintf_r+0xb4>
  405cbc:	3301      	adds	r3, #1
  405cbe:	443a      	add	r2, r7
  405cc0:	2b07      	cmp	r3, #7
  405cc2:	e888 00a0 	stmia.w	r8, {r5, r7}
  405cc6:	9227      	str	r2, [sp, #156]	; 0x9c
  405cc8:	9326      	str	r3, [sp, #152]	; 0x98
  405cca:	f108 0808 	add.w	r8, r8, #8
  405cce:	f77f ae5c 	ble.w	40598a <_svfprintf_r+0xfde>
  405cd2:	aa25      	add	r2, sp, #148	; 0x94
  405cd4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  405cd6:	980c      	ldr	r0, [sp, #48]	; 0x30
  405cd8:	f002 f860 	bl	407d9c <__ssprint_r>
  405cdc:	2800      	cmp	r0, #0
  405cde:	f47e af37 	bne.w	404b50 <_svfprintf_r+0x1a4>
  405ce2:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  405ce4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  405ce6:	46c8      	mov	r8, r9
  405ce8:	e64f      	b.n	40598a <_svfprintf_r+0xfde>
  405cea:	3330      	adds	r3, #48	; 0x30
  405cec:	2230      	movs	r2, #48	; 0x30
  405cee:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  405cf2:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  405cf6:	ab22      	add	r3, sp, #136	; 0x88
  405cf8:	e70f      	b.n	405b1a <_svfprintf_r+0x116e>
  405cfa:	9b12      	ldr	r3, [sp, #72]	; 0x48
  405cfc:	9a19      	ldr	r2, [sp, #100]	; 0x64
  405cfe:	4413      	add	r3, r2
  405d00:	930e      	str	r3, [sp, #56]	; 0x38
  405d02:	e775      	b.n	405bf0 <_svfprintf_r+0x1244>
  405d04:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  405d06:	e5cb      	b.n	4058a0 <_svfprintf_r+0xef4>
  405d08:	4e1f      	ldr	r6, [pc, #124]	; (405d88 <_svfprintf_r+0x13dc>)
  405d0a:	4b20      	ldr	r3, [pc, #128]	; (405d8c <_svfprintf_r+0x13e0>)
  405d0c:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  405d10:	f7ff ba36 	b.w	405180 <_svfprintf_r+0x7d4>
  405d14:	9a16      	ldr	r2, [sp, #88]	; 0x58
  405d16:	9808      	ldr	r0, [sp, #32]
  405d18:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  405d1a:	4639      	mov	r1, r7
  405d1c:	f002 fcf8 	bl	408710 <__aeabi_dcmpeq>
  405d20:	2800      	cmp	r0, #0
  405d22:	f47f ae85 	bne.w	405a30 <_svfprintf_r+0x1084>
  405d26:	f1c5 0501 	rsb	r5, r5, #1
  405d2a:	951f      	str	r5, [sp, #124]	; 0x7c
  405d2c:	442c      	add	r4, r5
  405d2e:	e5a4      	b.n	40587a <_svfprintf_r+0xece>
  405d30:	9b12      	ldr	r3, [sp, #72]	; 0x48
  405d32:	9a19      	ldr	r2, [sp, #100]	; 0x64
  405d34:	4413      	add	r3, r2
  405d36:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  405d38:	441a      	add	r2, r3
  405d3a:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  405d3e:	920e      	str	r2, [sp, #56]	; 0x38
  405d40:	9308      	str	r3, [sp, #32]
  405d42:	e5cd      	b.n	4058e0 <_svfprintf_r+0xf34>
  405d44:	9b12      	ldr	r3, [sp, #72]	; 0x48
  405d46:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  405d48:	f1c3 0301 	rsb	r3, r3, #1
  405d4c:	441a      	add	r2, r3
  405d4e:	4613      	mov	r3, r2
  405d50:	e7d6      	b.n	405d00 <_svfprintf_r+0x1354>
  405d52:	f01b 0301 	ands.w	r3, fp, #1
  405d56:	9312      	str	r3, [sp, #72]	; 0x48
  405d58:	f47f aee8 	bne.w	405b2c <_svfprintf_r+0x1180>
  405d5c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  405d5e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  405d62:	9308      	str	r3, [sp, #32]
  405d64:	e5bc      	b.n	4058e0 <_svfprintf_r+0xf34>
  405d66:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405d68:	b913      	cbnz	r3, 405d70 <_svfprintf_r+0x13c4>
  405d6a:	f01b 0f01 	tst.w	fp, #1
  405d6e:	d002      	beq.n	405d76 <_svfprintf_r+0x13ca>
  405d70:	9b19      	ldr	r3, [sp, #100]	; 0x64
  405d72:	3301      	adds	r3, #1
  405d74:	e7df      	b.n	405d36 <_svfprintf_r+0x138a>
  405d76:	2301      	movs	r3, #1
  405d78:	e74b      	b.n	405c12 <_svfprintf_r+0x1266>
  405d7a:	bf00      	nop
  405d7c:	66666667 	.word	0x66666667
  405d80:	00408db4 	.word	0x00408db4
  405d84:	00408dd0 	.word	0x00408dd0
  405d88:	00408d88 	.word	0x00408d88
  405d8c:	00408d84 	.word	0x00408d84
  405d90:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  405d92:	f89a 3001 	ldrb.w	r3, [sl, #1]
  405d96:	6828      	ldr	r0, [r5, #0]
  405d98:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  405d9c:	900a      	str	r0, [sp, #40]	; 0x28
  405d9e:	4628      	mov	r0, r5
  405da0:	3004      	adds	r0, #4
  405da2:	46a2      	mov	sl, r4
  405da4:	900f      	str	r0, [sp, #60]	; 0x3c
  405da6:	f7fe be59 	b.w	404a5c <_svfprintf_r+0xb0>
  405daa:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  405dae:	f7ff b86f 	b.w	404e90 <_svfprintf_r+0x4e4>
  405db2:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  405db6:	f7ff ba1c 	b.w	4051f2 <_svfprintf_r+0x846>
  405dba:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  405dbe:	e6ac      	b.n	405b1a <_svfprintf_r+0x116e>
  405dc0:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  405dc4:	f7ff b8f3 	b.w	404fae <_svfprintf_r+0x602>
  405dc8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  405dca:	230c      	movs	r3, #12
  405dcc:	6013      	str	r3, [r2, #0]
  405dce:	f04f 33ff 	mov.w	r3, #4294967295
  405dd2:	9309      	str	r3, [sp, #36]	; 0x24
  405dd4:	f7fe bec5 	b.w	404b62 <_svfprintf_r+0x1b6>
  405dd8:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  405ddc:	f7ff b9a2 	b.w	405124 <_svfprintf_r+0x778>
  405de0:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  405de4:	f7ff b97e 	b.w	4050e4 <_svfprintf_r+0x738>
  405de8:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  405dec:	f7ff b961 	b.w	4050b2 <_svfprintf_r+0x706>
  405df0:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  405df4:	f7ff b91a 	b.w	40502c <_svfprintf_r+0x680>

00405df8 <register_fini>:
  405df8:	4b02      	ldr	r3, [pc, #8]	; (405e04 <register_fini+0xc>)
  405dfa:	b113      	cbz	r3, 405e02 <register_fini+0xa>
  405dfc:	4802      	ldr	r0, [pc, #8]	; (405e08 <register_fini+0x10>)
  405dfe:	f000 b805 	b.w	405e0c <atexit>
  405e02:	4770      	bx	lr
  405e04:	00000000 	.word	0x00000000
  405e08:	00406d95 	.word	0x00406d95

00405e0c <atexit>:
  405e0c:	2300      	movs	r3, #0
  405e0e:	4601      	mov	r1, r0
  405e10:	461a      	mov	r2, r3
  405e12:	4618      	mov	r0, r3
  405e14:	f002 b840 	b.w	407e98 <__register_exitproc>

00405e18 <quorem>:
  405e18:	6902      	ldr	r2, [r0, #16]
  405e1a:	690b      	ldr	r3, [r1, #16]
  405e1c:	4293      	cmp	r3, r2
  405e1e:	f300 808d 	bgt.w	405f3c <quorem+0x124>
  405e22:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405e26:	f103 38ff 	add.w	r8, r3, #4294967295
  405e2a:	f101 0714 	add.w	r7, r1, #20
  405e2e:	f100 0b14 	add.w	fp, r0, #20
  405e32:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  405e36:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  405e3a:	ea4f 0488 	mov.w	r4, r8, lsl #2
  405e3e:	b083      	sub	sp, #12
  405e40:	3201      	adds	r2, #1
  405e42:	fbb3 f9f2 	udiv	r9, r3, r2
  405e46:	eb0b 0304 	add.w	r3, fp, r4
  405e4a:	9400      	str	r4, [sp, #0]
  405e4c:	eb07 0a04 	add.w	sl, r7, r4
  405e50:	9301      	str	r3, [sp, #4]
  405e52:	f1b9 0f00 	cmp.w	r9, #0
  405e56:	d039      	beq.n	405ecc <quorem+0xb4>
  405e58:	2500      	movs	r5, #0
  405e5a:	462e      	mov	r6, r5
  405e5c:	46bc      	mov	ip, r7
  405e5e:	46de      	mov	lr, fp
  405e60:	f85c 4b04 	ldr.w	r4, [ip], #4
  405e64:	f8de 3000 	ldr.w	r3, [lr]
  405e68:	b2a2      	uxth	r2, r4
  405e6a:	fb09 5502 	mla	r5, r9, r2, r5
  405e6e:	0c22      	lsrs	r2, r4, #16
  405e70:	0c2c      	lsrs	r4, r5, #16
  405e72:	fb09 4202 	mla	r2, r9, r2, r4
  405e76:	b2ad      	uxth	r5, r5
  405e78:	1b75      	subs	r5, r6, r5
  405e7a:	b296      	uxth	r6, r2
  405e7c:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  405e80:	fa15 f383 	uxtah	r3, r5, r3
  405e84:	eb06 4623 	add.w	r6, r6, r3, asr #16
  405e88:	b29b      	uxth	r3, r3
  405e8a:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  405e8e:	45e2      	cmp	sl, ip
  405e90:	ea4f 4512 	mov.w	r5, r2, lsr #16
  405e94:	f84e 3b04 	str.w	r3, [lr], #4
  405e98:	ea4f 4626 	mov.w	r6, r6, asr #16
  405e9c:	d2e0      	bcs.n	405e60 <quorem+0x48>
  405e9e:	9b00      	ldr	r3, [sp, #0]
  405ea0:	f85b 3003 	ldr.w	r3, [fp, r3]
  405ea4:	b993      	cbnz	r3, 405ecc <quorem+0xb4>
  405ea6:	9c01      	ldr	r4, [sp, #4]
  405ea8:	1f23      	subs	r3, r4, #4
  405eaa:	459b      	cmp	fp, r3
  405eac:	d20c      	bcs.n	405ec8 <quorem+0xb0>
  405eae:	f854 3c04 	ldr.w	r3, [r4, #-4]
  405eb2:	b94b      	cbnz	r3, 405ec8 <quorem+0xb0>
  405eb4:	f1a4 0308 	sub.w	r3, r4, #8
  405eb8:	e002      	b.n	405ec0 <quorem+0xa8>
  405eba:	681a      	ldr	r2, [r3, #0]
  405ebc:	3b04      	subs	r3, #4
  405ebe:	b91a      	cbnz	r2, 405ec8 <quorem+0xb0>
  405ec0:	459b      	cmp	fp, r3
  405ec2:	f108 38ff 	add.w	r8, r8, #4294967295
  405ec6:	d3f8      	bcc.n	405eba <quorem+0xa2>
  405ec8:	f8c0 8010 	str.w	r8, [r0, #16]
  405ecc:	4604      	mov	r4, r0
  405ece:	f001 fd5b 	bl	407988 <__mcmp>
  405ed2:	2800      	cmp	r0, #0
  405ed4:	db2e      	blt.n	405f34 <quorem+0x11c>
  405ed6:	f109 0901 	add.w	r9, r9, #1
  405eda:	465d      	mov	r5, fp
  405edc:	2300      	movs	r3, #0
  405ede:	f857 1b04 	ldr.w	r1, [r7], #4
  405ee2:	6828      	ldr	r0, [r5, #0]
  405ee4:	b28a      	uxth	r2, r1
  405ee6:	1a9a      	subs	r2, r3, r2
  405ee8:	0c0b      	lsrs	r3, r1, #16
  405eea:	fa12 f280 	uxtah	r2, r2, r0
  405eee:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  405ef2:	eb03 4322 	add.w	r3, r3, r2, asr #16
  405ef6:	b292      	uxth	r2, r2
  405ef8:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  405efc:	45ba      	cmp	sl, r7
  405efe:	f845 2b04 	str.w	r2, [r5], #4
  405f02:	ea4f 4323 	mov.w	r3, r3, asr #16
  405f06:	d2ea      	bcs.n	405ede <quorem+0xc6>
  405f08:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  405f0c:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  405f10:	b982      	cbnz	r2, 405f34 <quorem+0x11c>
  405f12:	1f1a      	subs	r2, r3, #4
  405f14:	4593      	cmp	fp, r2
  405f16:	d20b      	bcs.n	405f30 <quorem+0x118>
  405f18:	f853 2c04 	ldr.w	r2, [r3, #-4]
  405f1c:	b942      	cbnz	r2, 405f30 <quorem+0x118>
  405f1e:	3b08      	subs	r3, #8
  405f20:	e002      	b.n	405f28 <quorem+0x110>
  405f22:	681a      	ldr	r2, [r3, #0]
  405f24:	3b04      	subs	r3, #4
  405f26:	b91a      	cbnz	r2, 405f30 <quorem+0x118>
  405f28:	459b      	cmp	fp, r3
  405f2a:	f108 38ff 	add.w	r8, r8, #4294967295
  405f2e:	d3f8      	bcc.n	405f22 <quorem+0x10a>
  405f30:	f8c4 8010 	str.w	r8, [r4, #16]
  405f34:	4648      	mov	r0, r9
  405f36:	b003      	add	sp, #12
  405f38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405f3c:	2000      	movs	r0, #0
  405f3e:	4770      	bx	lr

00405f40 <_dtoa_r>:
  405f40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405f44:	6c01      	ldr	r1, [r0, #64]	; 0x40
  405f46:	b09b      	sub	sp, #108	; 0x6c
  405f48:	4604      	mov	r4, r0
  405f4a:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  405f4c:	4692      	mov	sl, r2
  405f4e:	469b      	mov	fp, r3
  405f50:	b141      	cbz	r1, 405f64 <_dtoa_r+0x24>
  405f52:	6c42      	ldr	r2, [r0, #68]	; 0x44
  405f54:	604a      	str	r2, [r1, #4]
  405f56:	2301      	movs	r3, #1
  405f58:	4093      	lsls	r3, r2
  405f5a:	608b      	str	r3, [r1, #8]
  405f5c:	f001 fb3c 	bl	4075d8 <_Bfree>
  405f60:	2300      	movs	r3, #0
  405f62:	6423      	str	r3, [r4, #64]	; 0x40
  405f64:	f1bb 0f00 	cmp.w	fp, #0
  405f68:	465d      	mov	r5, fp
  405f6a:	db35      	blt.n	405fd8 <_dtoa_r+0x98>
  405f6c:	2300      	movs	r3, #0
  405f6e:	6033      	str	r3, [r6, #0]
  405f70:	4b9d      	ldr	r3, [pc, #628]	; (4061e8 <_dtoa_r+0x2a8>)
  405f72:	43ab      	bics	r3, r5
  405f74:	d015      	beq.n	405fa2 <_dtoa_r+0x62>
  405f76:	4650      	mov	r0, sl
  405f78:	4659      	mov	r1, fp
  405f7a:	2200      	movs	r2, #0
  405f7c:	2300      	movs	r3, #0
  405f7e:	f002 fbc7 	bl	408710 <__aeabi_dcmpeq>
  405f82:	4680      	mov	r8, r0
  405f84:	2800      	cmp	r0, #0
  405f86:	d02d      	beq.n	405fe4 <_dtoa_r+0xa4>
  405f88:	9a26      	ldr	r2, [sp, #152]	; 0x98
  405f8a:	2301      	movs	r3, #1
  405f8c:	6013      	str	r3, [r2, #0]
  405f8e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  405f90:	2b00      	cmp	r3, #0
  405f92:	f000 80bd 	beq.w	406110 <_dtoa_r+0x1d0>
  405f96:	4895      	ldr	r0, [pc, #596]	; (4061ec <_dtoa_r+0x2ac>)
  405f98:	6018      	str	r0, [r3, #0]
  405f9a:	3801      	subs	r0, #1
  405f9c:	b01b      	add	sp, #108	; 0x6c
  405f9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405fa2:	9a26      	ldr	r2, [sp, #152]	; 0x98
  405fa4:	f242 730f 	movw	r3, #9999	; 0x270f
  405fa8:	6013      	str	r3, [r2, #0]
  405faa:	f1ba 0f00 	cmp.w	sl, #0
  405fae:	d10d      	bne.n	405fcc <_dtoa_r+0x8c>
  405fb0:	f3c5 0513 	ubfx	r5, r5, #0, #20
  405fb4:	b955      	cbnz	r5, 405fcc <_dtoa_r+0x8c>
  405fb6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  405fb8:	488d      	ldr	r0, [pc, #564]	; (4061f0 <_dtoa_r+0x2b0>)
  405fba:	2b00      	cmp	r3, #0
  405fbc:	d0ee      	beq.n	405f9c <_dtoa_r+0x5c>
  405fbe:	f100 0308 	add.w	r3, r0, #8
  405fc2:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  405fc4:	6013      	str	r3, [r2, #0]
  405fc6:	b01b      	add	sp, #108	; 0x6c
  405fc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405fcc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  405fce:	4889      	ldr	r0, [pc, #548]	; (4061f4 <_dtoa_r+0x2b4>)
  405fd0:	2b00      	cmp	r3, #0
  405fd2:	d0e3      	beq.n	405f9c <_dtoa_r+0x5c>
  405fd4:	1cc3      	adds	r3, r0, #3
  405fd6:	e7f4      	b.n	405fc2 <_dtoa_r+0x82>
  405fd8:	2301      	movs	r3, #1
  405fda:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  405fde:	6033      	str	r3, [r6, #0]
  405fe0:	46ab      	mov	fp, r5
  405fe2:	e7c5      	b.n	405f70 <_dtoa_r+0x30>
  405fe4:	aa18      	add	r2, sp, #96	; 0x60
  405fe6:	ab19      	add	r3, sp, #100	; 0x64
  405fe8:	9201      	str	r2, [sp, #4]
  405fea:	9300      	str	r3, [sp, #0]
  405fec:	4652      	mov	r2, sl
  405fee:	465b      	mov	r3, fp
  405ff0:	4620      	mov	r0, r4
  405ff2:	f001 fd69 	bl	407ac8 <__d2b>
  405ff6:	0d2b      	lsrs	r3, r5, #20
  405ff8:	4681      	mov	r9, r0
  405ffa:	d071      	beq.n	4060e0 <_dtoa_r+0x1a0>
  405ffc:	f3cb 0213 	ubfx	r2, fp, #0, #20
  406000:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  406004:	9f18      	ldr	r7, [sp, #96]	; 0x60
  406006:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  40600a:	4650      	mov	r0, sl
  40600c:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  406010:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  406014:	2200      	movs	r2, #0
  406016:	4b78      	ldr	r3, [pc, #480]	; (4061f8 <_dtoa_r+0x2b8>)
  406018:	f7fd f930 	bl	40327c <__aeabi_dsub>
  40601c:	a36c      	add	r3, pc, #432	; (adr r3, 4061d0 <_dtoa_r+0x290>)
  40601e:	e9d3 2300 	ldrd	r2, r3, [r3]
  406022:	f7fd fadf 	bl	4035e4 <__aeabi_dmul>
  406026:	a36c      	add	r3, pc, #432	; (adr r3, 4061d8 <_dtoa_r+0x298>)
  406028:	e9d3 2300 	ldrd	r2, r3, [r3]
  40602c:	f7fd f928 	bl	403280 <__adddf3>
  406030:	e9cd 0102 	strd	r0, r1, [sp, #8]
  406034:	4630      	mov	r0, r6
  406036:	f7fd fa6f 	bl	403518 <__aeabi_i2d>
  40603a:	a369      	add	r3, pc, #420	; (adr r3, 4061e0 <_dtoa_r+0x2a0>)
  40603c:	e9d3 2300 	ldrd	r2, r3, [r3]
  406040:	f7fd fad0 	bl	4035e4 <__aeabi_dmul>
  406044:	4602      	mov	r2, r0
  406046:	460b      	mov	r3, r1
  406048:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  40604c:	f7fd f918 	bl	403280 <__adddf3>
  406050:	e9cd 0104 	strd	r0, r1, [sp, #16]
  406054:	f002 fba4 	bl	4087a0 <__aeabi_d2iz>
  406058:	2200      	movs	r2, #0
  40605a:	9002      	str	r0, [sp, #8]
  40605c:	2300      	movs	r3, #0
  40605e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  406062:	f002 fb5f 	bl	408724 <__aeabi_dcmplt>
  406066:	2800      	cmp	r0, #0
  406068:	f040 8173 	bne.w	406352 <_dtoa_r+0x412>
  40606c:	9d02      	ldr	r5, [sp, #8]
  40606e:	2d16      	cmp	r5, #22
  406070:	f200 815d 	bhi.w	40632e <_dtoa_r+0x3ee>
  406074:	4b61      	ldr	r3, [pc, #388]	; (4061fc <_dtoa_r+0x2bc>)
  406076:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  40607a:	e9d3 0100 	ldrd	r0, r1, [r3]
  40607e:	4652      	mov	r2, sl
  406080:	465b      	mov	r3, fp
  406082:	f002 fb6d 	bl	408760 <__aeabi_dcmpgt>
  406086:	2800      	cmp	r0, #0
  406088:	f000 81c5 	beq.w	406416 <_dtoa_r+0x4d6>
  40608c:	1e6b      	subs	r3, r5, #1
  40608e:	9302      	str	r3, [sp, #8]
  406090:	2300      	movs	r3, #0
  406092:	930e      	str	r3, [sp, #56]	; 0x38
  406094:	1bbf      	subs	r7, r7, r6
  406096:	1e7b      	subs	r3, r7, #1
  406098:	9306      	str	r3, [sp, #24]
  40609a:	f100 8154 	bmi.w	406346 <_dtoa_r+0x406>
  40609e:	2300      	movs	r3, #0
  4060a0:	9308      	str	r3, [sp, #32]
  4060a2:	9b02      	ldr	r3, [sp, #8]
  4060a4:	2b00      	cmp	r3, #0
  4060a6:	f2c0 8145 	blt.w	406334 <_dtoa_r+0x3f4>
  4060aa:	9a06      	ldr	r2, [sp, #24]
  4060ac:	930d      	str	r3, [sp, #52]	; 0x34
  4060ae:	4611      	mov	r1, r2
  4060b0:	4419      	add	r1, r3
  4060b2:	2300      	movs	r3, #0
  4060b4:	9106      	str	r1, [sp, #24]
  4060b6:	930c      	str	r3, [sp, #48]	; 0x30
  4060b8:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4060ba:	2b09      	cmp	r3, #9
  4060bc:	d82a      	bhi.n	406114 <_dtoa_r+0x1d4>
  4060be:	2b05      	cmp	r3, #5
  4060c0:	f340 865b 	ble.w	406d7a <_dtoa_r+0xe3a>
  4060c4:	3b04      	subs	r3, #4
  4060c6:	9324      	str	r3, [sp, #144]	; 0x90
  4060c8:	2500      	movs	r5, #0
  4060ca:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4060cc:	3b02      	subs	r3, #2
  4060ce:	2b03      	cmp	r3, #3
  4060d0:	f200 8642 	bhi.w	406d58 <_dtoa_r+0xe18>
  4060d4:	e8df f013 	tbh	[pc, r3, lsl #1]
  4060d8:	02c903d4 	.word	0x02c903d4
  4060dc:	046103df 	.word	0x046103df
  4060e0:	9f18      	ldr	r7, [sp, #96]	; 0x60
  4060e2:	9e19      	ldr	r6, [sp, #100]	; 0x64
  4060e4:	443e      	add	r6, r7
  4060e6:	f206 4332 	addw	r3, r6, #1074	; 0x432
  4060ea:	2b20      	cmp	r3, #32
  4060ec:	f340 818e 	ble.w	40640c <_dtoa_r+0x4cc>
  4060f0:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  4060f4:	f206 4012 	addw	r0, r6, #1042	; 0x412
  4060f8:	409d      	lsls	r5, r3
  4060fa:	fa2a f000 	lsr.w	r0, sl, r0
  4060fe:	4328      	orrs	r0, r5
  406100:	f7fd f9fa 	bl	4034f8 <__aeabi_ui2d>
  406104:	2301      	movs	r3, #1
  406106:	3e01      	subs	r6, #1
  406108:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  40610c:	9314      	str	r3, [sp, #80]	; 0x50
  40610e:	e781      	b.n	406014 <_dtoa_r+0xd4>
  406110:	483b      	ldr	r0, [pc, #236]	; (406200 <_dtoa_r+0x2c0>)
  406112:	e743      	b.n	405f9c <_dtoa_r+0x5c>
  406114:	2100      	movs	r1, #0
  406116:	6461      	str	r1, [r4, #68]	; 0x44
  406118:	4620      	mov	r0, r4
  40611a:	9125      	str	r1, [sp, #148]	; 0x94
  40611c:	f001 fa36 	bl	40758c <_Balloc>
  406120:	f04f 33ff 	mov.w	r3, #4294967295
  406124:	930a      	str	r3, [sp, #40]	; 0x28
  406126:	9a25      	ldr	r2, [sp, #148]	; 0x94
  406128:	930f      	str	r3, [sp, #60]	; 0x3c
  40612a:	2301      	movs	r3, #1
  40612c:	9004      	str	r0, [sp, #16]
  40612e:	6420      	str	r0, [r4, #64]	; 0x40
  406130:	9224      	str	r2, [sp, #144]	; 0x90
  406132:	930b      	str	r3, [sp, #44]	; 0x2c
  406134:	9b19      	ldr	r3, [sp, #100]	; 0x64
  406136:	2b00      	cmp	r3, #0
  406138:	f2c0 80d9 	blt.w	4062ee <_dtoa_r+0x3ae>
  40613c:	9a02      	ldr	r2, [sp, #8]
  40613e:	2a0e      	cmp	r2, #14
  406140:	f300 80d5 	bgt.w	4062ee <_dtoa_r+0x3ae>
  406144:	4b2d      	ldr	r3, [pc, #180]	; (4061fc <_dtoa_r+0x2bc>)
  406146:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  40614a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40614e:	e9cd 2308 	strd	r2, r3, [sp, #32]
  406152:	9b25      	ldr	r3, [sp, #148]	; 0x94
  406154:	2b00      	cmp	r3, #0
  406156:	f2c0 83ba 	blt.w	4068ce <_dtoa_r+0x98e>
  40615a:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  40615e:	4650      	mov	r0, sl
  406160:	462a      	mov	r2, r5
  406162:	4633      	mov	r3, r6
  406164:	4659      	mov	r1, fp
  406166:	f7fd fb67 	bl	403838 <__aeabi_ddiv>
  40616a:	f002 fb19 	bl	4087a0 <__aeabi_d2iz>
  40616e:	4680      	mov	r8, r0
  406170:	f7fd f9d2 	bl	403518 <__aeabi_i2d>
  406174:	462a      	mov	r2, r5
  406176:	4633      	mov	r3, r6
  406178:	f7fd fa34 	bl	4035e4 <__aeabi_dmul>
  40617c:	460b      	mov	r3, r1
  40617e:	4602      	mov	r2, r0
  406180:	4659      	mov	r1, fp
  406182:	4650      	mov	r0, sl
  406184:	f7fd f87a 	bl	40327c <__aeabi_dsub>
  406188:	9d04      	ldr	r5, [sp, #16]
  40618a:	f108 0330 	add.w	r3, r8, #48	; 0x30
  40618e:	702b      	strb	r3, [r5, #0]
  406190:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  406192:	2b01      	cmp	r3, #1
  406194:	4606      	mov	r6, r0
  406196:	460f      	mov	r7, r1
  406198:	f105 0501 	add.w	r5, r5, #1
  40619c:	d068      	beq.n	406270 <_dtoa_r+0x330>
  40619e:	2200      	movs	r2, #0
  4061a0:	4b18      	ldr	r3, [pc, #96]	; (406204 <_dtoa_r+0x2c4>)
  4061a2:	f7fd fa1f 	bl	4035e4 <__aeabi_dmul>
  4061a6:	2200      	movs	r2, #0
  4061a8:	2300      	movs	r3, #0
  4061aa:	4606      	mov	r6, r0
  4061ac:	460f      	mov	r7, r1
  4061ae:	f002 faaf 	bl	408710 <__aeabi_dcmpeq>
  4061b2:	2800      	cmp	r0, #0
  4061b4:	f040 8088 	bne.w	4062c8 <_dtoa_r+0x388>
  4061b8:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  4061bc:	f04f 0a00 	mov.w	sl, #0
  4061c0:	f8df b040 	ldr.w	fp, [pc, #64]	; 406204 <_dtoa_r+0x2c4>
  4061c4:	940c      	str	r4, [sp, #48]	; 0x30
  4061c6:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  4061ca:	e028      	b.n	40621e <_dtoa_r+0x2de>
  4061cc:	f3af 8000 	nop.w
  4061d0:	636f4361 	.word	0x636f4361
  4061d4:	3fd287a7 	.word	0x3fd287a7
  4061d8:	8b60c8b3 	.word	0x8b60c8b3
  4061dc:	3fc68a28 	.word	0x3fc68a28
  4061e0:	509f79fb 	.word	0x509f79fb
  4061e4:	3fd34413 	.word	0x3fd34413
  4061e8:	7ff00000 	.word	0x7ff00000
  4061ec:	00408dbd 	.word	0x00408dbd
  4061f0:	00408de0 	.word	0x00408de0
  4061f4:	00408dec 	.word	0x00408dec
  4061f8:	3ff80000 	.word	0x3ff80000
  4061fc:	00408e18 	.word	0x00408e18
  406200:	00408dbc 	.word	0x00408dbc
  406204:	40240000 	.word	0x40240000
  406208:	f7fd f9ec 	bl	4035e4 <__aeabi_dmul>
  40620c:	2200      	movs	r2, #0
  40620e:	2300      	movs	r3, #0
  406210:	4606      	mov	r6, r0
  406212:	460f      	mov	r7, r1
  406214:	f002 fa7c 	bl	408710 <__aeabi_dcmpeq>
  406218:	2800      	cmp	r0, #0
  40621a:	f040 83c1 	bne.w	4069a0 <_dtoa_r+0xa60>
  40621e:	4642      	mov	r2, r8
  406220:	464b      	mov	r3, r9
  406222:	4630      	mov	r0, r6
  406224:	4639      	mov	r1, r7
  406226:	f7fd fb07 	bl	403838 <__aeabi_ddiv>
  40622a:	f002 fab9 	bl	4087a0 <__aeabi_d2iz>
  40622e:	4604      	mov	r4, r0
  406230:	f7fd f972 	bl	403518 <__aeabi_i2d>
  406234:	4642      	mov	r2, r8
  406236:	464b      	mov	r3, r9
  406238:	f7fd f9d4 	bl	4035e4 <__aeabi_dmul>
  40623c:	4602      	mov	r2, r0
  40623e:	460b      	mov	r3, r1
  406240:	4630      	mov	r0, r6
  406242:	4639      	mov	r1, r7
  406244:	f7fd f81a 	bl	40327c <__aeabi_dsub>
  406248:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  40624c:	9e04      	ldr	r6, [sp, #16]
  40624e:	f805 eb01 	strb.w	lr, [r5], #1
  406252:	eba5 0e06 	sub.w	lr, r5, r6
  406256:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  406258:	45b6      	cmp	lr, r6
  40625a:	e9cd 0106 	strd	r0, r1, [sp, #24]
  40625e:	4652      	mov	r2, sl
  406260:	465b      	mov	r3, fp
  406262:	d1d1      	bne.n	406208 <_dtoa_r+0x2c8>
  406264:	46a0      	mov	r8, r4
  406266:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  40626a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40626c:	4606      	mov	r6, r0
  40626e:	460f      	mov	r7, r1
  406270:	4632      	mov	r2, r6
  406272:	463b      	mov	r3, r7
  406274:	4630      	mov	r0, r6
  406276:	4639      	mov	r1, r7
  406278:	f7fd f802 	bl	403280 <__adddf3>
  40627c:	4606      	mov	r6, r0
  40627e:	460f      	mov	r7, r1
  406280:	4602      	mov	r2, r0
  406282:	460b      	mov	r3, r1
  406284:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  406288:	f002 fa4c 	bl	408724 <__aeabi_dcmplt>
  40628c:	b948      	cbnz	r0, 4062a2 <_dtoa_r+0x362>
  40628e:	4632      	mov	r2, r6
  406290:	463b      	mov	r3, r7
  406292:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  406296:	f002 fa3b 	bl	408710 <__aeabi_dcmpeq>
  40629a:	b1a8      	cbz	r0, 4062c8 <_dtoa_r+0x388>
  40629c:	f018 0f01 	tst.w	r8, #1
  4062a0:	d012      	beq.n	4062c8 <_dtoa_r+0x388>
  4062a2:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  4062a6:	9a04      	ldr	r2, [sp, #16]
  4062a8:	1e6b      	subs	r3, r5, #1
  4062aa:	e004      	b.n	4062b6 <_dtoa_r+0x376>
  4062ac:	429a      	cmp	r2, r3
  4062ae:	f000 8401 	beq.w	406ab4 <_dtoa_r+0xb74>
  4062b2:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  4062b6:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  4062ba:	f103 0501 	add.w	r5, r3, #1
  4062be:	d0f5      	beq.n	4062ac <_dtoa_r+0x36c>
  4062c0:	f108 0801 	add.w	r8, r8, #1
  4062c4:	f883 8000 	strb.w	r8, [r3]
  4062c8:	4649      	mov	r1, r9
  4062ca:	4620      	mov	r0, r4
  4062cc:	f001 f984 	bl	4075d8 <_Bfree>
  4062d0:	2200      	movs	r2, #0
  4062d2:	9b02      	ldr	r3, [sp, #8]
  4062d4:	702a      	strb	r2, [r5, #0]
  4062d6:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4062d8:	3301      	adds	r3, #1
  4062da:	6013      	str	r3, [r2, #0]
  4062dc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4062de:	2b00      	cmp	r3, #0
  4062e0:	f000 839e 	beq.w	406a20 <_dtoa_r+0xae0>
  4062e4:	9804      	ldr	r0, [sp, #16]
  4062e6:	601d      	str	r5, [r3, #0]
  4062e8:	b01b      	add	sp, #108	; 0x6c
  4062ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4062ee:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4062f0:	2a00      	cmp	r2, #0
  4062f2:	d03e      	beq.n	406372 <_dtoa_r+0x432>
  4062f4:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4062f6:	2a01      	cmp	r2, #1
  4062f8:	f340 8311 	ble.w	40691e <_dtoa_r+0x9de>
  4062fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4062fe:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  406300:	1e5f      	subs	r7, r3, #1
  406302:	42ba      	cmp	r2, r7
  406304:	f2c0 838f 	blt.w	406a26 <_dtoa_r+0xae6>
  406308:	1bd7      	subs	r7, r2, r7
  40630a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40630c:	2b00      	cmp	r3, #0
  40630e:	f2c0 848b 	blt.w	406c28 <_dtoa_r+0xce8>
  406312:	9d08      	ldr	r5, [sp, #32]
  406314:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  406316:	9a08      	ldr	r2, [sp, #32]
  406318:	441a      	add	r2, r3
  40631a:	9208      	str	r2, [sp, #32]
  40631c:	9a06      	ldr	r2, [sp, #24]
  40631e:	2101      	movs	r1, #1
  406320:	441a      	add	r2, r3
  406322:	4620      	mov	r0, r4
  406324:	9206      	str	r2, [sp, #24]
  406326:	f001 f9f1 	bl	40770c <__i2b>
  40632a:	4606      	mov	r6, r0
  40632c:	e024      	b.n	406378 <_dtoa_r+0x438>
  40632e:	2301      	movs	r3, #1
  406330:	930e      	str	r3, [sp, #56]	; 0x38
  406332:	e6af      	b.n	406094 <_dtoa_r+0x154>
  406334:	9a08      	ldr	r2, [sp, #32]
  406336:	9b02      	ldr	r3, [sp, #8]
  406338:	1ad2      	subs	r2, r2, r3
  40633a:	425b      	negs	r3, r3
  40633c:	930c      	str	r3, [sp, #48]	; 0x30
  40633e:	2300      	movs	r3, #0
  406340:	9208      	str	r2, [sp, #32]
  406342:	930d      	str	r3, [sp, #52]	; 0x34
  406344:	e6b8      	b.n	4060b8 <_dtoa_r+0x178>
  406346:	f1c7 0301 	rsb	r3, r7, #1
  40634a:	9308      	str	r3, [sp, #32]
  40634c:	2300      	movs	r3, #0
  40634e:	9306      	str	r3, [sp, #24]
  406350:	e6a7      	b.n	4060a2 <_dtoa_r+0x162>
  406352:	9d02      	ldr	r5, [sp, #8]
  406354:	4628      	mov	r0, r5
  406356:	f7fd f8df 	bl	403518 <__aeabi_i2d>
  40635a:	4602      	mov	r2, r0
  40635c:	460b      	mov	r3, r1
  40635e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  406362:	f002 f9d5 	bl	408710 <__aeabi_dcmpeq>
  406366:	2800      	cmp	r0, #0
  406368:	f47f ae80 	bne.w	40606c <_dtoa_r+0x12c>
  40636c:	1e6b      	subs	r3, r5, #1
  40636e:	9302      	str	r3, [sp, #8]
  406370:	e67c      	b.n	40606c <_dtoa_r+0x12c>
  406372:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  406374:	9d08      	ldr	r5, [sp, #32]
  406376:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  406378:	2d00      	cmp	r5, #0
  40637a:	dd0c      	ble.n	406396 <_dtoa_r+0x456>
  40637c:	9906      	ldr	r1, [sp, #24]
  40637e:	2900      	cmp	r1, #0
  406380:	460b      	mov	r3, r1
  406382:	dd08      	ble.n	406396 <_dtoa_r+0x456>
  406384:	42a9      	cmp	r1, r5
  406386:	9a08      	ldr	r2, [sp, #32]
  406388:	bfa8      	it	ge
  40638a:	462b      	movge	r3, r5
  40638c:	1ad2      	subs	r2, r2, r3
  40638e:	1aed      	subs	r5, r5, r3
  406390:	1acb      	subs	r3, r1, r3
  406392:	9208      	str	r2, [sp, #32]
  406394:	9306      	str	r3, [sp, #24]
  406396:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  406398:	b1d3      	cbz	r3, 4063d0 <_dtoa_r+0x490>
  40639a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40639c:	2b00      	cmp	r3, #0
  40639e:	f000 82b7 	beq.w	406910 <_dtoa_r+0x9d0>
  4063a2:	2f00      	cmp	r7, #0
  4063a4:	dd10      	ble.n	4063c8 <_dtoa_r+0x488>
  4063a6:	4631      	mov	r1, r6
  4063a8:	463a      	mov	r2, r7
  4063aa:	4620      	mov	r0, r4
  4063ac:	f001 fa4a 	bl	407844 <__pow5mult>
  4063b0:	464a      	mov	r2, r9
  4063b2:	4601      	mov	r1, r0
  4063b4:	4606      	mov	r6, r0
  4063b6:	4620      	mov	r0, r4
  4063b8:	f001 f9b2 	bl	407720 <__multiply>
  4063bc:	4649      	mov	r1, r9
  4063be:	4680      	mov	r8, r0
  4063c0:	4620      	mov	r0, r4
  4063c2:	f001 f909 	bl	4075d8 <_Bfree>
  4063c6:	46c1      	mov	r9, r8
  4063c8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4063ca:	1bda      	subs	r2, r3, r7
  4063cc:	f040 82a1 	bne.w	406912 <_dtoa_r+0x9d2>
  4063d0:	2101      	movs	r1, #1
  4063d2:	4620      	mov	r0, r4
  4063d4:	f001 f99a 	bl	40770c <__i2b>
  4063d8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4063da:	2b00      	cmp	r3, #0
  4063dc:	4680      	mov	r8, r0
  4063de:	dd1c      	ble.n	40641a <_dtoa_r+0x4da>
  4063e0:	4601      	mov	r1, r0
  4063e2:	461a      	mov	r2, r3
  4063e4:	4620      	mov	r0, r4
  4063e6:	f001 fa2d 	bl	407844 <__pow5mult>
  4063ea:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4063ec:	2b01      	cmp	r3, #1
  4063ee:	4680      	mov	r8, r0
  4063f0:	f340 8254 	ble.w	40689c <_dtoa_r+0x95c>
  4063f4:	2300      	movs	r3, #0
  4063f6:	930c      	str	r3, [sp, #48]	; 0x30
  4063f8:	f8d8 3010 	ldr.w	r3, [r8, #16]
  4063fc:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  406400:	6918      	ldr	r0, [r3, #16]
  406402:	f001 f933 	bl	40766c <__hi0bits>
  406406:	f1c0 0020 	rsb	r0, r0, #32
  40640a:	e010      	b.n	40642e <_dtoa_r+0x4ee>
  40640c:	f1c3 0520 	rsb	r5, r3, #32
  406410:	fa0a f005 	lsl.w	r0, sl, r5
  406414:	e674      	b.n	406100 <_dtoa_r+0x1c0>
  406416:	900e      	str	r0, [sp, #56]	; 0x38
  406418:	e63c      	b.n	406094 <_dtoa_r+0x154>
  40641a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40641c:	2b01      	cmp	r3, #1
  40641e:	f340 8287 	ble.w	406930 <_dtoa_r+0x9f0>
  406422:	2300      	movs	r3, #0
  406424:	930c      	str	r3, [sp, #48]	; 0x30
  406426:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  406428:	2001      	movs	r0, #1
  40642a:	2b00      	cmp	r3, #0
  40642c:	d1e4      	bne.n	4063f8 <_dtoa_r+0x4b8>
  40642e:	9a06      	ldr	r2, [sp, #24]
  406430:	4410      	add	r0, r2
  406432:	f010 001f 	ands.w	r0, r0, #31
  406436:	f000 80a1 	beq.w	40657c <_dtoa_r+0x63c>
  40643a:	f1c0 0320 	rsb	r3, r0, #32
  40643e:	2b04      	cmp	r3, #4
  406440:	f340 849e 	ble.w	406d80 <_dtoa_r+0xe40>
  406444:	9b08      	ldr	r3, [sp, #32]
  406446:	f1c0 001c 	rsb	r0, r0, #28
  40644a:	4403      	add	r3, r0
  40644c:	9308      	str	r3, [sp, #32]
  40644e:	4613      	mov	r3, r2
  406450:	4403      	add	r3, r0
  406452:	4405      	add	r5, r0
  406454:	9306      	str	r3, [sp, #24]
  406456:	9b08      	ldr	r3, [sp, #32]
  406458:	2b00      	cmp	r3, #0
  40645a:	dd05      	ble.n	406468 <_dtoa_r+0x528>
  40645c:	4649      	mov	r1, r9
  40645e:	461a      	mov	r2, r3
  406460:	4620      	mov	r0, r4
  406462:	f001 fa3f 	bl	4078e4 <__lshift>
  406466:	4681      	mov	r9, r0
  406468:	9b06      	ldr	r3, [sp, #24]
  40646a:	2b00      	cmp	r3, #0
  40646c:	dd05      	ble.n	40647a <_dtoa_r+0x53a>
  40646e:	4641      	mov	r1, r8
  406470:	461a      	mov	r2, r3
  406472:	4620      	mov	r0, r4
  406474:	f001 fa36 	bl	4078e4 <__lshift>
  406478:	4680      	mov	r8, r0
  40647a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40647c:	2b00      	cmp	r3, #0
  40647e:	f040 8086 	bne.w	40658e <_dtoa_r+0x64e>
  406482:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  406484:	2b00      	cmp	r3, #0
  406486:	f340 8266 	ble.w	406956 <_dtoa_r+0xa16>
  40648a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40648c:	2b00      	cmp	r3, #0
  40648e:	f000 8098 	beq.w	4065c2 <_dtoa_r+0x682>
  406492:	2d00      	cmp	r5, #0
  406494:	dd05      	ble.n	4064a2 <_dtoa_r+0x562>
  406496:	4631      	mov	r1, r6
  406498:	462a      	mov	r2, r5
  40649a:	4620      	mov	r0, r4
  40649c:	f001 fa22 	bl	4078e4 <__lshift>
  4064a0:	4606      	mov	r6, r0
  4064a2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4064a4:	2b00      	cmp	r3, #0
  4064a6:	f040 8337 	bne.w	406b18 <_dtoa_r+0xbd8>
  4064aa:	9606      	str	r6, [sp, #24]
  4064ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4064ae:	9a04      	ldr	r2, [sp, #16]
  4064b0:	f8dd b018 	ldr.w	fp, [sp, #24]
  4064b4:	3b01      	subs	r3, #1
  4064b6:	18d3      	adds	r3, r2, r3
  4064b8:	930b      	str	r3, [sp, #44]	; 0x2c
  4064ba:	f00a 0301 	and.w	r3, sl, #1
  4064be:	930c      	str	r3, [sp, #48]	; 0x30
  4064c0:	4617      	mov	r7, r2
  4064c2:	46c2      	mov	sl, r8
  4064c4:	4651      	mov	r1, sl
  4064c6:	4648      	mov	r0, r9
  4064c8:	f7ff fca6 	bl	405e18 <quorem>
  4064cc:	4631      	mov	r1, r6
  4064ce:	4605      	mov	r5, r0
  4064d0:	4648      	mov	r0, r9
  4064d2:	f001 fa59 	bl	407988 <__mcmp>
  4064d6:	465a      	mov	r2, fp
  4064d8:	900a      	str	r0, [sp, #40]	; 0x28
  4064da:	4651      	mov	r1, sl
  4064dc:	4620      	mov	r0, r4
  4064de:	f001 fa6f 	bl	4079c0 <__mdiff>
  4064e2:	68c2      	ldr	r2, [r0, #12]
  4064e4:	4680      	mov	r8, r0
  4064e6:	f105 0330 	add.w	r3, r5, #48	; 0x30
  4064ea:	2a00      	cmp	r2, #0
  4064ec:	f040 822b 	bne.w	406946 <_dtoa_r+0xa06>
  4064f0:	4601      	mov	r1, r0
  4064f2:	4648      	mov	r0, r9
  4064f4:	9308      	str	r3, [sp, #32]
  4064f6:	f001 fa47 	bl	407988 <__mcmp>
  4064fa:	4641      	mov	r1, r8
  4064fc:	9006      	str	r0, [sp, #24]
  4064fe:	4620      	mov	r0, r4
  406500:	f001 f86a 	bl	4075d8 <_Bfree>
  406504:	9a06      	ldr	r2, [sp, #24]
  406506:	9b08      	ldr	r3, [sp, #32]
  406508:	b932      	cbnz	r2, 406518 <_dtoa_r+0x5d8>
  40650a:	9924      	ldr	r1, [sp, #144]	; 0x90
  40650c:	b921      	cbnz	r1, 406518 <_dtoa_r+0x5d8>
  40650e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  406510:	2a00      	cmp	r2, #0
  406512:	f000 83ef 	beq.w	406cf4 <_dtoa_r+0xdb4>
  406516:	9a24      	ldr	r2, [sp, #144]	; 0x90
  406518:	990a      	ldr	r1, [sp, #40]	; 0x28
  40651a:	2900      	cmp	r1, #0
  40651c:	f2c0 829f 	blt.w	406a5e <_dtoa_r+0xb1e>
  406520:	d105      	bne.n	40652e <_dtoa_r+0x5ee>
  406522:	9924      	ldr	r1, [sp, #144]	; 0x90
  406524:	b919      	cbnz	r1, 40652e <_dtoa_r+0x5ee>
  406526:	990c      	ldr	r1, [sp, #48]	; 0x30
  406528:	2900      	cmp	r1, #0
  40652a:	f000 8298 	beq.w	406a5e <_dtoa_r+0xb1e>
  40652e:	2a00      	cmp	r2, #0
  406530:	f300 8306 	bgt.w	406b40 <_dtoa_r+0xc00>
  406534:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  406536:	703b      	strb	r3, [r7, #0]
  406538:	f107 0801 	add.w	r8, r7, #1
  40653c:	4297      	cmp	r7, r2
  40653e:	4645      	mov	r5, r8
  406540:	f000 830c 	beq.w	406b5c <_dtoa_r+0xc1c>
  406544:	4649      	mov	r1, r9
  406546:	2300      	movs	r3, #0
  406548:	220a      	movs	r2, #10
  40654a:	4620      	mov	r0, r4
  40654c:	f001 f84e 	bl	4075ec <__multadd>
  406550:	455e      	cmp	r6, fp
  406552:	4681      	mov	r9, r0
  406554:	4631      	mov	r1, r6
  406556:	f04f 0300 	mov.w	r3, #0
  40655a:	f04f 020a 	mov.w	r2, #10
  40655e:	4620      	mov	r0, r4
  406560:	f000 81eb 	beq.w	40693a <_dtoa_r+0x9fa>
  406564:	f001 f842 	bl	4075ec <__multadd>
  406568:	4659      	mov	r1, fp
  40656a:	4606      	mov	r6, r0
  40656c:	2300      	movs	r3, #0
  40656e:	220a      	movs	r2, #10
  406570:	4620      	mov	r0, r4
  406572:	f001 f83b 	bl	4075ec <__multadd>
  406576:	4647      	mov	r7, r8
  406578:	4683      	mov	fp, r0
  40657a:	e7a3      	b.n	4064c4 <_dtoa_r+0x584>
  40657c:	201c      	movs	r0, #28
  40657e:	9b08      	ldr	r3, [sp, #32]
  406580:	4403      	add	r3, r0
  406582:	9308      	str	r3, [sp, #32]
  406584:	9b06      	ldr	r3, [sp, #24]
  406586:	4403      	add	r3, r0
  406588:	4405      	add	r5, r0
  40658a:	9306      	str	r3, [sp, #24]
  40658c:	e763      	b.n	406456 <_dtoa_r+0x516>
  40658e:	4641      	mov	r1, r8
  406590:	4648      	mov	r0, r9
  406592:	f001 f9f9 	bl	407988 <__mcmp>
  406596:	2800      	cmp	r0, #0
  406598:	f6bf af73 	bge.w	406482 <_dtoa_r+0x542>
  40659c:	9f02      	ldr	r7, [sp, #8]
  40659e:	4649      	mov	r1, r9
  4065a0:	2300      	movs	r3, #0
  4065a2:	220a      	movs	r2, #10
  4065a4:	4620      	mov	r0, r4
  4065a6:	3f01      	subs	r7, #1
  4065a8:	9702      	str	r7, [sp, #8]
  4065aa:	f001 f81f 	bl	4075ec <__multadd>
  4065ae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4065b0:	4681      	mov	r9, r0
  4065b2:	2b00      	cmp	r3, #0
  4065b4:	f040 83b6 	bne.w	406d24 <_dtoa_r+0xde4>
  4065b8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4065ba:	2b00      	cmp	r3, #0
  4065bc:	f340 83bf 	ble.w	406d3e <_dtoa_r+0xdfe>
  4065c0:	930a      	str	r3, [sp, #40]	; 0x28
  4065c2:	f8dd b010 	ldr.w	fp, [sp, #16]
  4065c6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  4065c8:	465d      	mov	r5, fp
  4065ca:	e002      	b.n	4065d2 <_dtoa_r+0x692>
  4065cc:	f001 f80e 	bl	4075ec <__multadd>
  4065d0:	4681      	mov	r9, r0
  4065d2:	4641      	mov	r1, r8
  4065d4:	4648      	mov	r0, r9
  4065d6:	f7ff fc1f 	bl	405e18 <quorem>
  4065da:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  4065de:	f805 ab01 	strb.w	sl, [r5], #1
  4065e2:	eba5 030b 	sub.w	r3, r5, fp
  4065e6:	42bb      	cmp	r3, r7
  4065e8:	f04f 020a 	mov.w	r2, #10
  4065ec:	f04f 0300 	mov.w	r3, #0
  4065f0:	4649      	mov	r1, r9
  4065f2:	4620      	mov	r0, r4
  4065f4:	dbea      	blt.n	4065cc <_dtoa_r+0x68c>
  4065f6:	9b04      	ldr	r3, [sp, #16]
  4065f8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4065fa:	2a01      	cmp	r2, #1
  4065fc:	bfac      	ite	ge
  4065fe:	189b      	addge	r3, r3, r2
  406600:	3301      	addlt	r3, #1
  406602:	461d      	mov	r5, r3
  406604:	f04f 0b00 	mov.w	fp, #0
  406608:	4649      	mov	r1, r9
  40660a:	2201      	movs	r2, #1
  40660c:	4620      	mov	r0, r4
  40660e:	f001 f969 	bl	4078e4 <__lshift>
  406612:	4641      	mov	r1, r8
  406614:	4681      	mov	r9, r0
  406616:	f001 f9b7 	bl	407988 <__mcmp>
  40661a:	2800      	cmp	r0, #0
  40661c:	f340 823d 	ble.w	406a9a <_dtoa_r+0xb5a>
  406620:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  406624:	9904      	ldr	r1, [sp, #16]
  406626:	1e6b      	subs	r3, r5, #1
  406628:	e004      	b.n	406634 <_dtoa_r+0x6f4>
  40662a:	428b      	cmp	r3, r1
  40662c:	f000 81ae 	beq.w	40698c <_dtoa_r+0xa4c>
  406630:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  406634:	2a39      	cmp	r2, #57	; 0x39
  406636:	f103 0501 	add.w	r5, r3, #1
  40663a:	d0f6      	beq.n	40662a <_dtoa_r+0x6ea>
  40663c:	3201      	adds	r2, #1
  40663e:	701a      	strb	r2, [r3, #0]
  406640:	4641      	mov	r1, r8
  406642:	4620      	mov	r0, r4
  406644:	f000 ffc8 	bl	4075d8 <_Bfree>
  406648:	2e00      	cmp	r6, #0
  40664a:	f43f ae3d 	beq.w	4062c8 <_dtoa_r+0x388>
  40664e:	f1bb 0f00 	cmp.w	fp, #0
  406652:	d005      	beq.n	406660 <_dtoa_r+0x720>
  406654:	45b3      	cmp	fp, r6
  406656:	d003      	beq.n	406660 <_dtoa_r+0x720>
  406658:	4659      	mov	r1, fp
  40665a:	4620      	mov	r0, r4
  40665c:	f000 ffbc 	bl	4075d8 <_Bfree>
  406660:	4631      	mov	r1, r6
  406662:	4620      	mov	r0, r4
  406664:	f000 ffb8 	bl	4075d8 <_Bfree>
  406668:	e62e      	b.n	4062c8 <_dtoa_r+0x388>
  40666a:	2300      	movs	r3, #0
  40666c:	930b      	str	r3, [sp, #44]	; 0x2c
  40666e:	9b02      	ldr	r3, [sp, #8]
  406670:	9a25      	ldr	r2, [sp, #148]	; 0x94
  406672:	4413      	add	r3, r2
  406674:	930f      	str	r3, [sp, #60]	; 0x3c
  406676:	3301      	adds	r3, #1
  406678:	2b01      	cmp	r3, #1
  40667a:	461f      	mov	r7, r3
  40667c:	461e      	mov	r6, r3
  40667e:	930a      	str	r3, [sp, #40]	; 0x28
  406680:	bfb8      	it	lt
  406682:	2701      	movlt	r7, #1
  406684:	2100      	movs	r1, #0
  406686:	2f17      	cmp	r7, #23
  406688:	6461      	str	r1, [r4, #68]	; 0x44
  40668a:	d90a      	bls.n	4066a2 <_dtoa_r+0x762>
  40668c:	2201      	movs	r2, #1
  40668e:	2304      	movs	r3, #4
  406690:	005b      	lsls	r3, r3, #1
  406692:	f103 0014 	add.w	r0, r3, #20
  406696:	4287      	cmp	r7, r0
  406698:	4611      	mov	r1, r2
  40669a:	f102 0201 	add.w	r2, r2, #1
  40669e:	d2f7      	bcs.n	406690 <_dtoa_r+0x750>
  4066a0:	6461      	str	r1, [r4, #68]	; 0x44
  4066a2:	4620      	mov	r0, r4
  4066a4:	f000 ff72 	bl	40758c <_Balloc>
  4066a8:	2e0e      	cmp	r6, #14
  4066aa:	9004      	str	r0, [sp, #16]
  4066ac:	6420      	str	r0, [r4, #64]	; 0x40
  4066ae:	f63f ad41 	bhi.w	406134 <_dtoa_r+0x1f4>
  4066b2:	2d00      	cmp	r5, #0
  4066b4:	f43f ad3e 	beq.w	406134 <_dtoa_r+0x1f4>
  4066b8:	9902      	ldr	r1, [sp, #8]
  4066ba:	2900      	cmp	r1, #0
  4066bc:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  4066c0:	f340 8202 	ble.w	406ac8 <_dtoa_r+0xb88>
  4066c4:	4bb8      	ldr	r3, [pc, #736]	; (4069a8 <_dtoa_r+0xa68>)
  4066c6:	f001 020f 	and.w	r2, r1, #15
  4066ca:	110d      	asrs	r5, r1, #4
  4066cc:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4066d0:	06e9      	lsls	r1, r5, #27
  4066d2:	e9d3 6700 	ldrd	r6, r7, [r3]
  4066d6:	f140 81ae 	bpl.w	406a36 <_dtoa_r+0xaf6>
  4066da:	4bb4      	ldr	r3, [pc, #720]	; (4069ac <_dtoa_r+0xa6c>)
  4066dc:	4650      	mov	r0, sl
  4066de:	4659      	mov	r1, fp
  4066e0:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  4066e4:	f7fd f8a8 	bl	403838 <__aeabi_ddiv>
  4066e8:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  4066ec:	f005 050f 	and.w	r5, r5, #15
  4066f0:	f04f 0a03 	mov.w	sl, #3
  4066f4:	b18d      	cbz	r5, 40671a <_dtoa_r+0x7da>
  4066f6:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 4069ac <_dtoa_r+0xa6c>
  4066fa:	07ea      	lsls	r2, r5, #31
  4066fc:	d509      	bpl.n	406712 <_dtoa_r+0x7d2>
  4066fe:	4630      	mov	r0, r6
  406700:	4639      	mov	r1, r7
  406702:	e9d8 2300 	ldrd	r2, r3, [r8]
  406706:	f7fc ff6d 	bl	4035e4 <__aeabi_dmul>
  40670a:	f10a 0a01 	add.w	sl, sl, #1
  40670e:	4606      	mov	r6, r0
  406710:	460f      	mov	r7, r1
  406712:	106d      	asrs	r5, r5, #1
  406714:	f108 0808 	add.w	r8, r8, #8
  406718:	d1ef      	bne.n	4066fa <_dtoa_r+0x7ba>
  40671a:	463b      	mov	r3, r7
  40671c:	4632      	mov	r2, r6
  40671e:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  406722:	f7fd f889 	bl	403838 <__aeabi_ddiv>
  406726:	4607      	mov	r7, r0
  406728:	4688      	mov	r8, r1
  40672a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40672c:	b143      	cbz	r3, 406740 <_dtoa_r+0x800>
  40672e:	2200      	movs	r2, #0
  406730:	4b9f      	ldr	r3, [pc, #636]	; (4069b0 <_dtoa_r+0xa70>)
  406732:	4638      	mov	r0, r7
  406734:	4641      	mov	r1, r8
  406736:	f001 fff5 	bl	408724 <__aeabi_dcmplt>
  40673a:	2800      	cmp	r0, #0
  40673c:	f040 8286 	bne.w	406c4c <_dtoa_r+0xd0c>
  406740:	4650      	mov	r0, sl
  406742:	f7fc fee9 	bl	403518 <__aeabi_i2d>
  406746:	463a      	mov	r2, r7
  406748:	4643      	mov	r3, r8
  40674a:	f7fc ff4b 	bl	4035e4 <__aeabi_dmul>
  40674e:	4b99      	ldr	r3, [pc, #612]	; (4069b4 <_dtoa_r+0xa74>)
  406750:	2200      	movs	r2, #0
  406752:	f7fc fd95 	bl	403280 <__adddf3>
  406756:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  406758:	4605      	mov	r5, r0
  40675a:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  40675e:	2b00      	cmp	r3, #0
  406760:	f000 813e 	beq.w	4069e0 <_dtoa_r+0xaa0>
  406764:	9b02      	ldr	r3, [sp, #8]
  406766:	9315      	str	r3, [sp, #84]	; 0x54
  406768:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40676a:	9312      	str	r3, [sp, #72]	; 0x48
  40676c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40676e:	2b00      	cmp	r3, #0
  406770:	f000 81fa 	beq.w	406b68 <_dtoa_r+0xc28>
  406774:	9a12      	ldr	r2, [sp, #72]	; 0x48
  406776:	4b8c      	ldr	r3, [pc, #560]	; (4069a8 <_dtoa_r+0xa68>)
  406778:	498f      	ldr	r1, [pc, #572]	; (4069b8 <_dtoa_r+0xa78>)
  40677a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  40677e:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  406782:	2000      	movs	r0, #0
  406784:	f7fd f858 	bl	403838 <__aeabi_ddiv>
  406788:	462a      	mov	r2, r5
  40678a:	4633      	mov	r3, r6
  40678c:	f7fc fd76 	bl	40327c <__aeabi_dsub>
  406790:	4682      	mov	sl, r0
  406792:	468b      	mov	fp, r1
  406794:	4638      	mov	r0, r7
  406796:	4641      	mov	r1, r8
  406798:	f002 f802 	bl	4087a0 <__aeabi_d2iz>
  40679c:	4605      	mov	r5, r0
  40679e:	f7fc febb 	bl	403518 <__aeabi_i2d>
  4067a2:	4602      	mov	r2, r0
  4067a4:	460b      	mov	r3, r1
  4067a6:	4638      	mov	r0, r7
  4067a8:	4641      	mov	r1, r8
  4067aa:	f7fc fd67 	bl	40327c <__aeabi_dsub>
  4067ae:	3530      	adds	r5, #48	; 0x30
  4067b0:	fa5f f885 	uxtb.w	r8, r5
  4067b4:	9d04      	ldr	r5, [sp, #16]
  4067b6:	4606      	mov	r6, r0
  4067b8:	460f      	mov	r7, r1
  4067ba:	f885 8000 	strb.w	r8, [r5]
  4067be:	4602      	mov	r2, r0
  4067c0:	460b      	mov	r3, r1
  4067c2:	4650      	mov	r0, sl
  4067c4:	4659      	mov	r1, fp
  4067c6:	3501      	adds	r5, #1
  4067c8:	f001 ffca 	bl	408760 <__aeabi_dcmpgt>
  4067cc:	2800      	cmp	r0, #0
  4067ce:	d154      	bne.n	40687a <_dtoa_r+0x93a>
  4067d0:	4632      	mov	r2, r6
  4067d2:	463b      	mov	r3, r7
  4067d4:	2000      	movs	r0, #0
  4067d6:	4976      	ldr	r1, [pc, #472]	; (4069b0 <_dtoa_r+0xa70>)
  4067d8:	f7fc fd50 	bl	40327c <__aeabi_dsub>
  4067dc:	4602      	mov	r2, r0
  4067de:	460b      	mov	r3, r1
  4067e0:	4650      	mov	r0, sl
  4067e2:	4659      	mov	r1, fp
  4067e4:	f001 ffbc 	bl	408760 <__aeabi_dcmpgt>
  4067e8:	2800      	cmp	r0, #0
  4067ea:	f040 8270 	bne.w	406cce <_dtoa_r+0xd8e>
  4067ee:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4067f0:	2a01      	cmp	r2, #1
  4067f2:	f000 8111 	beq.w	406a18 <_dtoa_r+0xad8>
  4067f6:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4067f8:	9a04      	ldr	r2, [sp, #16]
  4067fa:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  4067fe:	4413      	add	r3, r2
  406800:	4699      	mov	r9, r3
  406802:	e00d      	b.n	406820 <_dtoa_r+0x8e0>
  406804:	2000      	movs	r0, #0
  406806:	496a      	ldr	r1, [pc, #424]	; (4069b0 <_dtoa_r+0xa70>)
  406808:	f7fc fd38 	bl	40327c <__aeabi_dsub>
  40680c:	4652      	mov	r2, sl
  40680e:	465b      	mov	r3, fp
  406810:	f001 ff88 	bl	408724 <__aeabi_dcmplt>
  406814:	2800      	cmp	r0, #0
  406816:	f040 8258 	bne.w	406cca <_dtoa_r+0xd8a>
  40681a:	454d      	cmp	r5, r9
  40681c:	f000 80fa 	beq.w	406a14 <_dtoa_r+0xad4>
  406820:	4650      	mov	r0, sl
  406822:	4659      	mov	r1, fp
  406824:	2200      	movs	r2, #0
  406826:	4b65      	ldr	r3, [pc, #404]	; (4069bc <_dtoa_r+0xa7c>)
  406828:	f7fc fedc 	bl	4035e4 <__aeabi_dmul>
  40682c:	2200      	movs	r2, #0
  40682e:	4b63      	ldr	r3, [pc, #396]	; (4069bc <_dtoa_r+0xa7c>)
  406830:	4682      	mov	sl, r0
  406832:	468b      	mov	fp, r1
  406834:	4630      	mov	r0, r6
  406836:	4639      	mov	r1, r7
  406838:	f7fc fed4 	bl	4035e4 <__aeabi_dmul>
  40683c:	460f      	mov	r7, r1
  40683e:	4606      	mov	r6, r0
  406840:	f001 ffae 	bl	4087a0 <__aeabi_d2iz>
  406844:	4680      	mov	r8, r0
  406846:	f7fc fe67 	bl	403518 <__aeabi_i2d>
  40684a:	4602      	mov	r2, r0
  40684c:	460b      	mov	r3, r1
  40684e:	4630      	mov	r0, r6
  406850:	4639      	mov	r1, r7
  406852:	f7fc fd13 	bl	40327c <__aeabi_dsub>
  406856:	f108 0830 	add.w	r8, r8, #48	; 0x30
  40685a:	fa5f f888 	uxtb.w	r8, r8
  40685e:	4652      	mov	r2, sl
  406860:	465b      	mov	r3, fp
  406862:	f805 8b01 	strb.w	r8, [r5], #1
  406866:	4606      	mov	r6, r0
  406868:	460f      	mov	r7, r1
  40686a:	f001 ff5b 	bl	408724 <__aeabi_dcmplt>
  40686e:	4632      	mov	r2, r6
  406870:	463b      	mov	r3, r7
  406872:	2800      	cmp	r0, #0
  406874:	d0c6      	beq.n	406804 <_dtoa_r+0x8c4>
  406876:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  40687a:	9b15      	ldr	r3, [sp, #84]	; 0x54
  40687c:	9302      	str	r3, [sp, #8]
  40687e:	e523      	b.n	4062c8 <_dtoa_r+0x388>
  406880:	2300      	movs	r3, #0
  406882:	930b      	str	r3, [sp, #44]	; 0x2c
  406884:	9b25      	ldr	r3, [sp, #148]	; 0x94
  406886:	2b00      	cmp	r3, #0
  406888:	f340 80dc 	ble.w	406a44 <_dtoa_r+0xb04>
  40688c:	461f      	mov	r7, r3
  40688e:	461e      	mov	r6, r3
  406890:	930f      	str	r3, [sp, #60]	; 0x3c
  406892:	930a      	str	r3, [sp, #40]	; 0x28
  406894:	e6f6      	b.n	406684 <_dtoa_r+0x744>
  406896:	2301      	movs	r3, #1
  406898:	930b      	str	r3, [sp, #44]	; 0x2c
  40689a:	e7f3      	b.n	406884 <_dtoa_r+0x944>
  40689c:	f1ba 0f00 	cmp.w	sl, #0
  4068a0:	f47f ada8 	bne.w	4063f4 <_dtoa_r+0x4b4>
  4068a4:	f3cb 0313 	ubfx	r3, fp, #0, #20
  4068a8:	2b00      	cmp	r3, #0
  4068aa:	f47f adba 	bne.w	406422 <_dtoa_r+0x4e2>
  4068ae:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  4068b2:	0d3f      	lsrs	r7, r7, #20
  4068b4:	053f      	lsls	r7, r7, #20
  4068b6:	2f00      	cmp	r7, #0
  4068b8:	f000 820d 	beq.w	406cd6 <_dtoa_r+0xd96>
  4068bc:	9b08      	ldr	r3, [sp, #32]
  4068be:	3301      	adds	r3, #1
  4068c0:	9308      	str	r3, [sp, #32]
  4068c2:	9b06      	ldr	r3, [sp, #24]
  4068c4:	3301      	adds	r3, #1
  4068c6:	9306      	str	r3, [sp, #24]
  4068c8:	2301      	movs	r3, #1
  4068ca:	930c      	str	r3, [sp, #48]	; 0x30
  4068cc:	e5ab      	b.n	406426 <_dtoa_r+0x4e6>
  4068ce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4068d0:	2b00      	cmp	r3, #0
  4068d2:	f73f ac42 	bgt.w	40615a <_dtoa_r+0x21a>
  4068d6:	f040 8221 	bne.w	406d1c <_dtoa_r+0xddc>
  4068da:	2200      	movs	r2, #0
  4068dc:	4b38      	ldr	r3, [pc, #224]	; (4069c0 <_dtoa_r+0xa80>)
  4068de:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  4068e2:	f7fc fe7f 	bl	4035e4 <__aeabi_dmul>
  4068e6:	4652      	mov	r2, sl
  4068e8:	465b      	mov	r3, fp
  4068ea:	f001 ff2f 	bl	40874c <__aeabi_dcmpge>
  4068ee:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  4068f2:	4646      	mov	r6, r8
  4068f4:	2800      	cmp	r0, #0
  4068f6:	d041      	beq.n	40697c <_dtoa_r+0xa3c>
  4068f8:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4068fa:	9d04      	ldr	r5, [sp, #16]
  4068fc:	43db      	mvns	r3, r3
  4068fe:	9302      	str	r3, [sp, #8]
  406900:	4641      	mov	r1, r8
  406902:	4620      	mov	r0, r4
  406904:	f000 fe68 	bl	4075d8 <_Bfree>
  406908:	2e00      	cmp	r6, #0
  40690a:	f43f acdd 	beq.w	4062c8 <_dtoa_r+0x388>
  40690e:	e6a7      	b.n	406660 <_dtoa_r+0x720>
  406910:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  406912:	4649      	mov	r1, r9
  406914:	4620      	mov	r0, r4
  406916:	f000 ff95 	bl	407844 <__pow5mult>
  40691a:	4681      	mov	r9, r0
  40691c:	e558      	b.n	4063d0 <_dtoa_r+0x490>
  40691e:	9a14      	ldr	r2, [sp, #80]	; 0x50
  406920:	2a00      	cmp	r2, #0
  406922:	f000 8187 	beq.w	406c34 <_dtoa_r+0xcf4>
  406926:	f203 4333 	addw	r3, r3, #1075	; 0x433
  40692a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  40692c:	9d08      	ldr	r5, [sp, #32]
  40692e:	e4f2      	b.n	406316 <_dtoa_r+0x3d6>
  406930:	f1ba 0f00 	cmp.w	sl, #0
  406934:	f47f ad75 	bne.w	406422 <_dtoa_r+0x4e2>
  406938:	e7b4      	b.n	4068a4 <_dtoa_r+0x964>
  40693a:	f000 fe57 	bl	4075ec <__multadd>
  40693e:	4647      	mov	r7, r8
  406940:	4606      	mov	r6, r0
  406942:	4683      	mov	fp, r0
  406944:	e5be      	b.n	4064c4 <_dtoa_r+0x584>
  406946:	4601      	mov	r1, r0
  406948:	4620      	mov	r0, r4
  40694a:	9306      	str	r3, [sp, #24]
  40694c:	f000 fe44 	bl	4075d8 <_Bfree>
  406950:	2201      	movs	r2, #1
  406952:	9b06      	ldr	r3, [sp, #24]
  406954:	e5e0      	b.n	406518 <_dtoa_r+0x5d8>
  406956:	9b24      	ldr	r3, [sp, #144]	; 0x90
  406958:	2b02      	cmp	r3, #2
  40695a:	f77f ad96 	ble.w	40648a <_dtoa_r+0x54a>
  40695e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  406960:	2b00      	cmp	r3, #0
  406962:	d1c9      	bne.n	4068f8 <_dtoa_r+0x9b8>
  406964:	4641      	mov	r1, r8
  406966:	2205      	movs	r2, #5
  406968:	4620      	mov	r0, r4
  40696a:	f000 fe3f 	bl	4075ec <__multadd>
  40696e:	4601      	mov	r1, r0
  406970:	4680      	mov	r8, r0
  406972:	4648      	mov	r0, r9
  406974:	f001 f808 	bl	407988 <__mcmp>
  406978:	2800      	cmp	r0, #0
  40697a:	ddbd      	ble.n	4068f8 <_dtoa_r+0x9b8>
  40697c:	9a02      	ldr	r2, [sp, #8]
  40697e:	9904      	ldr	r1, [sp, #16]
  406980:	2331      	movs	r3, #49	; 0x31
  406982:	3201      	adds	r2, #1
  406984:	9202      	str	r2, [sp, #8]
  406986:	700b      	strb	r3, [r1, #0]
  406988:	1c4d      	adds	r5, r1, #1
  40698a:	e7b9      	b.n	406900 <_dtoa_r+0x9c0>
  40698c:	9a02      	ldr	r2, [sp, #8]
  40698e:	3201      	adds	r2, #1
  406990:	9202      	str	r2, [sp, #8]
  406992:	9a04      	ldr	r2, [sp, #16]
  406994:	2331      	movs	r3, #49	; 0x31
  406996:	7013      	strb	r3, [r2, #0]
  406998:	e652      	b.n	406640 <_dtoa_r+0x700>
  40699a:	2301      	movs	r3, #1
  40699c:	930b      	str	r3, [sp, #44]	; 0x2c
  40699e:	e666      	b.n	40666e <_dtoa_r+0x72e>
  4069a0:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  4069a4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4069a6:	e48f      	b.n	4062c8 <_dtoa_r+0x388>
  4069a8:	00408e18 	.word	0x00408e18
  4069ac:	00408df0 	.word	0x00408df0
  4069b0:	3ff00000 	.word	0x3ff00000
  4069b4:	401c0000 	.word	0x401c0000
  4069b8:	3fe00000 	.word	0x3fe00000
  4069bc:	40240000 	.word	0x40240000
  4069c0:	40140000 	.word	0x40140000
  4069c4:	4650      	mov	r0, sl
  4069c6:	f7fc fda7 	bl	403518 <__aeabi_i2d>
  4069ca:	463a      	mov	r2, r7
  4069cc:	4643      	mov	r3, r8
  4069ce:	f7fc fe09 	bl	4035e4 <__aeabi_dmul>
  4069d2:	2200      	movs	r2, #0
  4069d4:	4bc1      	ldr	r3, [pc, #772]	; (406cdc <_dtoa_r+0xd9c>)
  4069d6:	f7fc fc53 	bl	403280 <__adddf3>
  4069da:	4605      	mov	r5, r0
  4069dc:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  4069e0:	4641      	mov	r1, r8
  4069e2:	2200      	movs	r2, #0
  4069e4:	4bbe      	ldr	r3, [pc, #760]	; (406ce0 <_dtoa_r+0xda0>)
  4069e6:	4638      	mov	r0, r7
  4069e8:	f7fc fc48 	bl	40327c <__aeabi_dsub>
  4069ec:	462a      	mov	r2, r5
  4069ee:	4633      	mov	r3, r6
  4069f0:	4682      	mov	sl, r0
  4069f2:	468b      	mov	fp, r1
  4069f4:	f001 feb4 	bl	408760 <__aeabi_dcmpgt>
  4069f8:	4680      	mov	r8, r0
  4069fa:	2800      	cmp	r0, #0
  4069fc:	f040 8110 	bne.w	406c20 <_dtoa_r+0xce0>
  406a00:	462a      	mov	r2, r5
  406a02:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  406a06:	4650      	mov	r0, sl
  406a08:	4659      	mov	r1, fp
  406a0a:	f001 fe8b 	bl	408724 <__aeabi_dcmplt>
  406a0e:	b118      	cbz	r0, 406a18 <_dtoa_r+0xad8>
  406a10:	4646      	mov	r6, r8
  406a12:	e771      	b.n	4068f8 <_dtoa_r+0x9b8>
  406a14:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  406a18:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  406a1c:	f7ff bb8a 	b.w	406134 <_dtoa_r+0x1f4>
  406a20:	9804      	ldr	r0, [sp, #16]
  406a22:	f7ff babb 	b.w	405f9c <_dtoa_r+0x5c>
  406a26:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  406a28:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  406a2a:	970c      	str	r7, [sp, #48]	; 0x30
  406a2c:	1afb      	subs	r3, r7, r3
  406a2e:	441a      	add	r2, r3
  406a30:	920d      	str	r2, [sp, #52]	; 0x34
  406a32:	2700      	movs	r7, #0
  406a34:	e469      	b.n	40630a <_dtoa_r+0x3ca>
  406a36:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  406a3a:	f04f 0a02 	mov.w	sl, #2
  406a3e:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  406a42:	e657      	b.n	4066f4 <_dtoa_r+0x7b4>
  406a44:	2100      	movs	r1, #0
  406a46:	2301      	movs	r3, #1
  406a48:	6461      	str	r1, [r4, #68]	; 0x44
  406a4a:	4620      	mov	r0, r4
  406a4c:	9325      	str	r3, [sp, #148]	; 0x94
  406a4e:	f000 fd9d 	bl	40758c <_Balloc>
  406a52:	9b25      	ldr	r3, [sp, #148]	; 0x94
  406a54:	9004      	str	r0, [sp, #16]
  406a56:	6420      	str	r0, [r4, #64]	; 0x40
  406a58:	930a      	str	r3, [sp, #40]	; 0x28
  406a5a:	930f      	str	r3, [sp, #60]	; 0x3c
  406a5c:	e629      	b.n	4066b2 <_dtoa_r+0x772>
  406a5e:	2a00      	cmp	r2, #0
  406a60:	46d0      	mov	r8, sl
  406a62:	f8cd b018 	str.w	fp, [sp, #24]
  406a66:	469a      	mov	sl, r3
  406a68:	dd11      	ble.n	406a8e <_dtoa_r+0xb4e>
  406a6a:	4649      	mov	r1, r9
  406a6c:	2201      	movs	r2, #1
  406a6e:	4620      	mov	r0, r4
  406a70:	f000 ff38 	bl	4078e4 <__lshift>
  406a74:	4641      	mov	r1, r8
  406a76:	4681      	mov	r9, r0
  406a78:	f000 ff86 	bl	407988 <__mcmp>
  406a7c:	2800      	cmp	r0, #0
  406a7e:	f340 8146 	ble.w	406d0e <_dtoa_r+0xdce>
  406a82:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  406a86:	f000 8106 	beq.w	406c96 <_dtoa_r+0xd56>
  406a8a:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  406a8e:	46b3      	mov	fp, r6
  406a90:	f887 a000 	strb.w	sl, [r7]
  406a94:	1c7d      	adds	r5, r7, #1
  406a96:	9e06      	ldr	r6, [sp, #24]
  406a98:	e5d2      	b.n	406640 <_dtoa_r+0x700>
  406a9a:	d104      	bne.n	406aa6 <_dtoa_r+0xb66>
  406a9c:	f01a 0f01 	tst.w	sl, #1
  406aa0:	d001      	beq.n	406aa6 <_dtoa_r+0xb66>
  406aa2:	e5bd      	b.n	406620 <_dtoa_r+0x6e0>
  406aa4:	4615      	mov	r5, r2
  406aa6:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  406aaa:	2b30      	cmp	r3, #48	; 0x30
  406aac:	f105 32ff 	add.w	r2, r5, #4294967295
  406ab0:	d0f8      	beq.n	406aa4 <_dtoa_r+0xb64>
  406ab2:	e5c5      	b.n	406640 <_dtoa_r+0x700>
  406ab4:	9904      	ldr	r1, [sp, #16]
  406ab6:	2230      	movs	r2, #48	; 0x30
  406ab8:	700a      	strb	r2, [r1, #0]
  406aba:	9a02      	ldr	r2, [sp, #8]
  406abc:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  406ac0:	3201      	adds	r2, #1
  406ac2:	9202      	str	r2, [sp, #8]
  406ac4:	f7ff bbfc 	b.w	4062c0 <_dtoa_r+0x380>
  406ac8:	f000 80bb 	beq.w	406c42 <_dtoa_r+0xd02>
  406acc:	9b02      	ldr	r3, [sp, #8]
  406ace:	425d      	negs	r5, r3
  406ad0:	4b84      	ldr	r3, [pc, #528]	; (406ce4 <_dtoa_r+0xda4>)
  406ad2:	f005 020f 	and.w	r2, r5, #15
  406ad6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  406ada:	e9d3 2300 	ldrd	r2, r3, [r3]
  406ade:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  406ae2:	f7fc fd7f 	bl	4035e4 <__aeabi_dmul>
  406ae6:	112d      	asrs	r5, r5, #4
  406ae8:	4607      	mov	r7, r0
  406aea:	4688      	mov	r8, r1
  406aec:	f000 812c 	beq.w	406d48 <_dtoa_r+0xe08>
  406af0:	4e7d      	ldr	r6, [pc, #500]	; (406ce8 <_dtoa_r+0xda8>)
  406af2:	f04f 0a02 	mov.w	sl, #2
  406af6:	07eb      	lsls	r3, r5, #31
  406af8:	d509      	bpl.n	406b0e <_dtoa_r+0xbce>
  406afa:	4638      	mov	r0, r7
  406afc:	4641      	mov	r1, r8
  406afe:	e9d6 2300 	ldrd	r2, r3, [r6]
  406b02:	f7fc fd6f 	bl	4035e4 <__aeabi_dmul>
  406b06:	f10a 0a01 	add.w	sl, sl, #1
  406b0a:	4607      	mov	r7, r0
  406b0c:	4688      	mov	r8, r1
  406b0e:	106d      	asrs	r5, r5, #1
  406b10:	f106 0608 	add.w	r6, r6, #8
  406b14:	d1ef      	bne.n	406af6 <_dtoa_r+0xbb6>
  406b16:	e608      	b.n	40672a <_dtoa_r+0x7ea>
  406b18:	6871      	ldr	r1, [r6, #4]
  406b1a:	4620      	mov	r0, r4
  406b1c:	f000 fd36 	bl	40758c <_Balloc>
  406b20:	6933      	ldr	r3, [r6, #16]
  406b22:	3302      	adds	r3, #2
  406b24:	009a      	lsls	r2, r3, #2
  406b26:	4605      	mov	r5, r0
  406b28:	f106 010c 	add.w	r1, r6, #12
  406b2c:	300c      	adds	r0, #12
  406b2e:	f000 fc8f 	bl	407450 <memcpy>
  406b32:	4629      	mov	r1, r5
  406b34:	2201      	movs	r2, #1
  406b36:	4620      	mov	r0, r4
  406b38:	f000 fed4 	bl	4078e4 <__lshift>
  406b3c:	9006      	str	r0, [sp, #24]
  406b3e:	e4b5      	b.n	4064ac <_dtoa_r+0x56c>
  406b40:	2b39      	cmp	r3, #57	; 0x39
  406b42:	f8cd b018 	str.w	fp, [sp, #24]
  406b46:	46d0      	mov	r8, sl
  406b48:	f000 80a5 	beq.w	406c96 <_dtoa_r+0xd56>
  406b4c:	f103 0a01 	add.w	sl, r3, #1
  406b50:	46b3      	mov	fp, r6
  406b52:	f887 a000 	strb.w	sl, [r7]
  406b56:	1c7d      	adds	r5, r7, #1
  406b58:	9e06      	ldr	r6, [sp, #24]
  406b5a:	e571      	b.n	406640 <_dtoa_r+0x700>
  406b5c:	465a      	mov	r2, fp
  406b5e:	46d0      	mov	r8, sl
  406b60:	46b3      	mov	fp, r6
  406b62:	469a      	mov	sl, r3
  406b64:	4616      	mov	r6, r2
  406b66:	e54f      	b.n	406608 <_dtoa_r+0x6c8>
  406b68:	9b12      	ldr	r3, [sp, #72]	; 0x48
  406b6a:	495e      	ldr	r1, [pc, #376]	; (406ce4 <_dtoa_r+0xda4>)
  406b6c:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  406b70:	462a      	mov	r2, r5
  406b72:	4633      	mov	r3, r6
  406b74:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  406b78:	f7fc fd34 	bl	4035e4 <__aeabi_dmul>
  406b7c:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  406b80:	4638      	mov	r0, r7
  406b82:	4641      	mov	r1, r8
  406b84:	f001 fe0c 	bl	4087a0 <__aeabi_d2iz>
  406b88:	4605      	mov	r5, r0
  406b8a:	f7fc fcc5 	bl	403518 <__aeabi_i2d>
  406b8e:	460b      	mov	r3, r1
  406b90:	4602      	mov	r2, r0
  406b92:	4641      	mov	r1, r8
  406b94:	4638      	mov	r0, r7
  406b96:	f7fc fb71 	bl	40327c <__aeabi_dsub>
  406b9a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  406b9c:	460f      	mov	r7, r1
  406b9e:	9904      	ldr	r1, [sp, #16]
  406ba0:	3530      	adds	r5, #48	; 0x30
  406ba2:	2b01      	cmp	r3, #1
  406ba4:	700d      	strb	r5, [r1, #0]
  406ba6:	4606      	mov	r6, r0
  406ba8:	f101 0501 	add.w	r5, r1, #1
  406bac:	d026      	beq.n	406bfc <_dtoa_r+0xcbc>
  406bae:	9b12      	ldr	r3, [sp, #72]	; 0x48
  406bb0:	9a04      	ldr	r2, [sp, #16]
  406bb2:	f8df b13c 	ldr.w	fp, [pc, #316]	; 406cf0 <_dtoa_r+0xdb0>
  406bb6:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  406bba:	4413      	add	r3, r2
  406bbc:	f04f 0a00 	mov.w	sl, #0
  406bc0:	4699      	mov	r9, r3
  406bc2:	4652      	mov	r2, sl
  406bc4:	465b      	mov	r3, fp
  406bc6:	4630      	mov	r0, r6
  406bc8:	4639      	mov	r1, r7
  406bca:	f7fc fd0b 	bl	4035e4 <__aeabi_dmul>
  406bce:	460f      	mov	r7, r1
  406bd0:	4606      	mov	r6, r0
  406bd2:	f001 fde5 	bl	4087a0 <__aeabi_d2iz>
  406bd6:	4680      	mov	r8, r0
  406bd8:	f7fc fc9e 	bl	403518 <__aeabi_i2d>
  406bdc:	f108 0830 	add.w	r8, r8, #48	; 0x30
  406be0:	4602      	mov	r2, r0
  406be2:	460b      	mov	r3, r1
  406be4:	4630      	mov	r0, r6
  406be6:	4639      	mov	r1, r7
  406be8:	f7fc fb48 	bl	40327c <__aeabi_dsub>
  406bec:	f805 8b01 	strb.w	r8, [r5], #1
  406bf0:	454d      	cmp	r5, r9
  406bf2:	4606      	mov	r6, r0
  406bf4:	460f      	mov	r7, r1
  406bf6:	d1e4      	bne.n	406bc2 <_dtoa_r+0xc82>
  406bf8:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  406bfc:	4b3b      	ldr	r3, [pc, #236]	; (406cec <_dtoa_r+0xdac>)
  406bfe:	2200      	movs	r2, #0
  406c00:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  406c04:	f7fc fb3c 	bl	403280 <__adddf3>
  406c08:	4632      	mov	r2, r6
  406c0a:	463b      	mov	r3, r7
  406c0c:	f001 fd8a 	bl	408724 <__aeabi_dcmplt>
  406c10:	2800      	cmp	r0, #0
  406c12:	d046      	beq.n	406ca2 <_dtoa_r+0xd62>
  406c14:	9b15      	ldr	r3, [sp, #84]	; 0x54
  406c16:	9302      	str	r3, [sp, #8]
  406c18:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  406c1c:	f7ff bb43 	b.w	4062a6 <_dtoa_r+0x366>
  406c20:	f04f 0800 	mov.w	r8, #0
  406c24:	4646      	mov	r6, r8
  406c26:	e6a9      	b.n	40697c <_dtoa_r+0xa3c>
  406c28:	9b08      	ldr	r3, [sp, #32]
  406c2a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  406c2c:	1a9d      	subs	r5, r3, r2
  406c2e:	2300      	movs	r3, #0
  406c30:	f7ff bb71 	b.w	406316 <_dtoa_r+0x3d6>
  406c34:	9b18      	ldr	r3, [sp, #96]	; 0x60
  406c36:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  406c38:	9d08      	ldr	r5, [sp, #32]
  406c3a:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  406c3e:	f7ff bb6a 	b.w	406316 <_dtoa_r+0x3d6>
  406c42:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  406c46:	f04f 0a02 	mov.w	sl, #2
  406c4a:	e56e      	b.n	40672a <_dtoa_r+0x7ea>
  406c4c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  406c4e:	2b00      	cmp	r3, #0
  406c50:	f43f aeb8 	beq.w	4069c4 <_dtoa_r+0xa84>
  406c54:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  406c56:	2b00      	cmp	r3, #0
  406c58:	f77f aede 	ble.w	406a18 <_dtoa_r+0xad8>
  406c5c:	2200      	movs	r2, #0
  406c5e:	4b24      	ldr	r3, [pc, #144]	; (406cf0 <_dtoa_r+0xdb0>)
  406c60:	4638      	mov	r0, r7
  406c62:	4641      	mov	r1, r8
  406c64:	f7fc fcbe 	bl	4035e4 <__aeabi_dmul>
  406c68:	4607      	mov	r7, r0
  406c6a:	4688      	mov	r8, r1
  406c6c:	f10a 0001 	add.w	r0, sl, #1
  406c70:	f7fc fc52 	bl	403518 <__aeabi_i2d>
  406c74:	463a      	mov	r2, r7
  406c76:	4643      	mov	r3, r8
  406c78:	f7fc fcb4 	bl	4035e4 <__aeabi_dmul>
  406c7c:	2200      	movs	r2, #0
  406c7e:	4b17      	ldr	r3, [pc, #92]	; (406cdc <_dtoa_r+0xd9c>)
  406c80:	f7fc fafe 	bl	403280 <__adddf3>
  406c84:	9a02      	ldr	r2, [sp, #8]
  406c86:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  406c88:	9312      	str	r3, [sp, #72]	; 0x48
  406c8a:	3a01      	subs	r2, #1
  406c8c:	4605      	mov	r5, r0
  406c8e:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  406c92:	9215      	str	r2, [sp, #84]	; 0x54
  406c94:	e56a      	b.n	40676c <_dtoa_r+0x82c>
  406c96:	2239      	movs	r2, #57	; 0x39
  406c98:	46b3      	mov	fp, r6
  406c9a:	703a      	strb	r2, [r7, #0]
  406c9c:	9e06      	ldr	r6, [sp, #24]
  406c9e:	1c7d      	adds	r5, r7, #1
  406ca0:	e4c0      	b.n	406624 <_dtoa_r+0x6e4>
  406ca2:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  406ca6:	2000      	movs	r0, #0
  406ca8:	4910      	ldr	r1, [pc, #64]	; (406cec <_dtoa_r+0xdac>)
  406caa:	f7fc fae7 	bl	40327c <__aeabi_dsub>
  406cae:	4632      	mov	r2, r6
  406cb0:	463b      	mov	r3, r7
  406cb2:	f001 fd55 	bl	408760 <__aeabi_dcmpgt>
  406cb6:	b908      	cbnz	r0, 406cbc <_dtoa_r+0xd7c>
  406cb8:	e6ae      	b.n	406a18 <_dtoa_r+0xad8>
  406cba:	4615      	mov	r5, r2
  406cbc:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  406cc0:	2b30      	cmp	r3, #48	; 0x30
  406cc2:	f105 32ff 	add.w	r2, r5, #4294967295
  406cc6:	d0f8      	beq.n	406cba <_dtoa_r+0xd7a>
  406cc8:	e5d7      	b.n	40687a <_dtoa_r+0x93a>
  406cca:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  406cce:	9b15      	ldr	r3, [sp, #84]	; 0x54
  406cd0:	9302      	str	r3, [sp, #8]
  406cd2:	f7ff bae8 	b.w	4062a6 <_dtoa_r+0x366>
  406cd6:	970c      	str	r7, [sp, #48]	; 0x30
  406cd8:	f7ff bba5 	b.w	406426 <_dtoa_r+0x4e6>
  406cdc:	401c0000 	.word	0x401c0000
  406ce0:	40140000 	.word	0x40140000
  406ce4:	00408e18 	.word	0x00408e18
  406ce8:	00408df0 	.word	0x00408df0
  406cec:	3fe00000 	.word	0x3fe00000
  406cf0:	40240000 	.word	0x40240000
  406cf4:	2b39      	cmp	r3, #57	; 0x39
  406cf6:	f8cd b018 	str.w	fp, [sp, #24]
  406cfa:	46d0      	mov	r8, sl
  406cfc:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  406d00:	469a      	mov	sl, r3
  406d02:	d0c8      	beq.n	406c96 <_dtoa_r+0xd56>
  406d04:	f1bb 0f00 	cmp.w	fp, #0
  406d08:	f73f aebf 	bgt.w	406a8a <_dtoa_r+0xb4a>
  406d0c:	e6bf      	b.n	406a8e <_dtoa_r+0xb4e>
  406d0e:	f47f aebe 	bne.w	406a8e <_dtoa_r+0xb4e>
  406d12:	f01a 0f01 	tst.w	sl, #1
  406d16:	f43f aeba 	beq.w	406a8e <_dtoa_r+0xb4e>
  406d1a:	e6b2      	b.n	406a82 <_dtoa_r+0xb42>
  406d1c:	f04f 0800 	mov.w	r8, #0
  406d20:	4646      	mov	r6, r8
  406d22:	e5e9      	b.n	4068f8 <_dtoa_r+0x9b8>
  406d24:	4631      	mov	r1, r6
  406d26:	2300      	movs	r3, #0
  406d28:	220a      	movs	r2, #10
  406d2a:	4620      	mov	r0, r4
  406d2c:	f000 fc5e 	bl	4075ec <__multadd>
  406d30:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  406d32:	2b00      	cmp	r3, #0
  406d34:	4606      	mov	r6, r0
  406d36:	dd0a      	ble.n	406d4e <_dtoa_r+0xe0e>
  406d38:	930a      	str	r3, [sp, #40]	; 0x28
  406d3a:	f7ff bbaa 	b.w	406492 <_dtoa_r+0x552>
  406d3e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  406d40:	2b02      	cmp	r3, #2
  406d42:	dc23      	bgt.n	406d8c <_dtoa_r+0xe4c>
  406d44:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  406d46:	e43b      	b.n	4065c0 <_dtoa_r+0x680>
  406d48:	f04f 0a02 	mov.w	sl, #2
  406d4c:	e4ed      	b.n	40672a <_dtoa_r+0x7ea>
  406d4e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  406d50:	2b02      	cmp	r3, #2
  406d52:	dc1b      	bgt.n	406d8c <_dtoa_r+0xe4c>
  406d54:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  406d56:	e7ef      	b.n	406d38 <_dtoa_r+0xdf8>
  406d58:	2500      	movs	r5, #0
  406d5a:	6465      	str	r5, [r4, #68]	; 0x44
  406d5c:	4629      	mov	r1, r5
  406d5e:	4620      	mov	r0, r4
  406d60:	f000 fc14 	bl	40758c <_Balloc>
  406d64:	f04f 33ff 	mov.w	r3, #4294967295
  406d68:	930a      	str	r3, [sp, #40]	; 0x28
  406d6a:	930f      	str	r3, [sp, #60]	; 0x3c
  406d6c:	2301      	movs	r3, #1
  406d6e:	9004      	str	r0, [sp, #16]
  406d70:	9525      	str	r5, [sp, #148]	; 0x94
  406d72:	6420      	str	r0, [r4, #64]	; 0x40
  406d74:	930b      	str	r3, [sp, #44]	; 0x2c
  406d76:	f7ff b9dd 	b.w	406134 <_dtoa_r+0x1f4>
  406d7a:	2501      	movs	r5, #1
  406d7c:	f7ff b9a5 	b.w	4060ca <_dtoa_r+0x18a>
  406d80:	f43f ab69 	beq.w	406456 <_dtoa_r+0x516>
  406d84:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  406d88:	f7ff bbf9 	b.w	40657e <_dtoa_r+0x63e>
  406d8c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  406d8e:	930a      	str	r3, [sp, #40]	; 0x28
  406d90:	e5e5      	b.n	40695e <_dtoa_r+0xa1e>
  406d92:	bf00      	nop

00406d94 <__libc_fini_array>:
  406d94:	b538      	push	{r3, r4, r5, lr}
  406d96:	4c0a      	ldr	r4, [pc, #40]	; (406dc0 <__libc_fini_array+0x2c>)
  406d98:	4d0a      	ldr	r5, [pc, #40]	; (406dc4 <__libc_fini_array+0x30>)
  406d9a:	1b64      	subs	r4, r4, r5
  406d9c:	10a4      	asrs	r4, r4, #2
  406d9e:	d00a      	beq.n	406db6 <__libc_fini_array+0x22>
  406da0:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  406da4:	3b01      	subs	r3, #1
  406da6:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  406daa:	3c01      	subs	r4, #1
  406dac:	f855 3904 	ldr.w	r3, [r5], #-4
  406db0:	4798      	blx	r3
  406db2:	2c00      	cmp	r4, #0
  406db4:	d1f9      	bne.n	406daa <__libc_fini_array+0x16>
  406db6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  406dba:	f002 b92b 	b.w	409014 <_fini>
  406dbe:	bf00      	nop
  406dc0:	00409024 	.word	0x00409024
  406dc4:	00409020 	.word	0x00409020

00406dc8 <_localeconv_r>:
  406dc8:	4a04      	ldr	r2, [pc, #16]	; (406ddc <_localeconv_r+0x14>)
  406dca:	4b05      	ldr	r3, [pc, #20]	; (406de0 <_localeconv_r+0x18>)
  406dcc:	6812      	ldr	r2, [r2, #0]
  406dce:	6b50      	ldr	r0, [r2, #52]	; 0x34
  406dd0:	2800      	cmp	r0, #0
  406dd2:	bf08      	it	eq
  406dd4:	4618      	moveq	r0, r3
  406dd6:	30f0      	adds	r0, #240	; 0xf0
  406dd8:	4770      	bx	lr
  406dda:	bf00      	nop
  406ddc:	20000010 	.word	0x20000010
  406de0:	20000850 	.word	0x20000850

00406de4 <_malloc_r>:
  406de4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  406de8:	f101 060b 	add.w	r6, r1, #11
  406dec:	2e16      	cmp	r6, #22
  406dee:	b083      	sub	sp, #12
  406df0:	4605      	mov	r5, r0
  406df2:	f240 809e 	bls.w	406f32 <_malloc_r+0x14e>
  406df6:	f036 0607 	bics.w	r6, r6, #7
  406dfa:	f100 80bd 	bmi.w	406f78 <_malloc_r+0x194>
  406dfe:	42b1      	cmp	r1, r6
  406e00:	f200 80ba 	bhi.w	406f78 <_malloc_r+0x194>
  406e04:	f000 fbbe 	bl	407584 <__malloc_lock>
  406e08:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  406e0c:	f0c0 8293 	bcc.w	407336 <_malloc_r+0x552>
  406e10:	0a73      	lsrs	r3, r6, #9
  406e12:	f000 80b8 	beq.w	406f86 <_malloc_r+0x1a2>
  406e16:	2b04      	cmp	r3, #4
  406e18:	f200 8179 	bhi.w	40710e <_malloc_r+0x32a>
  406e1c:	09b3      	lsrs	r3, r6, #6
  406e1e:	f103 0039 	add.w	r0, r3, #57	; 0x39
  406e22:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  406e26:	00c3      	lsls	r3, r0, #3
  406e28:	4fbf      	ldr	r7, [pc, #764]	; (407128 <_malloc_r+0x344>)
  406e2a:	443b      	add	r3, r7
  406e2c:	f1a3 0108 	sub.w	r1, r3, #8
  406e30:	685c      	ldr	r4, [r3, #4]
  406e32:	42a1      	cmp	r1, r4
  406e34:	d106      	bne.n	406e44 <_malloc_r+0x60>
  406e36:	e00c      	b.n	406e52 <_malloc_r+0x6e>
  406e38:	2a00      	cmp	r2, #0
  406e3a:	f280 80aa 	bge.w	406f92 <_malloc_r+0x1ae>
  406e3e:	68e4      	ldr	r4, [r4, #12]
  406e40:	42a1      	cmp	r1, r4
  406e42:	d006      	beq.n	406e52 <_malloc_r+0x6e>
  406e44:	6863      	ldr	r3, [r4, #4]
  406e46:	f023 0303 	bic.w	r3, r3, #3
  406e4a:	1b9a      	subs	r2, r3, r6
  406e4c:	2a0f      	cmp	r2, #15
  406e4e:	ddf3      	ble.n	406e38 <_malloc_r+0x54>
  406e50:	4670      	mov	r0, lr
  406e52:	693c      	ldr	r4, [r7, #16]
  406e54:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 40713c <_malloc_r+0x358>
  406e58:	4574      	cmp	r4, lr
  406e5a:	f000 81ab 	beq.w	4071b4 <_malloc_r+0x3d0>
  406e5e:	6863      	ldr	r3, [r4, #4]
  406e60:	f023 0303 	bic.w	r3, r3, #3
  406e64:	1b9a      	subs	r2, r3, r6
  406e66:	2a0f      	cmp	r2, #15
  406e68:	f300 8190 	bgt.w	40718c <_malloc_r+0x3a8>
  406e6c:	2a00      	cmp	r2, #0
  406e6e:	f8c7 e014 	str.w	lr, [r7, #20]
  406e72:	f8c7 e010 	str.w	lr, [r7, #16]
  406e76:	f280 809d 	bge.w	406fb4 <_malloc_r+0x1d0>
  406e7a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  406e7e:	f080 8161 	bcs.w	407144 <_malloc_r+0x360>
  406e82:	08db      	lsrs	r3, r3, #3
  406e84:	f103 0c01 	add.w	ip, r3, #1
  406e88:	1099      	asrs	r1, r3, #2
  406e8a:	687a      	ldr	r2, [r7, #4]
  406e8c:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  406e90:	f8c4 8008 	str.w	r8, [r4, #8]
  406e94:	2301      	movs	r3, #1
  406e96:	408b      	lsls	r3, r1
  406e98:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  406e9c:	4313      	orrs	r3, r2
  406e9e:	3908      	subs	r1, #8
  406ea0:	60e1      	str	r1, [r4, #12]
  406ea2:	607b      	str	r3, [r7, #4]
  406ea4:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  406ea8:	f8c8 400c 	str.w	r4, [r8, #12]
  406eac:	1082      	asrs	r2, r0, #2
  406eae:	2401      	movs	r4, #1
  406eb0:	4094      	lsls	r4, r2
  406eb2:	429c      	cmp	r4, r3
  406eb4:	f200 808b 	bhi.w	406fce <_malloc_r+0x1ea>
  406eb8:	421c      	tst	r4, r3
  406eba:	d106      	bne.n	406eca <_malloc_r+0xe6>
  406ebc:	f020 0003 	bic.w	r0, r0, #3
  406ec0:	0064      	lsls	r4, r4, #1
  406ec2:	421c      	tst	r4, r3
  406ec4:	f100 0004 	add.w	r0, r0, #4
  406ec8:	d0fa      	beq.n	406ec0 <_malloc_r+0xdc>
  406eca:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  406ece:	46cc      	mov	ip, r9
  406ed0:	4680      	mov	r8, r0
  406ed2:	f8dc 300c 	ldr.w	r3, [ip, #12]
  406ed6:	459c      	cmp	ip, r3
  406ed8:	d107      	bne.n	406eea <_malloc_r+0x106>
  406eda:	e16d      	b.n	4071b8 <_malloc_r+0x3d4>
  406edc:	2a00      	cmp	r2, #0
  406ede:	f280 817b 	bge.w	4071d8 <_malloc_r+0x3f4>
  406ee2:	68db      	ldr	r3, [r3, #12]
  406ee4:	459c      	cmp	ip, r3
  406ee6:	f000 8167 	beq.w	4071b8 <_malloc_r+0x3d4>
  406eea:	6859      	ldr	r1, [r3, #4]
  406eec:	f021 0103 	bic.w	r1, r1, #3
  406ef0:	1b8a      	subs	r2, r1, r6
  406ef2:	2a0f      	cmp	r2, #15
  406ef4:	ddf2      	ble.n	406edc <_malloc_r+0xf8>
  406ef6:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  406efa:	f8d3 8008 	ldr.w	r8, [r3, #8]
  406efe:	9300      	str	r3, [sp, #0]
  406f00:	199c      	adds	r4, r3, r6
  406f02:	4628      	mov	r0, r5
  406f04:	f046 0601 	orr.w	r6, r6, #1
  406f08:	f042 0501 	orr.w	r5, r2, #1
  406f0c:	605e      	str	r6, [r3, #4]
  406f0e:	f8c8 c00c 	str.w	ip, [r8, #12]
  406f12:	f8cc 8008 	str.w	r8, [ip, #8]
  406f16:	617c      	str	r4, [r7, #20]
  406f18:	613c      	str	r4, [r7, #16]
  406f1a:	f8c4 e00c 	str.w	lr, [r4, #12]
  406f1e:	f8c4 e008 	str.w	lr, [r4, #8]
  406f22:	6065      	str	r5, [r4, #4]
  406f24:	505a      	str	r2, [r3, r1]
  406f26:	f000 fb2f 	bl	407588 <__malloc_unlock>
  406f2a:	9b00      	ldr	r3, [sp, #0]
  406f2c:	f103 0408 	add.w	r4, r3, #8
  406f30:	e01e      	b.n	406f70 <_malloc_r+0x18c>
  406f32:	2910      	cmp	r1, #16
  406f34:	d820      	bhi.n	406f78 <_malloc_r+0x194>
  406f36:	f000 fb25 	bl	407584 <__malloc_lock>
  406f3a:	2610      	movs	r6, #16
  406f3c:	2318      	movs	r3, #24
  406f3e:	2002      	movs	r0, #2
  406f40:	4f79      	ldr	r7, [pc, #484]	; (407128 <_malloc_r+0x344>)
  406f42:	443b      	add	r3, r7
  406f44:	f1a3 0208 	sub.w	r2, r3, #8
  406f48:	685c      	ldr	r4, [r3, #4]
  406f4a:	4294      	cmp	r4, r2
  406f4c:	f000 813d 	beq.w	4071ca <_malloc_r+0x3e6>
  406f50:	6863      	ldr	r3, [r4, #4]
  406f52:	68e1      	ldr	r1, [r4, #12]
  406f54:	68a6      	ldr	r6, [r4, #8]
  406f56:	f023 0303 	bic.w	r3, r3, #3
  406f5a:	4423      	add	r3, r4
  406f5c:	4628      	mov	r0, r5
  406f5e:	685a      	ldr	r2, [r3, #4]
  406f60:	60f1      	str	r1, [r6, #12]
  406f62:	f042 0201 	orr.w	r2, r2, #1
  406f66:	608e      	str	r6, [r1, #8]
  406f68:	605a      	str	r2, [r3, #4]
  406f6a:	f000 fb0d 	bl	407588 <__malloc_unlock>
  406f6e:	3408      	adds	r4, #8
  406f70:	4620      	mov	r0, r4
  406f72:	b003      	add	sp, #12
  406f74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406f78:	2400      	movs	r4, #0
  406f7a:	230c      	movs	r3, #12
  406f7c:	4620      	mov	r0, r4
  406f7e:	602b      	str	r3, [r5, #0]
  406f80:	b003      	add	sp, #12
  406f82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406f86:	2040      	movs	r0, #64	; 0x40
  406f88:	f44f 7300 	mov.w	r3, #512	; 0x200
  406f8c:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  406f90:	e74a      	b.n	406e28 <_malloc_r+0x44>
  406f92:	4423      	add	r3, r4
  406f94:	68e1      	ldr	r1, [r4, #12]
  406f96:	685a      	ldr	r2, [r3, #4]
  406f98:	68a6      	ldr	r6, [r4, #8]
  406f9a:	f042 0201 	orr.w	r2, r2, #1
  406f9e:	60f1      	str	r1, [r6, #12]
  406fa0:	4628      	mov	r0, r5
  406fa2:	608e      	str	r6, [r1, #8]
  406fa4:	605a      	str	r2, [r3, #4]
  406fa6:	f000 faef 	bl	407588 <__malloc_unlock>
  406faa:	3408      	adds	r4, #8
  406fac:	4620      	mov	r0, r4
  406fae:	b003      	add	sp, #12
  406fb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406fb4:	4423      	add	r3, r4
  406fb6:	4628      	mov	r0, r5
  406fb8:	685a      	ldr	r2, [r3, #4]
  406fba:	f042 0201 	orr.w	r2, r2, #1
  406fbe:	605a      	str	r2, [r3, #4]
  406fc0:	f000 fae2 	bl	407588 <__malloc_unlock>
  406fc4:	3408      	adds	r4, #8
  406fc6:	4620      	mov	r0, r4
  406fc8:	b003      	add	sp, #12
  406fca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406fce:	68bc      	ldr	r4, [r7, #8]
  406fd0:	6863      	ldr	r3, [r4, #4]
  406fd2:	f023 0803 	bic.w	r8, r3, #3
  406fd6:	45b0      	cmp	r8, r6
  406fd8:	d304      	bcc.n	406fe4 <_malloc_r+0x200>
  406fda:	eba8 0306 	sub.w	r3, r8, r6
  406fde:	2b0f      	cmp	r3, #15
  406fe0:	f300 8085 	bgt.w	4070ee <_malloc_r+0x30a>
  406fe4:	f8df 9158 	ldr.w	r9, [pc, #344]	; 407140 <_malloc_r+0x35c>
  406fe8:	4b50      	ldr	r3, [pc, #320]	; (40712c <_malloc_r+0x348>)
  406fea:	f8d9 2000 	ldr.w	r2, [r9]
  406fee:	681b      	ldr	r3, [r3, #0]
  406ff0:	3201      	adds	r2, #1
  406ff2:	4433      	add	r3, r6
  406ff4:	eb04 0a08 	add.w	sl, r4, r8
  406ff8:	f000 8155 	beq.w	4072a6 <_malloc_r+0x4c2>
  406ffc:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  407000:	330f      	adds	r3, #15
  407002:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  407006:	f02b 0b0f 	bic.w	fp, fp, #15
  40700a:	4659      	mov	r1, fp
  40700c:	4628      	mov	r0, r5
  40700e:	f000 fdb7 	bl	407b80 <_sbrk_r>
  407012:	1c41      	adds	r1, r0, #1
  407014:	4602      	mov	r2, r0
  407016:	f000 80fc 	beq.w	407212 <_malloc_r+0x42e>
  40701a:	4582      	cmp	sl, r0
  40701c:	f200 80f7 	bhi.w	40720e <_malloc_r+0x42a>
  407020:	4b43      	ldr	r3, [pc, #268]	; (407130 <_malloc_r+0x34c>)
  407022:	6819      	ldr	r1, [r3, #0]
  407024:	4459      	add	r1, fp
  407026:	6019      	str	r1, [r3, #0]
  407028:	f000 814d 	beq.w	4072c6 <_malloc_r+0x4e2>
  40702c:	f8d9 0000 	ldr.w	r0, [r9]
  407030:	3001      	adds	r0, #1
  407032:	bf1b      	ittet	ne
  407034:	eba2 0a0a 	subne.w	sl, r2, sl
  407038:	4451      	addne	r1, sl
  40703a:	f8c9 2000 	streq.w	r2, [r9]
  40703e:	6019      	strne	r1, [r3, #0]
  407040:	f012 0107 	ands.w	r1, r2, #7
  407044:	f000 8115 	beq.w	407272 <_malloc_r+0x48e>
  407048:	f1c1 0008 	rsb	r0, r1, #8
  40704c:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  407050:	4402      	add	r2, r0
  407052:	3108      	adds	r1, #8
  407054:	eb02 090b 	add.w	r9, r2, fp
  407058:	f3c9 090b 	ubfx	r9, r9, #0, #12
  40705c:	eba1 0909 	sub.w	r9, r1, r9
  407060:	4649      	mov	r1, r9
  407062:	4628      	mov	r0, r5
  407064:	9301      	str	r3, [sp, #4]
  407066:	9200      	str	r2, [sp, #0]
  407068:	f000 fd8a 	bl	407b80 <_sbrk_r>
  40706c:	1c43      	adds	r3, r0, #1
  40706e:	e89d 000c 	ldmia.w	sp, {r2, r3}
  407072:	f000 8143 	beq.w	4072fc <_malloc_r+0x518>
  407076:	1a80      	subs	r0, r0, r2
  407078:	4448      	add	r0, r9
  40707a:	f040 0001 	orr.w	r0, r0, #1
  40707e:	6819      	ldr	r1, [r3, #0]
  407080:	60ba      	str	r2, [r7, #8]
  407082:	4449      	add	r1, r9
  407084:	42bc      	cmp	r4, r7
  407086:	6050      	str	r0, [r2, #4]
  407088:	6019      	str	r1, [r3, #0]
  40708a:	d017      	beq.n	4070bc <_malloc_r+0x2d8>
  40708c:	f1b8 0f0f 	cmp.w	r8, #15
  407090:	f240 80fb 	bls.w	40728a <_malloc_r+0x4a6>
  407094:	6860      	ldr	r0, [r4, #4]
  407096:	f1a8 020c 	sub.w	r2, r8, #12
  40709a:	f022 0207 	bic.w	r2, r2, #7
  40709e:	eb04 0e02 	add.w	lr, r4, r2
  4070a2:	f000 0001 	and.w	r0, r0, #1
  4070a6:	f04f 0c05 	mov.w	ip, #5
  4070aa:	4310      	orrs	r0, r2
  4070ac:	2a0f      	cmp	r2, #15
  4070ae:	6060      	str	r0, [r4, #4]
  4070b0:	f8ce c004 	str.w	ip, [lr, #4]
  4070b4:	f8ce c008 	str.w	ip, [lr, #8]
  4070b8:	f200 8117 	bhi.w	4072ea <_malloc_r+0x506>
  4070bc:	4b1d      	ldr	r3, [pc, #116]	; (407134 <_malloc_r+0x350>)
  4070be:	68bc      	ldr	r4, [r7, #8]
  4070c0:	681a      	ldr	r2, [r3, #0]
  4070c2:	4291      	cmp	r1, r2
  4070c4:	bf88      	it	hi
  4070c6:	6019      	strhi	r1, [r3, #0]
  4070c8:	4b1b      	ldr	r3, [pc, #108]	; (407138 <_malloc_r+0x354>)
  4070ca:	681a      	ldr	r2, [r3, #0]
  4070cc:	4291      	cmp	r1, r2
  4070ce:	6862      	ldr	r2, [r4, #4]
  4070d0:	bf88      	it	hi
  4070d2:	6019      	strhi	r1, [r3, #0]
  4070d4:	f022 0203 	bic.w	r2, r2, #3
  4070d8:	4296      	cmp	r6, r2
  4070da:	eba2 0306 	sub.w	r3, r2, r6
  4070de:	d801      	bhi.n	4070e4 <_malloc_r+0x300>
  4070e0:	2b0f      	cmp	r3, #15
  4070e2:	dc04      	bgt.n	4070ee <_malloc_r+0x30a>
  4070e4:	4628      	mov	r0, r5
  4070e6:	f000 fa4f 	bl	407588 <__malloc_unlock>
  4070ea:	2400      	movs	r4, #0
  4070ec:	e740      	b.n	406f70 <_malloc_r+0x18c>
  4070ee:	19a2      	adds	r2, r4, r6
  4070f0:	f043 0301 	orr.w	r3, r3, #1
  4070f4:	f046 0601 	orr.w	r6, r6, #1
  4070f8:	6066      	str	r6, [r4, #4]
  4070fa:	4628      	mov	r0, r5
  4070fc:	60ba      	str	r2, [r7, #8]
  4070fe:	6053      	str	r3, [r2, #4]
  407100:	f000 fa42 	bl	407588 <__malloc_unlock>
  407104:	3408      	adds	r4, #8
  407106:	4620      	mov	r0, r4
  407108:	b003      	add	sp, #12
  40710a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40710e:	2b14      	cmp	r3, #20
  407110:	d971      	bls.n	4071f6 <_malloc_r+0x412>
  407112:	2b54      	cmp	r3, #84	; 0x54
  407114:	f200 80a3 	bhi.w	40725e <_malloc_r+0x47a>
  407118:	0b33      	lsrs	r3, r6, #12
  40711a:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  40711e:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  407122:	00c3      	lsls	r3, r0, #3
  407124:	e680      	b.n	406e28 <_malloc_r+0x44>
  407126:	bf00      	nop
  407128:	20000440 	.word	0x20000440
  40712c:	20001c34 	.word	0x20001c34
  407130:	20001c04 	.word	0x20001c04
  407134:	20001c2c 	.word	0x20001c2c
  407138:	20001c30 	.word	0x20001c30
  40713c:	20000448 	.word	0x20000448
  407140:	20000848 	.word	0x20000848
  407144:	0a5a      	lsrs	r2, r3, #9
  407146:	2a04      	cmp	r2, #4
  407148:	d95b      	bls.n	407202 <_malloc_r+0x41e>
  40714a:	2a14      	cmp	r2, #20
  40714c:	f200 80ae 	bhi.w	4072ac <_malloc_r+0x4c8>
  407150:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  407154:	00c9      	lsls	r1, r1, #3
  407156:	325b      	adds	r2, #91	; 0x5b
  407158:	eb07 0c01 	add.w	ip, r7, r1
  40715c:	5879      	ldr	r1, [r7, r1]
  40715e:	f1ac 0c08 	sub.w	ip, ip, #8
  407162:	458c      	cmp	ip, r1
  407164:	f000 8088 	beq.w	407278 <_malloc_r+0x494>
  407168:	684a      	ldr	r2, [r1, #4]
  40716a:	f022 0203 	bic.w	r2, r2, #3
  40716e:	4293      	cmp	r3, r2
  407170:	d273      	bcs.n	40725a <_malloc_r+0x476>
  407172:	6889      	ldr	r1, [r1, #8]
  407174:	458c      	cmp	ip, r1
  407176:	d1f7      	bne.n	407168 <_malloc_r+0x384>
  407178:	f8dc 200c 	ldr.w	r2, [ip, #12]
  40717c:	687b      	ldr	r3, [r7, #4]
  40717e:	60e2      	str	r2, [r4, #12]
  407180:	f8c4 c008 	str.w	ip, [r4, #8]
  407184:	6094      	str	r4, [r2, #8]
  407186:	f8cc 400c 	str.w	r4, [ip, #12]
  40718a:	e68f      	b.n	406eac <_malloc_r+0xc8>
  40718c:	19a1      	adds	r1, r4, r6
  40718e:	f046 0c01 	orr.w	ip, r6, #1
  407192:	f042 0601 	orr.w	r6, r2, #1
  407196:	f8c4 c004 	str.w	ip, [r4, #4]
  40719a:	4628      	mov	r0, r5
  40719c:	6179      	str	r1, [r7, #20]
  40719e:	6139      	str	r1, [r7, #16]
  4071a0:	f8c1 e00c 	str.w	lr, [r1, #12]
  4071a4:	f8c1 e008 	str.w	lr, [r1, #8]
  4071a8:	604e      	str	r6, [r1, #4]
  4071aa:	50e2      	str	r2, [r4, r3]
  4071ac:	f000 f9ec 	bl	407588 <__malloc_unlock>
  4071b0:	3408      	adds	r4, #8
  4071b2:	e6dd      	b.n	406f70 <_malloc_r+0x18c>
  4071b4:	687b      	ldr	r3, [r7, #4]
  4071b6:	e679      	b.n	406eac <_malloc_r+0xc8>
  4071b8:	f108 0801 	add.w	r8, r8, #1
  4071bc:	f018 0f03 	tst.w	r8, #3
  4071c0:	f10c 0c08 	add.w	ip, ip, #8
  4071c4:	f47f ae85 	bne.w	406ed2 <_malloc_r+0xee>
  4071c8:	e02d      	b.n	407226 <_malloc_r+0x442>
  4071ca:	68dc      	ldr	r4, [r3, #12]
  4071cc:	42a3      	cmp	r3, r4
  4071ce:	bf08      	it	eq
  4071d0:	3002      	addeq	r0, #2
  4071d2:	f43f ae3e 	beq.w	406e52 <_malloc_r+0x6e>
  4071d6:	e6bb      	b.n	406f50 <_malloc_r+0x16c>
  4071d8:	4419      	add	r1, r3
  4071da:	461c      	mov	r4, r3
  4071dc:	684a      	ldr	r2, [r1, #4]
  4071de:	68db      	ldr	r3, [r3, #12]
  4071e0:	f854 6f08 	ldr.w	r6, [r4, #8]!
  4071e4:	f042 0201 	orr.w	r2, r2, #1
  4071e8:	604a      	str	r2, [r1, #4]
  4071ea:	4628      	mov	r0, r5
  4071ec:	60f3      	str	r3, [r6, #12]
  4071ee:	609e      	str	r6, [r3, #8]
  4071f0:	f000 f9ca 	bl	407588 <__malloc_unlock>
  4071f4:	e6bc      	b.n	406f70 <_malloc_r+0x18c>
  4071f6:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  4071fa:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  4071fe:	00c3      	lsls	r3, r0, #3
  407200:	e612      	b.n	406e28 <_malloc_r+0x44>
  407202:	099a      	lsrs	r2, r3, #6
  407204:	f102 0139 	add.w	r1, r2, #57	; 0x39
  407208:	00c9      	lsls	r1, r1, #3
  40720a:	3238      	adds	r2, #56	; 0x38
  40720c:	e7a4      	b.n	407158 <_malloc_r+0x374>
  40720e:	42bc      	cmp	r4, r7
  407210:	d054      	beq.n	4072bc <_malloc_r+0x4d8>
  407212:	68bc      	ldr	r4, [r7, #8]
  407214:	6862      	ldr	r2, [r4, #4]
  407216:	f022 0203 	bic.w	r2, r2, #3
  40721a:	e75d      	b.n	4070d8 <_malloc_r+0x2f4>
  40721c:	f859 3908 	ldr.w	r3, [r9], #-8
  407220:	4599      	cmp	r9, r3
  407222:	f040 8086 	bne.w	407332 <_malloc_r+0x54e>
  407226:	f010 0f03 	tst.w	r0, #3
  40722a:	f100 30ff 	add.w	r0, r0, #4294967295
  40722e:	d1f5      	bne.n	40721c <_malloc_r+0x438>
  407230:	687b      	ldr	r3, [r7, #4]
  407232:	ea23 0304 	bic.w	r3, r3, r4
  407236:	607b      	str	r3, [r7, #4]
  407238:	0064      	lsls	r4, r4, #1
  40723a:	429c      	cmp	r4, r3
  40723c:	f63f aec7 	bhi.w	406fce <_malloc_r+0x1ea>
  407240:	2c00      	cmp	r4, #0
  407242:	f43f aec4 	beq.w	406fce <_malloc_r+0x1ea>
  407246:	421c      	tst	r4, r3
  407248:	4640      	mov	r0, r8
  40724a:	f47f ae3e 	bne.w	406eca <_malloc_r+0xe6>
  40724e:	0064      	lsls	r4, r4, #1
  407250:	421c      	tst	r4, r3
  407252:	f100 0004 	add.w	r0, r0, #4
  407256:	d0fa      	beq.n	40724e <_malloc_r+0x46a>
  407258:	e637      	b.n	406eca <_malloc_r+0xe6>
  40725a:	468c      	mov	ip, r1
  40725c:	e78c      	b.n	407178 <_malloc_r+0x394>
  40725e:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  407262:	d815      	bhi.n	407290 <_malloc_r+0x4ac>
  407264:	0bf3      	lsrs	r3, r6, #15
  407266:	f103 0078 	add.w	r0, r3, #120	; 0x78
  40726a:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  40726e:	00c3      	lsls	r3, r0, #3
  407270:	e5da      	b.n	406e28 <_malloc_r+0x44>
  407272:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  407276:	e6ed      	b.n	407054 <_malloc_r+0x270>
  407278:	687b      	ldr	r3, [r7, #4]
  40727a:	1092      	asrs	r2, r2, #2
  40727c:	2101      	movs	r1, #1
  40727e:	fa01 f202 	lsl.w	r2, r1, r2
  407282:	4313      	orrs	r3, r2
  407284:	607b      	str	r3, [r7, #4]
  407286:	4662      	mov	r2, ip
  407288:	e779      	b.n	40717e <_malloc_r+0x39a>
  40728a:	2301      	movs	r3, #1
  40728c:	6053      	str	r3, [r2, #4]
  40728e:	e729      	b.n	4070e4 <_malloc_r+0x300>
  407290:	f240 5254 	movw	r2, #1364	; 0x554
  407294:	4293      	cmp	r3, r2
  407296:	d822      	bhi.n	4072de <_malloc_r+0x4fa>
  407298:	0cb3      	lsrs	r3, r6, #18
  40729a:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  40729e:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  4072a2:	00c3      	lsls	r3, r0, #3
  4072a4:	e5c0      	b.n	406e28 <_malloc_r+0x44>
  4072a6:	f103 0b10 	add.w	fp, r3, #16
  4072aa:	e6ae      	b.n	40700a <_malloc_r+0x226>
  4072ac:	2a54      	cmp	r2, #84	; 0x54
  4072ae:	d829      	bhi.n	407304 <_malloc_r+0x520>
  4072b0:	0b1a      	lsrs	r2, r3, #12
  4072b2:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  4072b6:	00c9      	lsls	r1, r1, #3
  4072b8:	326e      	adds	r2, #110	; 0x6e
  4072ba:	e74d      	b.n	407158 <_malloc_r+0x374>
  4072bc:	4b20      	ldr	r3, [pc, #128]	; (407340 <_malloc_r+0x55c>)
  4072be:	6819      	ldr	r1, [r3, #0]
  4072c0:	4459      	add	r1, fp
  4072c2:	6019      	str	r1, [r3, #0]
  4072c4:	e6b2      	b.n	40702c <_malloc_r+0x248>
  4072c6:	f3ca 000b 	ubfx	r0, sl, #0, #12
  4072ca:	2800      	cmp	r0, #0
  4072cc:	f47f aeae 	bne.w	40702c <_malloc_r+0x248>
  4072d0:	eb08 030b 	add.w	r3, r8, fp
  4072d4:	68ba      	ldr	r2, [r7, #8]
  4072d6:	f043 0301 	orr.w	r3, r3, #1
  4072da:	6053      	str	r3, [r2, #4]
  4072dc:	e6ee      	b.n	4070bc <_malloc_r+0x2d8>
  4072de:	207f      	movs	r0, #127	; 0x7f
  4072e0:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  4072e4:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  4072e8:	e59e      	b.n	406e28 <_malloc_r+0x44>
  4072ea:	f104 0108 	add.w	r1, r4, #8
  4072ee:	4628      	mov	r0, r5
  4072f0:	9300      	str	r3, [sp, #0]
  4072f2:	f000 fea3 	bl	40803c <_free_r>
  4072f6:	9b00      	ldr	r3, [sp, #0]
  4072f8:	6819      	ldr	r1, [r3, #0]
  4072fa:	e6df      	b.n	4070bc <_malloc_r+0x2d8>
  4072fc:	2001      	movs	r0, #1
  4072fe:	f04f 0900 	mov.w	r9, #0
  407302:	e6bc      	b.n	40707e <_malloc_r+0x29a>
  407304:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  407308:	d805      	bhi.n	407316 <_malloc_r+0x532>
  40730a:	0bda      	lsrs	r2, r3, #15
  40730c:	f102 0178 	add.w	r1, r2, #120	; 0x78
  407310:	00c9      	lsls	r1, r1, #3
  407312:	3277      	adds	r2, #119	; 0x77
  407314:	e720      	b.n	407158 <_malloc_r+0x374>
  407316:	f240 5154 	movw	r1, #1364	; 0x554
  40731a:	428a      	cmp	r2, r1
  40731c:	d805      	bhi.n	40732a <_malloc_r+0x546>
  40731e:	0c9a      	lsrs	r2, r3, #18
  407320:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  407324:	00c9      	lsls	r1, r1, #3
  407326:	327c      	adds	r2, #124	; 0x7c
  407328:	e716      	b.n	407158 <_malloc_r+0x374>
  40732a:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  40732e:	227e      	movs	r2, #126	; 0x7e
  407330:	e712      	b.n	407158 <_malloc_r+0x374>
  407332:	687b      	ldr	r3, [r7, #4]
  407334:	e780      	b.n	407238 <_malloc_r+0x454>
  407336:	08f0      	lsrs	r0, r6, #3
  407338:	f106 0308 	add.w	r3, r6, #8
  40733c:	e600      	b.n	406f40 <_malloc_r+0x15c>
  40733e:	bf00      	nop
  407340:	20001c04 	.word	0x20001c04
	...

00407350 <memchr>:
  407350:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  407354:	2a10      	cmp	r2, #16
  407356:	db2b      	blt.n	4073b0 <memchr+0x60>
  407358:	f010 0f07 	tst.w	r0, #7
  40735c:	d008      	beq.n	407370 <memchr+0x20>
  40735e:	f810 3b01 	ldrb.w	r3, [r0], #1
  407362:	3a01      	subs	r2, #1
  407364:	428b      	cmp	r3, r1
  407366:	d02d      	beq.n	4073c4 <memchr+0x74>
  407368:	f010 0f07 	tst.w	r0, #7
  40736c:	b342      	cbz	r2, 4073c0 <memchr+0x70>
  40736e:	d1f6      	bne.n	40735e <memchr+0xe>
  407370:	b4f0      	push	{r4, r5, r6, r7}
  407372:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  407376:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  40737a:	f022 0407 	bic.w	r4, r2, #7
  40737e:	f07f 0700 	mvns.w	r7, #0
  407382:	2300      	movs	r3, #0
  407384:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  407388:	3c08      	subs	r4, #8
  40738a:	ea85 0501 	eor.w	r5, r5, r1
  40738e:	ea86 0601 	eor.w	r6, r6, r1
  407392:	fa85 f547 	uadd8	r5, r5, r7
  407396:	faa3 f587 	sel	r5, r3, r7
  40739a:	fa86 f647 	uadd8	r6, r6, r7
  40739e:	faa5 f687 	sel	r6, r5, r7
  4073a2:	b98e      	cbnz	r6, 4073c8 <memchr+0x78>
  4073a4:	d1ee      	bne.n	407384 <memchr+0x34>
  4073a6:	bcf0      	pop	{r4, r5, r6, r7}
  4073a8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  4073ac:	f002 0207 	and.w	r2, r2, #7
  4073b0:	b132      	cbz	r2, 4073c0 <memchr+0x70>
  4073b2:	f810 3b01 	ldrb.w	r3, [r0], #1
  4073b6:	3a01      	subs	r2, #1
  4073b8:	ea83 0301 	eor.w	r3, r3, r1
  4073bc:	b113      	cbz	r3, 4073c4 <memchr+0x74>
  4073be:	d1f8      	bne.n	4073b2 <memchr+0x62>
  4073c0:	2000      	movs	r0, #0
  4073c2:	4770      	bx	lr
  4073c4:	3801      	subs	r0, #1
  4073c6:	4770      	bx	lr
  4073c8:	2d00      	cmp	r5, #0
  4073ca:	bf06      	itte	eq
  4073cc:	4635      	moveq	r5, r6
  4073ce:	3803      	subeq	r0, #3
  4073d0:	3807      	subne	r0, #7
  4073d2:	f015 0f01 	tst.w	r5, #1
  4073d6:	d107      	bne.n	4073e8 <memchr+0x98>
  4073d8:	3001      	adds	r0, #1
  4073da:	f415 7f80 	tst.w	r5, #256	; 0x100
  4073de:	bf02      	ittt	eq
  4073e0:	3001      	addeq	r0, #1
  4073e2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  4073e6:	3001      	addeq	r0, #1
  4073e8:	bcf0      	pop	{r4, r5, r6, r7}
  4073ea:	3801      	subs	r0, #1
  4073ec:	4770      	bx	lr
  4073ee:	bf00      	nop

004073f0 <memcmp>:
  4073f0:	2a03      	cmp	r2, #3
  4073f2:	b470      	push	{r4, r5, r6}
  4073f4:	d922      	bls.n	40743c <memcmp+0x4c>
  4073f6:	ea40 0301 	orr.w	r3, r0, r1
  4073fa:	079b      	lsls	r3, r3, #30
  4073fc:	d011      	beq.n	407422 <memcmp+0x32>
  4073fe:	7803      	ldrb	r3, [r0, #0]
  407400:	780c      	ldrb	r4, [r1, #0]
  407402:	42a3      	cmp	r3, r4
  407404:	d11d      	bne.n	407442 <memcmp+0x52>
  407406:	440a      	add	r2, r1
  407408:	3101      	adds	r1, #1
  40740a:	e005      	b.n	407418 <memcmp+0x28>
  40740c:	f810 3f01 	ldrb.w	r3, [r0, #1]!
  407410:	f811 4b01 	ldrb.w	r4, [r1], #1
  407414:	42a3      	cmp	r3, r4
  407416:	d114      	bne.n	407442 <memcmp+0x52>
  407418:	4291      	cmp	r1, r2
  40741a:	d1f7      	bne.n	40740c <memcmp+0x1c>
  40741c:	2000      	movs	r0, #0
  40741e:	bc70      	pop	{r4, r5, r6}
  407420:	4770      	bx	lr
  407422:	680d      	ldr	r5, [r1, #0]
  407424:	6806      	ldr	r6, [r0, #0]
  407426:	42ae      	cmp	r6, r5
  407428:	460c      	mov	r4, r1
  40742a:	4603      	mov	r3, r0
  40742c:	f101 0104 	add.w	r1, r1, #4
  407430:	f100 0004 	add.w	r0, r0, #4
  407434:	d108      	bne.n	407448 <memcmp+0x58>
  407436:	3a04      	subs	r2, #4
  407438:	2a03      	cmp	r2, #3
  40743a:	d8f2      	bhi.n	407422 <memcmp+0x32>
  40743c:	2a00      	cmp	r2, #0
  40743e:	d1de      	bne.n	4073fe <memcmp+0xe>
  407440:	e7ec      	b.n	40741c <memcmp+0x2c>
  407442:	1b18      	subs	r0, r3, r4
  407444:	bc70      	pop	{r4, r5, r6}
  407446:	4770      	bx	lr
  407448:	4621      	mov	r1, r4
  40744a:	4618      	mov	r0, r3
  40744c:	e7d7      	b.n	4073fe <memcmp+0xe>
  40744e:	bf00      	nop

00407450 <memcpy>:
  407450:	4684      	mov	ip, r0
  407452:	ea41 0300 	orr.w	r3, r1, r0
  407456:	f013 0303 	ands.w	r3, r3, #3
  40745a:	d16d      	bne.n	407538 <memcpy+0xe8>
  40745c:	3a40      	subs	r2, #64	; 0x40
  40745e:	d341      	bcc.n	4074e4 <memcpy+0x94>
  407460:	f851 3b04 	ldr.w	r3, [r1], #4
  407464:	f840 3b04 	str.w	r3, [r0], #4
  407468:	f851 3b04 	ldr.w	r3, [r1], #4
  40746c:	f840 3b04 	str.w	r3, [r0], #4
  407470:	f851 3b04 	ldr.w	r3, [r1], #4
  407474:	f840 3b04 	str.w	r3, [r0], #4
  407478:	f851 3b04 	ldr.w	r3, [r1], #4
  40747c:	f840 3b04 	str.w	r3, [r0], #4
  407480:	f851 3b04 	ldr.w	r3, [r1], #4
  407484:	f840 3b04 	str.w	r3, [r0], #4
  407488:	f851 3b04 	ldr.w	r3, [r1], #4
  40748c:	f840 3b04 	str.w	r3, [r0], #4
  407490:	f851 3b04 	ldr.w	r3, [r1], #4
  407494:	f840 3b04 	str.w	r3, [r0], #4
  407498:	f851 3b04 	ldr.w	r3, [r1], #4
  40749c:	f840 3b04 	str.w	r3, [r0], #4
  4074a0:	f851 3b04 	ldr.w	r3, [r1], #4
  4074a4:	f840 3b04 	str.w	r3, [r0], #4
  4074a8:	f851 3b04 	ldr.w	r3, [r1], #4
  4074ac:	f840 3b04 	str.w	r3, [r0], #4
  4074b0:	f851 3b04 	ldr.w	r3, [r1], #4
  4074b4:	f840 3b04 	str.w	r3, [r0], #4
  4074b8:	f851 3b04 	ldr.w	r3, [r1], #4
  4074bc:	f840 3b04 	str.w	r3, [r0], #4
  4074c0:	f851 3b04 	ldr.w	r3, [r1], #4
  4074c4:	f840 3b04 	str.w	r3, [r0], #4
  4074c8:	f851 3b04 	ldr.w	r3, [r1], #4
  4074cc:	f840 3b04 	str.w	r3, [r0], #4
  4074d0:	f851 3b04 	ldr.w	r3, [r1], #4
  4074d4:	f840 3b04 	str.w	r3, [r0], #4
  4074d8:	f851 3b04 	ldr.w	r3, [r1], #4
  4074dc:	f840 3b04 	str.w	r3, [r0], #4
  4074e0:	3a40      	subs	r2, #64	; 0x40
  4074e2:	d2bd      	bcs.n	407460 <memcpy+0x10>
  4074e4:	3230      	adds	r2, #48	; 0x30
  4074e6:	d311      	bcc.n	40750c <memcpy+0xbc>
  4074e8:	f851 3b04 	ldr.w	r3, [r1], #4
  4074ec:	f840 3b04 	str.w	r3, [r0], #4
  4074f0:	f851 3b04 	ldr.w	r3, [r1], #4
  4074f4:	f840 3b04 	str.w	r3, [r0], #4
  4074f8:	f851 3b04 	ldr.w	r3, [r1], #4
  4074fc:	f840 3b04 	str.w	r3, [r0], #4
  407500:	f851 3b04 	ldr.w	r3, [r1], #4
  407504:	f840 3b04 	str.w	r3, [r0], #4
  407508:	3a10      	subs	r2, #16
  40750a:	d2ed      	bcs.n	4074e8 <memcpy+0x98>
  40750c:	320c      	adds	r2, #12
  40750e:	d305      	bcc.n	40751c <memcpy+0xcc>
  407510:	f851 3b04 	ldr.w	r3, [r1], #4
  407514:	f840 3b04 	str.w	r3, [r0], #4
  407518:	3a04      	subs	r2, #4
  40751a:	d2f9      	bcs.n	407510 <memcpy+0xc0>
  40751c:	3204      	adds	r2, #4
  40751e:	d008      	beq.n	407532 <memcpy+0xe2>
  407520:	07d2      	lsls	r2, r2, #31
  407522:	bf1c      	itt	ne
  407524:	f811 3b01 	ldrbne.w	r3, [r1], #1
  407528:	f800 3b01 	strbne.w	r3, [r0], #1
  40752c:	d301      	bcc.n	407532 <memcpy+0xe2>
  40752e:	880b      	ldrh	r3, [r1, #0]
  407530:	8003      	strh	r3, [r0, #0]
  407532:	4660      	mov	r0, ip
  407534:	4770      	bx	lr
  407536:	bf00      	nop
  407538:	2a08      	cmp	r2, #8
  40753a:	d313      	bcc.n	407564 <memcpy+0x114>
  40753c:	078b      	lsls	r3, r1, #30
  40753e:	d08d      	beq.n	40745c <memcpy+0xc>
  407540:	f010 0303 	ands.w	r3, r0, #3
  407544:	d08a      	beq.n	40745c <memcpy+0xc>
  407546:	f1c3 0304 	rsb	r3, r3, #4
  40754a:	1ad2      	subs	r2, r2, r3
  40754c:	07db      	lsls	r3, r3, #31
  40754e:	bf1c      	itt	ne
  407550:	f811 3b01 	ldrbne.w	r3, [r1], #1
  407554:	f800 3b01 	strbne.w	r3, [r0], #1
  407558:	d380      	bcc.n	40745c <memcpy+0xc>
  40755a:	f831 3b02 	ldrh.w	r3, [r1], #2
  40755e:	f820 3b02 	strh.w	r3, [r0], #2
  407562:	e77b      	b.n	40745c <memcpy+0xc>
  407564:	3a04      	subs	r2, #4
  407566:	d3d9      	bcc.n	40751c <memcpy+0xcc>
  407568:	3a01      	subs	r2, #1
  40756a:	f811 3b01 	ldrb.w	r3, [r1], #1
  40756e:	f800 3b01 	strb.w	r3, [r0], #1
  407572:	d2f9      	bcs.n	407568 <memcpy+0x118>
  407574:	780b      	ldrb	r3, [r1, #0]
  407576:	7003      	strb	r3, [r0, #0]
  407578:	784b      	ldrb	r3, [r1, #1]
  40757a:	7043      	strb	r3, [r0, #1]
  40757c:	788b      	ldrb	r3, [r1, #2]
  40757e:	7083      	strb	r3, [r0, #2]
  407580:	4660      	mov	r0, ip
  407582:	4770      	bx	lr

00407584 <__malloc_lock>:
  407584:	4770      	bx	lr
  407586:	bf00      	nop

00407588 <__malloc_unlock>:
  407588:	4770      	bx	lr
  40758a:	bf00      	nop

0040758c <_Balloc>:
  40758c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40758e:	b570      	push	{r4, r5, r6, lr}
  407590:	4605      	mov	r5, r0
  407592:	460c      	mov	r4, r1
  407594:	b14b      	cbz	r3, 4075aa <_Balloc+0x1e>
  407596:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  40759a:	b180      	cbz	r0, 4075be <_Balloc+0x32>
  40759c:	6802      	ldr	r2, [r0, #0]
  40759e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  4075a2:	2300      	movs	r3, #0
  4075a4:	6103      	str	r3, [r0, #16]
  4075a6:	60c3      	str	r3, [r0, #12]
  4075a8:	bd70      	pop	{r4, r5, r6, pc}
  4075aa:	2221      	movs	r2, #33	; 0x21
  4075ac:	2104      	movs	r1, #4
  4075ae:	f000 fcc5 	bl	407f3c <_calloc_r>
  4075b2:	64e8      	str	r0, [r5, #76]	; 0x4c
  4075b4:	4603      	mov	r3, r0
  4075b6:	2800      	cmp	r0, #0
  4075b8:	d1ed      	bne.n	407596 <_Balloc+0xa>
  4075ba:	2000      	movs	r0, #0
  4075bc:	bd70      	pop	{r4, r5, r6, pc}
  4075be:	2101      	movs	r1, #1
  4075c0:	fa01 f604 	lsl.w	r6, r1, r4
  4075c4:	1d72      	adds	r2, r6, #5
  4075c6:	4628      	mov	r0, r5
  4075c8:	0092      	lsls	r2, r2, #2
  4075ca:	f000 fcb7 	bl	407f3c <_calloc_r>
  4075ce:	2800      	cmp	r0, #0
  4075d0:	d0f3      	beq.n	4075ba <_Balloc+0x2e>
  4075d2:	6044      	str	r4, [r0, #4]
  4075d4:	6086      	str	r6, [r0, #8]
  4075d6:	e7e4      	b.n	4075a2 <_Balloc+0x16>

004075d8 <_Bfree>:
  4075d8:	b131      	cbz	r1, 4075e8 <_Bfree+0x10>
  4075da:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  4075dc:	684a      	ldr	r2, [r1, #4]
  4075de:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  4075e2:	6008      	str	r0, [r1, #0]
  4075e4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  4075e8:	4770      	bx	lr
  4075ea:	bf00      	nop

004075ec <__multadd>:
  4075ec:	b5f0      	push	{r4, r5, r6, r7, lr}
  4075ee:	690c      	ldr	r4, [r1, #16]
  4075f0:	b083      	sub	sp, #12
  4075f2:	460d      	mov	r5, r1
  4075f4:	4606      	mov	r6, r0
  4075f6:	f101 0e14 	add.w	lr, r1, #20
  4075fa:	2700      	movs	r7, #0
  4075fc:	f8de 0000 	ldr.w	r0, [lr]
  407600:	b281      	uxth	r1, r0
  407602:	fb02 3301 	mla	r3, r2, r1, r3
  407606:	0c01      	lsrs	r1, r0, #16
  407608:	0c18      	lsrs	r0, r3, #16
  40760a:	fb02 0101 	mla	r1, r2, r1, r0
  40760e:	b29b      	uxth	r3, r3
  407610:	3701      	adds	r7, #1
  407612:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  407616:	42bc      	cmp	r4, r7
  407618:	f84e 3b04 	str.w	r3, [lr], #4
  40761c:	ea4f 4311 	mov.w	r3, r1, lsr #16
  407620:	dcec      	bgt.n	4075fc <__multadd+0x10>
  407622:	b13b      	cbz	r3, 407634 <__multadd+0x48>
  407624:	68aa      	ldr	r2, [r5, #8]
  407626:	4294      	cmp	r4, r2
  407628:	da07      	bge.n	40763a <__multadd+0x4e>
  40762a:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  40762e:	3401      	adds	r4, #1
  407630:	6153      	str	r3, [r2, #20]
  407632:	612c      	str	r4, [r5, #16]
  407634:	4628      	mov	r0, r5
  407636:	b003      	add	sp, #12
  407638:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40763a:	6869      	ldr	r1, [r5, #4]
  40763c:	9301      	str	r3, [sp, #4]
  40763e:	3101      	adds	r1, #1
  407640:	4630      	mov	r0, r6
  407642:	f7ff ffa3 	bl	40758c <_Balloc>
  407646:	692a      	ldr	r2, [r5, #16]
  407648:	3202      	adds	r2, #2
  40764a:	f105 010c 	add.w	r1, r5, #12
  40764e:	4607      	mov	r7, r0
  407650:	0092      	lsls	r2, r2, #2
  407652:	300c      	adds	r0, #12
  407654:	f7ff fefc 	bl	407450 <memcpy>
  407658:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  40765a:	6869      	ldr	r1, [r5, #4]
  40765c:	9b01      	ldr	r3, [sp, #4]
  40765e:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  407662:	6028      	str	r0, [r5, #0]
  407664:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  407668:	463d      	mov	r5, r7
  40766a:	e7de      	b.n	40762a <__multadd+0x3e>

0040766c <__hi0bits>:
  40766c:	0c02      	lsrs	r2, r0, #16
  40766e:	0412      	lsls	r2, r2, #16
  407670:	4603      	mov	r3, r0
  407672:	b9b2      	cbnz	r2, 4076a2 <__hi0bits+0x36>
  407674:	0403      	lsls	r3, r0, #16
  407676:	2010      	movs	r0, #16
  407678:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  40767c:	bf04      	itt	eq
  40767e:	021b      	lsleq	r3, r3, #8
  407680:	3008      	addeq	r0, #8
  407682:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  407686:	bf04      	itt	eq
  407688:	011b      	lsleq	r3, r3, #4
  40768a:	3004      	addeq	r0, #4
  40768c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  407690:	bf04      	itt	eq
  407692:	009b      	lsleq	r3, r3, #2
  407694:	3002      	addeq	r0, #2
  407696:	2b00      	cmp	r3, #0
  407698:	db02      	blt.n	4076a0 <__hi0bits+0x34>
  40769a:	005b      	lsls	r3, r3, #1
  40769c:	d403      	bmi.n	4076a6 <__hi0bits+0x3a>
  40769e:	2020      	movs	r0, #32
  4076a0:	4770      	bx	lr
  4076a2:	2000      	movs	r0, #0
  4076a4:	e7e8      	b.n	407678 <__hi0bits+0xc>
  4076a6:	3001      	adds	r0, #1
  4076a8:	4770      	bx	lr
  4076aa:	bf00      	nop

004076ac <__lo0bits>:
  4076ac:	6803      	ldr	r3, [r0, #0]
  4076ae:	f013 0207 	ands.w	r2, r3, #7
  4076b2:	4601      	mov	r1, r0
  4076b4:	d007      	beq.n	4076c6 <__lo0bits+0x1a>
  4076b6:	07da      	lsls	r2, r3, #31
  4076b8:	d421      	bmi.n	4076fe <__lo0bits+0x52>
  4076ba:	0798      	lsls	r0, r3, #30
  4076bc:	d421      	bmi.n	407702 <__lo0bits+0x56>
  4076be:	089b      	lsrs	r3, r3, #2
  4076c0:	600b      	str	r3, [r1, #0]
  4076c2:	2002      	movs	r0, #2
  4076c4:	4770      	bx	lr
  4076c6:	b298      	uxth	r0, r3
  4076c8:	b198      	cbz	r0, 4076f2 <__lo0bits+0x46>
  4076ca:	4610      	mov	r0, r2
  4076cc:	f013 0fff 	tst.w	r3, #255	; 0xff
  4076d0:	bf04      	itt	eq
  4076d2:	0a1b      	lsreq	r3, r3, #8
  4076d4:	3008      	addeq	r0, #8
  4076d6:	071a      	lsls	r2, r3, #28
  4076d8:	bf04      	itt	eq
  4076da:	091b      	lsreq	r3, r3, #4
  4076dc:	3004      	addeq	r0, #4
  4076de:	079a      	lsls	r2, r3, #30
  4076e0:	bf04      	itt	eq
  4076e2:	089b      	lsreq	r3, r3, #2
  4076e4:	3002      	addeq	r0, #2
  4076e6:	07da      	lsls	r2, r3, #31
  4076e8:	d407      	bmi.n	4076fa <__lo0bits+0x4e>
  4076ea:	085b      	lsrs	r3, r3, #1
  4076ec:	d104      	bne.n	4076f8 <__lo0bits+0x4c>
  4076ee:	2020      	movs	r0, #32
  4076f0:	4770      	bx	lr
  4076f2:	0c1b      	lsrs	r3, r3, #16
  4076f4:	2010      	movs	r0, #16
  4076f6:	e7e9      	b.n	4076cc <__lo0bits+0x20>
  4076f8:	3001      	adds	r0, #1
  4076fa:	600b      	str	r3, [r1, #0]
  4076fc:	4770      	bx	lr
  4076fe:	2000      	movs	r0, #0
  407700:	4770      	bx	lr
  407702:	085b      	lsrs	r3, r3, #1
  407704:	600b      	str	r3, [r1, #0]
  407706:	2001      	movs	r0, #1
  407708:	4770      	bx	lr
  40770a:	bf00      	nop

0040770c <__i2b>:
  40770c:	b510      	push	{r4, lr}
  40770e:	460c      	mov	r4, r1
  407710:	2101      	movs	r1, #1
  407712:	f7ff ff3b 	bl	40758c <_Balloc>
  407716:	2201      	movs	r2, #1
  407718:	6144      	str	r4, [r0, #20]
  40771a:	6102      	str	r2, [r0, #16]
  40771c:	bd10      	pop	{r4, pc}
  40771e:	bf00      	nop

00407720 <__multiply>:
  407720:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  407724:	690c      	ldr	r4, [r1, #16]
  407726:	6915      	ldr	r5, [r2, #16]
  407728:	42ac      	cmp	r4, r5
  40772a:	b083      	sub	sp, #12
  40772c:	468b      	mov	fp, r1
  40772e:	4616      	mov	r6, r2
  407730:	da04      	bge.n	40773c <__multiply+0x1c>
  407732:	4622      	mov	r2, r4
  407734:	46b3      	mov	fp, r6
  407736:	462c      	mov	r4, r5
  407738:	460e      	mov	r6, r1
  40773a:	4615      	mov	r5, r2
  40773c:	f8db 3008 	ldr.w	r3, [fp, #8]
  407740:	f8db 1004 	ldr.w	r1, [fp, #4]
  407744:	eb04 0805 	add.w	r8, r4, r5
  407748:	4598      	cmp	r8, r3
  40774a:	bfc8      	it	gt
  40774c:	3101      	addgt	r1, #1
  40774e:	f7ff ff1d 	bl	40758c <_Balloc>
  407752:	f100 0914 	add.w	r9, r0, #20
  407756:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  40775a:	45d1      	cmp	r9, sl
  40775c:	9000      	str	r0, [sp, #0]
  40775e:	d205      	bcs.n	40776c <__multiply+0x4c>
  407760:	464b      	mov	r3, r9
  407762:	2100      	movs	r1, #0
  407764:	f843 1b04 	str.w	r1, [r3], #4
  407768:	459a      	cmp	sl, r3
  40776a:	d8fb      	bhi.n	407764 <__multiply+0x44>
  40776c:	f106 0c14 	add.w	ip, r6, #20
  407770:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  407774:	f10b 0b14 	add.w	fp, fp, #20
  407778:	459c      	cmp	ip, r3
  40777a:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  40777e:	d24c      	bcs.n	40781a <__multiply+0xfa>
  407780:	f8cd a004 	str.w	sl, [sp, #4]
  407784:	469a      	mov	sl, r3
  407786:	f8dc 5000 	ldr.w	r5, [ip]
  40778a:	b2af      	uxth	r7, r5
  40778c:	b1ef      	cbz	r7, 4077ca <__multiply+0xaa>
  40778e:	2100      	movs	r1, #0
  407790:	464d      	mov	r5, r9
  407792:	465e      	mov	r6, fp
  407794:	460c      	mov	r4, r1
  407796:	f856 2b04 	ldr.w	r2, [r6], #4
  40779a:	6828      	ldr	r0, [r5, #0]
  40779c:	b293      	uxth	r3, r2
  40779e:	b281      	uxth	r1, r0
  4077a0:	fb07 1303 	mla	r3, r7, r3, r1
  4077a4:	0c12      	lsrs	r2, r2, #16
  4077a6:	0c01      	lsrs	r1, r0, #16
  4077a8:	4423      	add	r3, r4
  4077aa:	fb07 1102 	mla	r1, r7, r2, r1
  4077ae:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  4077b2:	b29b      	uxth	r3, r3
  4077b4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  4077b8:	45b6      	cmp	lr, r6
  4077ba:	f845 3b04 	str.w	r3, [r5], #4
  4077be:	ea4f 4411 	mov.w	r4, r1, lsr #16
  4077c2:	d8e8      	bhi.n	407796 <__multiply+0x76>
  4077c4:	602c      	str	r4, [r5, #0]
  4077c6:	f8dc 5000 	ldr.w	r5, [ip]
  4077ca:	0c2d      	lsrs	r5, r5, #16
  4077cc:	d01d      	beq.n	40780a <__multiply+0xea>
  4077ce:	f8d9 3000 	ldr.w	r3, [r9]
  4077d2:	4648      	mov	r0, r9
  4077d4:	461c      	mov	r4, r3
  4077d6:	4659      	mov	r1, fp
  4077d8:	2200      	movs	r2, #0
  4077da:	880e      	ldrh	r6, [r1, #0]
  4077dc:	0c24      	lsrs	r4, r4, #16
  4077de:	fb05 4406 	mla	r4, r5, r6, r4
  4077e2:	4422      	add	r2, r4
  4077e4:	b29b      	uxth	r3, r3
  4077e6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  4077ea:	f840 3b04 	str.w	r3, [r0], #4
  4077ee:	f851 3b04 	ldr.w	r3, [r1], #4
  4077f2:	6804      	ldr	r4, [r0, #0]
  4077f4:	0c1b      	lsrs	r3, r3, #16
  4077f6:	b2a6      	uxth	r6, r4
  4077f8:	fb05 6303 	mla	r3, r5, r3, r6
  4077fc:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  407800:	458e      	cmp	lr, r1
  407802:	ea4f 4213 	mov.w	r2, r3, lsr #16
  407806:	d8e8      	bhi.n	4077da <__multiply+0xba>
  407808:	6003      	str	r3, [r0, #0]
  40780a:	f10c 0c04 	add.w	ip, ip, #4
  40780e:	45e2      	cmp	sl, ip
  407810:	f109 0904 	add.w	r9, r9, #4
  407814:	d8b7      	bhi.n	407786 <__multiply+0x66>
  407816:	f8dd a004 	ldr.w	sl, [sp, #4]
  40781a:	f1b8 0f00 	cmp.w	r8, #0
  40781e:	dd0b      	ble.n	407838 <__multiply+0x118>
  407820:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  407824:	f1aa 0a04 	sub.w	sl, sl, #4
  407828:	b11b      	cbz	r3, 407832 <__multiply+0x112>
  40782a:	e005      	b.n	407838 <__multiply+0x118>
  40782c:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  407830:	b913      	cbnz	r3, 407838 <__multiply+0x118>
  407832:	f1b8 0801 	subs.w	r8, r8, #1
  407836:	d1f9      	bne.n	40782c <__multiply+0x10c>
  407838:	9800      	ldr	r0, [sp, #0]
  40783a:	f8c0 8010 	str.w	r8, [r0, #16]
  40783e:	b003      	add	sp, #12
  407840:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00407844 <__pow5mult>:
  407844:	f012 0303 	ands.w	r3, r2, #3
  407848:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40784c:	4614      	mov	r4, r2
  40784e:	4607      	mov	r7, r0
  407850:	d12e      	bne.n	4078b0 <__pow5mult+0x6c>
  407852:	460d      	mov	r5, r1
  407854:	10a4      	asrs	r4, r4, #2
  407856:	d01c      	beq.n	407892 <__pow5mult+0x4e>
  407858:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  40785a:	b396      	cbz	r6, 4078c2 <__pow5mult+0x7e>
  40785c:	07e3      	lsls	r3, r4, #31
  40785e:	f04f 0800 	mov.w	r8, #0
  407862:	d406      	bmi.n	407872 <__pow5mult+0x2e>
  407864:	1064      	asrs	r4, r4, #1
  407866:	d014      	beq.n	407892 <__pow5mult+0x4e>
  407868:	6830      	ldr	r0, [r6, #0]
  40786a:	b1a8      	cbz	r0, 407898 <__pow5mult+0x54>
  40786c:	4606      	mov	r6, r0
  40786e:	07e3      	lsls	r3, r4, #31
  407870:	d5f8      	bpl.n	407864 <__pow5mult+0x20>
  407872:	4632      	mov	r2, r6
  407874:	4629      	mov	r1, r5
  407876:	4638      	mov	r0, r7
  407878:	f7ff ff52 	bl	407720 <__multiply>
  40787c:	b1b5      	cbz	r5, 4078ac <__pow5mult+0x68>
  40787e:	686a      	ldr	r2, [r5, #4]
  407880:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  407882:	1064      	asrs	r4, r4, #1
  407884:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  407888:	6029      	str	r1, [r5, #0]
  40788a:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  40788e:	4605      	mov	r5, r0
  407890:	d1ea      	bne.n	407868 <__pow5mult+0x24>
  407892:	4628      	mov	r0, r5
  407894:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  407898:	4632      	mov	r2, r6
  40789a:	4631      	mov	r1, r6
  40789c:	4638      	mov	r0, r7
  40789e:	f7ff ff3f 	bl	407720 <__multiply>
  4078a2:	6030      	str	r0, [r6, #0]
  4078a4:	f8c0 8000 	str.w	r8, [r0]
  4078a8:	4606      	mov	r6, r0
  4078aa:	e7e0      	b.n	40786e <__pow5mult+0x2a>
  4078ac:	4605      	mov	r5, r0
  4078ae:	e7d9      	b.n	407864 <__pow5mult+0x20>
  4078b0:	1e5a      	subs	r2, r3, #1
  4078b2:	4d0b      	ldr	r5, [pc, #44]	; (4078e0 <__pow5mult+0x9c>)
  4078b4:	2300      	movs	r3, #0
  4078b6:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  4078ba:	f7ff fe97 	bl	4075ec <__multadd>
  4078be:	4605      	mov	r5, r0
  4078c0:	e7c8      	b.n	407854 <__pow5mult+0x10>
  4078c2:	2101      	movs	r1, #1
  4078c4:	4638      	mov	r0, r7
  4078c6:	f7ff fe61 	bl	40758c <_Balloc>
  4078ca:	f240 2171 	movw	r1, #625	; 0x271
  4078ce:	2201      	movs	r2, #1
  4078d0:	2300      	movs	r3, #0
  4078d2:	6141      	str	r1, [r0, #20]
  4078d4:	6102      	str	r2, [r0, #16]
  4078d6:	4606      	mov	r6, r0
  4078d8:	64b8      	str	r0, [r7, #72]	; 0x48
  4078da:	6003      	str	r3, [r0, #0]
  4078dc:	e7be      	b.n	40785c <__pow5mult+0x18>
  4078de:	bf00      	nop
  4078e0:	00408ee0 	.word	0x00408ee0

004078e4 <__lshift>:
  4078e4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4078e8:	4691      	mov	r9, r2
  4078ea:	690a      	ldr	r2, [r1, #16]
  4078ec:	688b      	ldr	r3, [r1, #8]
  4078ee:	ea4f 1469 	mov.w	r4, r9, asr #5
  4078f2:	eb04 0802 	add.w	r8, r4, r2
  4078f6:	f108 0501 	add.w	r5, r8, #1
  4078fa:	429d      	cmp	r5, r3
  4078fc:	460e      	mov	r6, r1
  4078fe:	4607      	mov	r7, r0
  407900:	6849      	ldr	r1, [r1, #4]
  407902:	dd04      	ble.n	40790e <__lshift+0x2a>
  407904:	005b      	lsls	r3, r3, #1
  407906:	429d      	cmp	r5, r3
  407908:	f101 0101 	add.w	r1, r1, #1
  40790c:	dcfa      	bgt.n	407904 <__lshift+0x20>
  40790e:	4638      	mov	r0, r7
  407910:	f7ff fe3c 	bl	40758c <_Balloc>
  407914:	2c00      	cmp	r4, #0
  407916:	f100 0314 	add.w	r3, r0, #20
  40791a:	dd06      	ble.n	40792a <__lshift+0x46>
  40791c:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  407920:	2100      	movs	r1, #0
  407922:	f843 1b04 	str.w	r1, [r3], #4
  407926:	429a      	cmp	r2, r3
  407928:	d1fb      	bne.n	407922 <__lshift+0x3e>
  40792a:	6934      	ldr	r4, [r6, #16]
  40792c:	f106 0114 	add.w	r1, r6, #20
  407930:	f019 091f 	ands.w	r9, r9, #31
  407934:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  407938:	d01d      	beq.n	407976 <__lshift+0x92>
  40793a:	f1c9 0c20 	rsb	ip, r9, #32
  40793e:	2200      	movs	r2, #0
  407940:	680c      	ldr	r4, [r1, #0]
  407942:	fa04 f409 	lsl.w	r4, r4, r9
  407946:	4314      	orrs	r4, r2
  407948:	f843 4b04 	str.w	r4, [r3], #4
  40794c:	f851 2b04 	ldr.w	r2, [r1], #4
  407950:	458e      	cmp	lr, r1
  407952:	fa22 f20c 	lsr.w	r2, r2, ip
  407956:	d8f3      	bhi.n	407940 <__lshift+0x5c>
  407958:	601a      	str	r2, [r3, #0]
  40795a:	b10a      	cbz	r2, 407960 <__lshift+0x7c>
  40795c:	f108 0502 	add.w	r5, r8, #2
  407960:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  407962:	6872      	ldr	r2, [r6, #4]
  407964:	3d01      	subs	r5, #1
  407966:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  40796a:	6105      	str	r5, [r0, #16]
  40796c:	6031      	str	r1, [r6, #0]
  40796e:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  407972:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  407976:	3b04      	subs	r3, #4
  407978:	f851 2b04 	ldr.w	r2, [r1], #4
  40797c:	f843 2f04 	str.w	r2, [r3, #4]!
  407980:	458e      	cmp	lr, r1
  407982:	d8f9      	bhi.n	407978 <__lshift+0x94>
  407984:	e7ec      	b.n	407960 <__lshift+0x7c>
  407986:	bf00      	nop

00407988 <__mcmp>:
  407988:	b430      	push	{r4, r5}
  40798a:	690b      	ldr	r3, [r1, #16]
  40798c:	4605      	mov	r5, r0
  40798e:	6900      	ldr	r0, [r0, #16]
  407990:	1ac0      	subs	r0, r0, r3
  407992:	d10f      	bne.n	4079b4 <__mcmp+0x2c>
  407994:	009b      	lsls	r3, r3, #2
  407996:	3514      	adds	r5, #20
  407998:	3114      	adds	r1, #20
  40799a:	4419      	add	r1, r3
  40799c:	442b      	add	r3, r5
  40799e:	e001      	b.n	4079a4 <__mcmp+0x1c>
  4079a0:	429d      	cmp	r5, r3
  4079a2:	d207      	bcs.n	4079b4 <__mcmp+0x2c>
  4079a4:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  4079a8:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  4079ac:	4294      	cmp	r4, r2
  4079ae:	d0f7      	beq.n	4079a0 <__mcmp+0x18>
  4079b0:	d302      	bcc.n	4079b8 <__mcmp+0x30>
  4079b2:	2001      	movs	r0, #1
  4079b4:	bc30      	pop	{r4, r5}
  4079b6:	4770      	bx	lr
  4079b8:	f04f 30ff 	mov.w	r0, #4294967295
  4079bc:	e7fa      	b.n	4079b4 <__mcmp+0x2c>
  4079be:	bf00      	nop

004079c0 <__mdiff>:
  4079c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4079c4:	690f      	ldr	r7, [r1, #16]
  4079c6:	460e      	mov	r6, r1
  4079c8:	6911      	ldr	r1, [r2, #16]
  4079ca:	1a7f      	subs	r7, r7, r1
  4079cc:	2f00      	cmp	r7, #0
  4079ce:	4690      	mov	r8, r2
  4079d0:	d117      	bne.n	407a02 <__mdiff+0x42>
  4079d2:	0089      	lsls	r1, r1, #2
  4079d4:	f106 0514 	add.w	r5, r6, #20
  4079d8:	f102 0e14 	add.w	lr, r2, #20
  4079dc:	186b      	adds	r3, r5, r1
  4079de:	4471      	add	r1, lr
  4079e0:	e001      	b.n	4079e6 <__mdiff+0x26>
  4079e2:	429d      	cmp	r5, r3
  4079e4:	d25c      	bcs.n	407aa0 <__mdiff+0xe0>
  4079e6:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  4079ea:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  4079ee:	42a2      	cmp	r2, r4
  4079f0:	d0f7      	beq.n	4079e2 <__mdiff+0x22>
  4079f2:	d25e      	bcs.n	407ab2 <__mdiff+0xf2>
  4079f4:	4633      	mov	r3, r6
  4079f6:	462c      	mov	r4, r5
  4079f8:	4646      	mov	r6, r8
  4079fa:	4675      	mov	r5, lr
  4079fc:	4698      	mov	r8, r3
  4079fe:	2701      	movs	r7, #1
  407a00:	e005      	b.n	407a0e <__mdiff+0x4e>
  407a02:	db58      	blt.n	407ab6 <__mdiff+0xf6>
  407a04:	f106 0514 	add.w	r5, r6, #20
  407a08:	f108 0414 	add.w	r4, r8, #20
  407a0c:	2700      	movs	r7, #0
  407a0e:	6871      	ldr	r1, [r6, #4]
  407a10:	f7ff fdbc 	bl	40758c <_Balloc>
  407a14:	f8d8 3010 	ldr.w	r3, [r8, #16]
  407a18:	6936      	ldr	r6, [r6, #16]
  407a1a:	60c7      	str	r7, [r0, #12]
  407a1c:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  407a20:	46a6      	mov	lr, r4
  407a22:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  407a26:	f100 0414 	add.w	r4, r0, #20
  407a2a:	2300      	movs	r3, #0
  407a2c:	f85e 1b04 	ldr.w	r1, [lr], #4
  407a30:	f855 8b04 	ldr.w	r8, [r5], #4
  407a34:	b28a      	uxth	r2, r1
  407a36:	fa13 f388 	uxtah	r3, r3, r8
  407a3a:	0c09      	lsrs	r1, r1, #16
  407a3c:	1a9a      	subs	r2, r3, r2
  407a3e:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  407a42:	eb03 4322 	add.w	r3, r3, r2, asr #16
  407a46:	b292      	uxth	r2, r2
  407a48:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  407a4c:	45f4      	cmp	ip, lr
  407a4e:	f844 2b04 	str.w	r2, [r4], #4
  407a52:	ea4f 4323 	mov.w	r3, r3, asr #16
  407a56:	d8e9      	bhi.n	407a2c <__mdiff+0x6c>
  407a58:	42af      	cmp	r7, r5
  407a5a:	d917      	bls.n	407a8c <__mdiff+0xcc>
  407a5c:	46a4      	mov	ip, r4
  407a5e:	46ae      	mov	lr, r5
  407a60:	f85e 2b04 	ldr.w	r2, [lr], #4
  407a64:	fa13 f382 	uxtah	r3, r3, r2
  407a68:	1419      	asrs	r1, r3, #16
  407a6a:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  407a6e:	b29b      	uxth	r3, r3
  407a70:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  407a74:	4577      	cmp	r7, lr
  407a76:	f84c 2b04 	str.w	r2, [ip], #4
  407a7a:	ea4f 4321 	mov.w	r3, r1, asr #16
  407a7e:	d8ef      	bhi.n	407a60 <__mdiff+0xa0>
  407a80:	43ed      	mvns	r5, r5
  407a82:	442f      	add	r7, r5
  407a84:	f027 0703 	bic.w	r7, r7, #3
  407a88:	3704      	adds	r7, #4
  407a8a:	443c      	add	r4, r7
  407a8c:	3c04      	subs	r4, #4
  407a8e:	b922      	cbnz	r2, 407a9a <__mdiff+0xda>
  407a90:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  407a94:	3e01      	subs	r6, #1
  407a96:	2b00      	cmp	r3, #0
  407a98:	d0fa      	beq.n	407a90 <__mdiff+0xd0>
  407a9a:	6106      	str	r6, [r0, #16]
  407a9c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  407aa0:	2100      	movs	r1, #0
  407aa2:	f7ff fd73 	bl	40758c <_Balloc>
  407aa6:	2201      	movs	r2, #1
  407aa8:	2300      	movs	r3, #0
  407aaa:	6102      	str	r2, [r0, #16]
  407aac:	6143      	str	r3, [r0, #20]
  407aae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  407ab2:	4674      	mov	r4, lr
  407ab4:	e7ab      	b.n	407a0e <__mdiff+0x4e>
  407ab6:	4633      	mov	r3, r6
  407ab8:	f106 0414 	add.w	r4, r6, #20
  407abc:	f102 0514 	add.w	r5, r2, #20
  407ac0:	4616      	mov	r6, r2
  407ac2:	2701      	movs	r7, #1
  407ac4:	4698      	mov	r8, r3
  407ac6:	e7a2      	b.n	407a0e <__mdiff+0x4e>

00407ac8 <__d2b>:
  407ac8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  407acc:	b082      	sub	sp, #8
  407ace:	2101      	movs	r1, #1
  407ad0:	461c      	mov	r4, r3
  407ad2:	f3c3 570a 	ubfx	r7, r3, #20, #11
  407ad6:	4615      	mov	r5, r2
  407ad8:	9e08      	ldr	r6, [sp, #32]
  407ada:	f7ff fd57 	bl	40758c <_Balloc>
  407ade:	f3c4 0413 	ubfx	r4, r4, #0, #20
  407ae2:	4680      	mov	r8, r0
  407ae4:	b10f      	cbz	r7, 407aea <__d2b+0x22>
  407ae6:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  407aea:	9401      	str	r4, [sp, #4]
  407aec:	b31d      	cbz	r5, 407b36 <__d2b+0x6e>
  407aee:	a802      	add	r0, sp, #8
  407af0:	f840 5d08 	str.w	r5, [r0, #-8]!
  407af4:	f7ff fdda 	bl	4076ac <__lo0bits>
  407af8:	2800      	cmp	r0, #0
  407afa:	d134      	bne.n	407b66 <__d2b+0x9e>
  407afc:	e89d 000c 	ldmia.w	sp, {r2, r3}
  407b00:	f8c8 2014 	str.w	r2, [r8, #20]
  407b04:	2b00      	cmp	r3, #0
  407b06:	bf0c      	ite	eq
  407b08:	2101      	moveq	r1, #1
  407b0a:	2102      	movne	r1, #2
  407b0c:	f8c8 3018 	str.w	r3, [r8, #24]
  407b10:	f8c8 1010 	str.w	r1, [r8, #16]
  407b14:	b9df      	cbnz	r7, 407b4e <__d2b+0x86>
  407b16:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  407b1a:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  407b1e:	6030      	str	r0, [r6, #0]
  407b20:	6918      	ldr	r0, [r3, #16]
  407b22:	f7ff fda3 	bl	40766c <__hi0bits>
  407b26:	9b09      	ldr	r3, [sp, #36]	; 0x24
  407b28:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  407b2c:	6018      	str	r0, [r3, #0]
  407b2e:	4640      	mov	r0, r8
  407b30:	b002      	add	sp, #8
  407b32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  407b36:	a801      	add	r0, sp, #4
  407b38:	f7ff fdb8 	bl	4076ac <__lo0bits>
  407b3c:	9b01      	ldr	r3, [sp, #4]
  407b3e:	f8c8 3014 	str.w	r3, [r8, #20]
  407b42:	2101      	movs	r1, #1
  407b44:	3020      	adds	r0, #32
  407b46:	f8c8 1010 	str.w	r1, [r8, #16]
  407b4a:	2f00      	cmp	r7, #0
  407b4c:	d0e3      	beq.n	407b16 <__d2b+0x4e>
  407b4e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  407b50:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  407b54:	4407      	add	r7, r0
  407b56:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  407b5a:	6037      	str	r7, [r6, #0]
  407b5c:	6018      	str	r0, [r3, #0]
  407b5e:	4640      	mov	r0, r8
  407b60:	b002      	add	sp, #8
  407b62:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  407b66:	e89d 000a 	ldmia.w	sp, {r1, r3}
  407b6a:	f1c0 0220 	rsb	r2, r0, #32
  407b6e:	fa03 f202 	lsl.w	r2, r3, r2
  407b72:	430a      	orrs	r2, r1
  407b74:	40c3      	lsrs	r3, r0
  407b76:	9301      	str	r3, [sp, #4]
  407b78:	f8c8 2014 	str.w	r2, [r8, #20]
  407b7c:	e7c2      	b.n	407b04 <__d2b+0x3c>
  407b7e:	bf00      	nop

00407b80 <_sbrk_r>:
  407b80:	b538      	push	{r3, r4, r5, lr}
  407b82:	4c07      	ldr	r4, [pc, #28]	; (407ba0 <_sbrk_r+0x20>)
  407b84:	2300      	movs	r3, #0
  407b86:	4605      	mov	r5, r0
  407b88:	4608      	mov	r0, r1
  407b8a:	6023      	str	r3, [r4, #0]
  407b8c:	f7fa fbfa 	bl	402384 <_sbrk>
  407b90:	1c43      	adds	r3, r0, #1
  407b92:	d000      	beq.n	407b96 <_sbrk_r+0x16>
  407b94:	bd38      	pop	{r3, r4, r5, pc}
  407b96:	6823      	ldr	r3, [r4, #0]
  407b98:	2b00      	cmp	r3, #0
  407b9a:	d0fb      	beq.n	407b94 <_sbrk_r+0x14>
  407b9c:	602b      	str	r3, [r5, #0]
  407b9e:	bd38      	pop	{r3, r4, r5, pc}
  407ba0:	20001c40 	.word	0x20001c40

00407ba4 <strchr>:
  407ba4:	b2c9      	uxtb	r1, r1
  407ba6:	2900      	cmp	r1, #0
  407ba8:	d041      	beq.n	407c2e <strchr+0x8a>
  407baa:	0782      	lsls	r2, r0, #30
  407bac:	b4f0      	push	{r4, r5, r6, r7}
  407bae:	d067      	beq.n	407c80 <strchr+0xdc>
  407bb0:	7803      	ldrb	r3, [r0, #0]
  407bb2:	2b00      	cmp	r3, #0
  407bb4:	d068      	beq.n	407c88 <strchr+0xe4>
  407bb6:	4299      	cmp	r1, r3
  407bb8:	d037      	beq.n	407c2a <strchr+0x86>
  407bba:	1c43      	adds	r3, r0, #1
  407bbc:	e004      	b.n	407bc8 <strchr+0x24>
  407bbe:	f813 0b01 	ldrb.w	r0, [r3], #1
  407bc2:	b390      	cbz	r0, 407c2a <strchr+0x86>
  407bc4:	4281      	cmp	r1, r0
  407bc6:	d02f      	beq.n	407c28 <strchr+0x84>
  407bc8:	079a      	lsls	r2, r3, #30
  407bca:	461c      	mov	r4, r3
  407bcc:	d1f7      	bne.n	407bbe <strchr+0x1a>
  407bce:	6825      	ldr	r5, [r4, #0]
  407bd0:	ea41 2301 	orr.w	r3, r1, r1, lsl #8
  407bd4:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
  407bd8:	ea83 0605 	eor.w	r6, r3, r5
  407bdc:	f1a6 3001 	sub.w	r0, r6, #16843009	; 0x1010101
  407be0:	f1a5 3201 	sub.w	r2, r5, #16843009	; 0x1010101
  407be4:	ea20 0006 	bic.w	r0, r0, r6
  407be8:	ea22 0205 	bic.w	r2, r2, r5
  407bec:	4302      	orrs	r2, r0
  407bee:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  407bf2:	d111      	bne.n	407c18 <strchr+0x74>
  407bf4:	4620      	mov	r0, r4
  407bf6:	f850 6f04 	ldr.w	r6, [r0, #4]!
  407bfa:	ea83 0706 	eor.w	r7, r3, r6
  407bfe:	f1a7 3501 	sub.w	r5, r7, #16843009	; 0x1010101
  407c02:	f1a6 3201 	sub.w	r2, r6, #16843009	; 0x1010101
  407c06:	ea25 0507 	bic.w	r5, r5, r7
  407c0a:	ea22 0206 	bic.w	r2, r2, r6
  407c0e:	432a      	orrs	r2, r5
  407c10:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  407c14:	d0ef      	beq.n	407bf6 <strchr+0x52>
  407c16:	4604      	mov	r4, r0
  407c18:	7820      	ldrb	r0, [r4, #0]
  407c1a:	b918      	cbnz	r0, 407c24 <strchr+0x80>
  407c1c:	e005      	b.n	407c2a <strchr+0x86>
  407c1e:	f814 0f01 	ldrb.w	r0, [r4, #1]!
  407c22:	b110      	cbz	r0, 407c2a <strchr+0x86>
  407c24:	4281      	cmp	r1, r0
  407c26:	d1fa      	bne.n	407c1e <strchr+0x7a>
  407c28:	4620      	mov	r0, r4
  407c2a:	bcf0      	pop	{r4, r5, r6, r7}
  407c2c:	4770      	bx	lr
  407c2e:	0783      	lsls	r3, r0, #30
  407c30:	d024      	beq.n	407c7c <strchr+0xd8>
  407c32:	7803      	ldrb	r3, [r0, #0]
  407c34:	2b00      	cmp	r3, #0
  407c36:	d0f9      	beq.n	407c2c <strchr+0x88>
  407c38:	1c43      	adds	r3, r0, #1
  407c3a:	e003      	b.n	407c44 <strchr+0xa0>
  407c3c:	7802      	ldrb	r2, [r0, #0]
  407c3e:	3301      	adds	r3, #1
  407c40:	2a00      	cmp	r2, #0
  407c42:	d0f3      	beq.n	407c2c <strchr+0x88>
  407c44:	0799      	lsls	r1, r3, #30
  407c46:	4618      	mov	r0, r3
  407c48:	d1f8      	bne.n	407c3c <strchr+0x98>
  407c4a:	6819      	ldr	r1, [r3, #0]
  407c4c:	f1a1 3201 	sub.w	r2, r1, #16843009	; 0x1010101
  407c50:	ea22 0201 	bic.w	r2, r2, r1
  407c54:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  407c58:	d108      	bne.n	407c6c <strchr+0xc8>
  407c5a:	f853 1f04 	ldr.w	r1, [r3, #4]!
  407c5e:	f1a1 3201 	sub.w	r2, r1, #16843009	; 0x1010101
  407c62:	ea22 0201 	bic.w	r2, r2, r1
  407c66:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  407c6a:	d0f6      	beq.n	407c5a <strchr+0xb6>
  407c6c:	781a      	ldrb	r2, [r3, #0]
  407c6e:	4618      	mov	r0, r3
  407c70:	b142      	cbz	r2, 407c84 <strchr+0xe0>
  407c72:	f810 3f01 	ldrb.w	r3, [r0, #1]!
  407c76:	2b00      	cmp	r3, #0
  407c78:	d1fb      	bne.n	407c72 <strchr+0xce>
  407c7a:	4770      	bx	lr
  407c7c:	4603      	mov	r3, r0
  407c7e:	e7e4      	b.n	407c4a <strchr+0xa6>
  407c80:	4604      	mov	r4, r0
  407c82:	e7a4      	b.n	407bce <strchr+0x2a>
  407c84:	4618      	mov	r0, r3
  407c86:	4770      	bx	lr
  407c88:	4618      	mov	r0, r3
  407c8a:	e7ce      	b.n	407c2a <strchr+0x86>
	...

00407cc0 <strlen>:
  407cc0:	f890 f000 	pld	[r0]
  407cc4:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  407cc8:	f020 0107 	bic.w	r1, r0, #7
  407ccc:	f06f 0c00 	mvn.w	ip, #0
  407cd0:	f010 0407 	ands.w	r4, r0, #7
  407cd4:	f891 f020 	pld	[r1, #32]
  407cd8:	f040 8049 	bne.w	407d6e <strlen+0xae>
  407cdc:	f04f 0400 	mov.w	r4, #0
  407ce0:	f06f 0007 	mvn.w	r0, #7
  407ce4:	e9d1 2300 	ldrd	r2, r3, [r1]
  407ce8:	f891 f040 	pld	[r1, #64]	; 0x40
  407cec:	f100 0008 	add.w	r0, r0, #8
  407cf0:	fa82 f24c 	uadd8	r2, r2, ip
  407cf4:	faa4 f28c 	sel	r2, r4, ip
  407cf8:	fa83 f34c 	uadd8	r3, r3, ip
  407cfc:	faa2 f38c 	sel	r3, r2, ip
  407d00:	bb4b      	cbnz	r3, 407d56 <strlen+0x96>
  407d02:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  407d06:	fa82 f24c 	uadd8	r2, r2, ip
  407d0a:	f100 0008 	add.w	r0, r0, #8
  407d0e:	faa4 f28c 	sel	r2, r4, ip
  407d12:	fa83 f34c 	uadd8	r3, r3, ip
  407d16:	faa2 f38c 	sel	r3, r2, ip
  407d1a:	b9e3      	cbnz	r3, 407d56 <strlen+0x96>
  407d1c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  407d20:	fa82 f24c 	uadd8	r2, r2, ip
  407d24:	f100 0008 	add.w	r0, r0, #8
  407d28:	faa4 f28c 	sel	r2, r4, ip
  407d2c:	fa83 f34c 	uadd8	r3, r3, ip
  407d30:	faa2 f38c 	sel	r3, r2, ip
  407d34:	b97b      	cbnz	r3, 407d56 <strlen+0x96>
  407d36:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  407d3a:	f101 0120 	add.w	r1, r1, #32
  407d3e:	fa82 f24c 	uadd8	r2, r2, ip
  407d42:	f100 0008 	add.w	r0, r0, #8
  407d46:	faa4 f28c 	sel	r2, r4, ip
  407d4a:	fa83 f34c 	uadd8	r3, r3, ip
  407d4e:	faa2 f38c 	sel	r3, r2, ip
  407d52:	2b00      	cmp	r3, #0
  407d54:	d0c6      	beq.n	407ce4 <strlen+0x24>
  407d56:	2a00      	cmp	r2, #0
  407d58:	bf04      	itt	eq
  407d5a:	3004      	addeq	r0, #4
  407d5c:	461a      	moveq	r2, r3
  407d5e:	ba12      	rev	r2, r2
  407d60:	fab2 f282 	clz	r2, r2
  407d64:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  407d68:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  407d6c:	4770      	bx	lr
  407d6e:	e9d1 2300 	ldrd	r2, r3, [r1]
  407d72:	f004 0503 	and.w	r5, r4, #3
  407d76:	f1c4 0000 	rsb	r0, r4, #0
  407d7a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  407d7e:	f014 0f04 	tst.w	r4, #4
  407d82:	f891 f040 	pld	[r1, #64]	; 0x40
  407d86:	fa0c f505 	lsl.w	r5, ip, r5
  407d8a:	ea62 0205 	orn	r2, r2, r5
  407d8e:	bf1c      	itt	ne
  407d90:	ea63 0305 	ornne	r3, r3, r5
  407d94:	4662      	movne	r2, ip
  407d96:	f04f 0400 	mov.w	r4, #0
  407d9a:	e7a9      	b.n	407cf0 <strlen+0x30>

00407d9c <__ssprint_r>:
  407d9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  407da0:	6893      	ldr	r3, [r2, #8]
  407da2:	b083      	sub	sp, #12
  407da4:	4690      	mov	r8, r2
  407da6:	2b00      	cmp	r3, #0
  407da8:	d070      	beq.n	407e8c <__ssprint_r+0xf0>
  407daa:	4682      	mov	sl, r0
  407dac:	460c      	mov	r4, r1
  407dae:	6817      	ldr	r7, [r2, #0]
  407db0:	688d      	ldr	r5, [r1, #8]
  407db2:	6808      	ldr	r0, [r1, #0]
  407db4:	e042      	b.n	407e3c <__ssprint_r+0xa0>
  407db6:	89a3      	ldrh	r3, [r4, #12]
  407db8:	f413 6f90 	tst.w	r3, #1152	; 0x480
  407dbc:	d02e      	beq.n	407e1c <__ssprint_r+0x80>
  407dbe:	6965      	ldr	r5, [r4, #20]
  407dc0:	6921      	ldr	r1, [r4, #16]
  407dc2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  407dc6:	eba0 0b01 	sub.w	fp, r0, r1
  407dca:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  407dce:	f10b 0001 	add.w	r0, fp, #1
  407dd2:	106d      	asrs	r5, r5, #1
  407dd4:	4430      	add	r0, r6
  407dd6:	42a8      	cmp	r0, r5
  407dd8:	462a      	mov	r2, r5
  407dda:	bf84      	itt	hi
  407ddc:	4605      	movhi	r5, r0
  407dde:	462a      	movhi	r2, r5
  407de0:	055b      	lsls	r3, r3, #21
  407de2:	d538      	bpl.n	407e56 <__ssprint_r+0xba>
  407de4:	4611      	mov	r1, r2
  407de6:	4650      	mov	r0, sl
  407de8:	f7fe fffc 	bl	406de4 <_malloc_r>
  407dec:	2800      	cmp	r0, #0
  407dee:	d03c      	beq.n	407e6a <__ssprint_r+0xce>
  407df0:	465a      	mov	r2, fp
  407df2:	6921      	ldr	r1, [r4, #16]
  407df4:	9001      	str	r0, [sp, #4]
  407df6:	f7ff fb2b 	bl	407450 <memcpy>
  407dfa:	89a2      	ldrh	r2, [r4, #12]
  407dfc:	9b01      	ldr	r3, [sp, #4]
  407dfe:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  407e02:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  407e06:	81a2      	strh	r2, [r4, #12]
  407e08:	eba5 020b 	sub.w	r2, r5, fp
  407e0c:	eb03 000b 	add.w	r0, r3, fp
  407e10:	6165      	str	r5, [r4, #20]
  407e12:	6123      	str	r3, [r4, #16]
  407e14:	6020      	str	r0, [r4, #0]
  407e16:	60a2      	str	r2, [r4, #8]
  407e18:	4635      	mov	r5, r6
  407e1a:	46b3      	mov	fp, r6
  407e1c:	465a      	mov	r2, fp
  407e1e:	4649      	mov	r1, r9
  407e20:	f000 fa08 	bl	408234 <memmove>
  407e24:	f8d8 3008 	ldr.w	r3, [r8, #8]
  407e28:	68a2      	ldr	r2, [r4, #8]
  407e2a:	6820      	ldr	r0, [r4, #0]
  407e2c:	1b55      	subs	r5, r2, r5
  407e2e:	4458      	add	r0, fp
  407e30:	1b9e      	subs	r6, r3, r6
  407e32:	60a5      	str	r5, [r4, #8]
  407e34:	6020      	str	r0, [r4, #0]
  407e36:	f8c8 6008 	str.w	r6, [r8, #8]
  407e3a:	b33e      	cbz	r6, 407e8c <__ssprint_r+0xf0>
  407e3c:	687e      	ldr	r6, [r7, #4]
  407e3e:	463b      	mov	r3, r7
  407e40:	3708      	adds	r7, #8
  407e42:	2e00      	cmp	r6, #0
  407e44:	d0fa      	beq.n	407e3c <__ssprint_r+0xa0>
  407e46:	42ae      	cmp	r6, r5
  407e48:	f8d3 9000 	ldr.w	r9, [r3]
  407e4c:	46ab      	mov	fp, r5
  407e4e:	d2b2      	bcs.n	407db6 <__ssprint_r+0x1a>
  407e50:	4635      	mov	r5, r6
  407e52:	46b3      	mov	fp, r6
  407e54:	e7e2      	b.n	407e1c <__ssprint_r+0x80>
  407e56:	4650      	mov	r0, sl
  407e58:	f000 fa50 	bl	4082fc <_realloc_r>
  407e5c:	4603      	mov	r3, r0
  407e5e:	2800      	cmp	r0, #0
  407e60:	d1d2      	bne.n	407e08 <__ssprint_r+0x6c>
  407e62:	6921      	ldr	r1, [r4, #16]
  407e64:	4650      	mov	r0, sl
  407e66:	f000 f8e9 	bl	40803c <_free_r>
  407e6a:	230c      	movs	r3, #12
  407e6c:	f8ca 3000 	str.w	r3, [sl]
  407e70:	89a3      	ldrh	r3, [r4, #12]
  407e72:	2200      	movs	r2, #0
  407e74:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  407e78:	f04f 30ff 	mov.w	r0, #4294967295
  407e7c:	81a3      	strh	r3, [r4, #12]
  407e7e:	f8c8 2008 	str.w	r2, [r8, #8]
  407e82:	f8c8 2004 	str.w	r2, [r8, #4]
  407e86:	b003      	add	sp, #12
  407e88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  407e8c:	2000      	movs	r0, #0
  407e8e:	f8c8 0004 	str.w	r0, [r8, #4]
  407e92:	b003      	add	sp, #12
  407e94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00407e98 <__register_exitproc>:
  407e98:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  407e9c:	4c25      	ldr	r4, [pc, #148]	; (407f34 <__register_exitproc+0x9c>)
  407e9e:	6825      	ldr	r5, [r4, #0]
  407ea0:	f8d5 4148 	ldr.w	r4, [r5, #328]	; 0x148
  407ea4:	4606      	mov	r6, r0
  407ea6:	4688      	mov	r8, r1
  407ea8:	4692      	mov	sl, r2
  407eaa:	4699      	mov	r9, r3
  407eac:	b3c4      	cbz	r4, 407f20 <__register_exitproc+0x88>
  407eae:	6860      	ldr	r0, [r4, #4]
  407eb0:	281f      	cmp	r0, #31
  407eb2:	dc17      	bgt.n	407ee4 <__register_exitproc+0x4c>
  407eb4:	1c43      	adds	r3, r0, #1
  407eb6:	b176      	cbz	r6, 407ed6 <__register_exitproc+0x3e>
  407eb8:	eb04 0580 	add.w	r5, r4, r0, lsl #2
  407ebc:	2201      	movs	r2, #1
  407ebe:	f8c5 a088 	str.w	sl, [r5, #136]	; 0x88
  407ec2:	f8d4 1188 	ldr.w	r1, [r4, #392]	; 0x188
  407ec6:	4082      	lsls	r2, r0
  407ec8:	4311      	orrs	r1, r2
  407eca:	2e02      	cmp	r6, #2
  407ecc:	f8c4 1188 	str.w	r1, [r4, #392]	; 0x188
  407ed0:	f8c5 9108 	str.w	r9, [r5, #264]	; 0x108
  407ed4:	d01e      	beq.n	407f14 <__register_exitproc+0x7c>
  407ed6:	3002      	adds	r0, #2
  407ed8:	6063      	str	r3, [r4, #4]
  407eda:	f844 8020 	str.w	r8, [r4, r0, lsl #2]
  407ede:	2000      	movs	r0, #0
  407ee0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  407ee4:	4b14      	ldr	r3, [pc, #80]	; (407f38 <__register_exitproc+0xa0>)
  407ee6:	b303      	cbz	r3, 407f2a <__register_exitproc+0x92>
  407ee8:	f44f 70c8 	mov.w	r0, #400	; 0x190
  407eec:	f3af 8000 	nop.w
  407ef0:	4604      	mov	r4, r0
  407ef2:	b1d0      	cbz	r0, 407f2a <__register_exitproc+0x92>
  407ef4:	f8d5 3148 	ldr.w	r3, [r5, #328]	; 0x148
  407ef8:	2700      	movs	r7, #0
  407efa:	e880 0088 	stmia.w	r0, {r3, r7}
  407efe:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
  407f02:	4638      	mov	r0, r7
  407f04:	2301      	movs	r3, #1
  407f06:	f8c4 7188 	str.w	r7, [r4, #392]	; 0x188
  407f0a:	f8c4 718c 	str.w	r7, [r4, #396]	; 0x18c
  407f0e:	2e00      	cmp	r6, #0
  407f10:	d0e1      	beq.n	407ed6 <__register_exitproc+0x3e>
  407f12:	e7d1      	b.n	407eb8 <__register_exitproc+0x20>
  407f14:	f8d4 118c 	ldr.w	r1, [r4, #396]	; 0x18c
  407f18:	430a      	orrs	r2, r1
  407f1a:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
  407f1e:	e7da      	b.n	407ed6 <__register_exitproc+0x3e>
  407f20:	f505 74a6 	add.w	r4, r5, #332	; 0x14c
  407f24:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
  407f28:	e7c1      	b.n	407eae <__register_exitproc+0x16>
  407f2a:	f04f 30ff 	mov.w	r0, #4294967295
  407f2e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  407f32:	bf00      	nop
  407f34:	00408d78 	.word	0x00408d78
  407f38:	00000000 	.word	0x00000000

00407f3c <_calloc_r>:
  407f3c:	b510      	push	{r4, lr}
  407f3e:	fb02 f101 	mul.w	r1, r2, r1
  407f42:	f7fe ff4f 	bl	406de4 <_malloc_r>
  407f46:	4604      	mov	r4, r0
  407f48:	b1d8      	cbz	r0, 407f82 <_calloc_r+0x46>
  407f4a:	f850 2c04 	ldr.w	r2, [r0, #-4]
  407f4e:	f022 0203 	bic.w	r2, r2, #3
  407f52:	3a04      	subs	r2, #4
  407f54:	2a24      	cmp	r2, #36	; 0x24
  407f56:	d818      	bhi.n	407f8a <_calloc_r+0x4e>
  407f58:	2a13      	cmp	r2, #19
  407f5a:	d914      	bls.n	407f86 <_calloc_r+0x4a>
  407f5c:	2300      	movs	r3, #0
  407f5e:	2a1b      	cmp	r2, #27
  407f60:	6003      	str	r3, [r0, #0]
  407f62:	6043      	str	r3, [r0, #4]
  407f64:	d916      	bls.n	407f94 <_calloc_r+0x58>
  407f66:	2a24      	cmp	r2, #36	; 0x24
  407f68:	6083      	str	r3, [r0, #8]
  407f6a:	60c3      	str	r3, [r0, #12]
  407f6c:	bf11      	iteee	ne
  407f6e:	f100 0210 	addne.w	r2, r0, #16
  407f72:	6103      	streq	r3, [r0, #16]
  407f74:	6143      	streq	r3, [r0, #20]
  407f76:	f100 0218 	addeq.w	r2, r0, #24
  407f7a:	2300      	movs	r3, #0
  407f7c:	6013      	str	r3, [r2, #0]
  407f7e:	6053      	str	r3, [r2, #4]
  407f80:	6093      	str	r3, [r2, #8]
  407f82:	4620      	mov	r0, r4
  407f84:	bd10      	pop	{r4, pc}
  407f86:	4602      	mov	r2, r0
  407f88:	e7f7      	b.n	407f7a <_calloc_r+0x3e>
  407f8a:	2100      	movs	r1, #0
  407f8c:	f7fc fa36 	bl	4043fc <memset>
  407f90:	4620      	mov	r0, r4
  407f92:	bd10      	pop	{r4, pc}
  407f94:	f100 0208 	add.w	r2, r0, #8
  407f98:	e7ef      	b.n	407f7a <_calloc_r+0x3e>
  407f9a:	bf00      	nop

00407f9c <_malloc_trim_r>:
  407f9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  407f9e:	4f24      	ldr	r7, [pc, #144]	; (408030 <_malloc_trim_r+0x94>)
  407fa0:	460c      	mov	r4, r1
  407fa2:	4606      	mov	r6, r0
  407fa4:	f7ff faee 	bl	407584 <__malloc_lock>
  407fa8:	68bb      	ldr	r3, [r7, #8]
  407faa:	685d      	ldr	r5, [r3, #4]
  407fac:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  407fb0:	310f      	adds	r1, #15
  407fb2:	f025 0503 	bic.w	r5, r5, #3
  407fb6:	4429      	add	r1, r5
  407fb8:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  407fbc:	f021 010f 	bic.w	r1, r1, #15
  407fc0:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  407fc4:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  407fc8:	db07      	blt.n	407fda <_malloc_trim_r+0x3e>
  407fca:	2100      	movs	r1, #0
  407fcc:	4630      	mov	r0, r6
  407fce:	f7ff fdd7 	bl	407b80 <_sbrk_r>
  407fd2:	68bb      	ldr	r3, [r7, #8]
  407fd4:	442b      	add	r3, r5
  407fd6:	4298      	cmp	r0, r3
  407fd8:	d004      	beq.n	407fe4 <_malloc_trim_r+0x48>
  407fda:	4630      	mov	r0, r6
  407fdc:	f7ff fad4 	bl	407588 <__malloc_unlock>
  407fe0:	2000      	movs	r0, #0
  407fe2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  407fe4:	4261      	negs	r1, r4
  407fe6:	4630      	mov	r0, r6
  407fe8:	f7ff fdca 	bl	407b80 <_sbrk_r>
  407fec:	3001      	adds	r0, #1
  407fee:	d00d      	beq.n	40800c <_malloc_trim_r+0x70>
  407ff0:	4b10      	ldr	r3, [pc, #64]	; (408034 <_malloc_trim_r+0x98>)
  407ff2:	68ba      	ldr	r2, [r7, #8]
  407ff4:	6819      	ldr	r1, [r3, #0]
  407ff6:	1b2d      	subs	r5, r5, r4
  407ff8:	f045 0501 	orr.w	r5, r5, #1
  407ffc:	4630      	mov	r0, r6
  407ffe:	1b09      	subs	r1, r1, r4
  408000:	6055      	str	r5, [r2, #4]
  408002:	6019      	str	r1, [r3, #0]
  408004:	f7ff fac0 	bl	407588 <__malloc_unlock>
  408008:	2001      	movs	r0, #1
  40800a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40800c:	2100      	movs	r1, #0
  40800e:	4630      	mov	r0, r6
  408010:	f7ff fdb6 	bl	407b80 <_sbrk_r>
  408014:	68ba      	ldr	r2, [r7, #8]
  408016:	1a83      	subs	r3, r0, r2
  408018:	2b0f      	cmp	r3, #15
  40801a:	ddde      	ble.n	407fda <_malloc_trim_r+0x3e>
  40801c:	4c06      	ldr	r4, [pc, #24]	; (408038 <_malloc_trim_r+0x9c>)
  40801e:	4905      	ldr	r1, [pc, #20]	; (408034 <_malloc_trim_r+0x98>)
  408020:	6824      	ldr	r4, [r4, #0]
  408022:	f043 0301 	orr.w	r3, r3, #1
  408026:	1b00      	subs	r0, r0, r4
  408028:	6053      	str	r3, [r2, #4]
  40802a:	6008      	str	r0, [r1, #0]
  40802c:	e7d5      	b.n	407fda <_malloc_trim_r+0x3e>
  40802e:	bf00      	nop
  408030:	20000440 	.word	0x20000440
  408034:	20001c04 	.word	0x20001c04
  408038:	20000848 	.word	0x20000848

0040803c <_free_r>:
  40803c:	2900      	cmp	r1, #0
  40803e:	d044      	beq.n	4080ca <_free_r+0x8e>
  408040:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  408044:	460d      	mov	r5, r1
  408046:	4680      	mov	r8, r0
  408048:	f7ff fa9c 	bl	407584 <__malloc_lock>
  40804c:	f855 7c04 	ldr.w	r7, [r5, #-4]
  408050:	4969      	ldr	r1, [pc, #420]	; (4081f8 <_free_r+0x1bc>)
  408052:	f027 0301 	bic.w	r3, r7, #1
  408056:	f1a5 0408 	sub.w	r4, r5, #8
  40805a:	18e2      	adds	r2, r4, r3
  40805c:	688e      	ldr	r6, [r1, #8]
  40805e:	6850      	ldr	r0, [r2, #4]
  408060:	42b2      	cmp	r2, r6
  408062:	f020 0003 	bic.w	r0, r0, #3
  408066:	d05e      	beq.n	408126 <_free_r+0xea>
  408068:	07fe      	lsls	r6, r7, #31
  40806a:	6050      	str	r0, [r2, #4]
  40806c:	d40b      	bmi.n	408086 <_free_r+0x4a>
  40806e:	f855 7c08 	ldr.w	r7, [r5, #-8]
  408072:	1be4      	subs	r4, r4, r7
  408074:	f101 0e08 	add.w	lr, r1, #8
  408078:	68a5      	ldr	r5, [r4, #8]
  40807a:	4575      	cmp	r5, lr
  40807c:	443b      	add	r3, r7
  40807e:	d06d      	beq.n	40815c <_free_r+0x120>
  408080:	68e7      	ldr	r7, [r4, #12]
  408082:	60ef      	str	r7, [r5, #12]
  408084:	60bd      	str	r5, [r7, #8]
  408086:	1815      	adds	r5, r2, r0
  408088:	686d      	ldr	r5, [r5, #4]
  40808a:	07ed      	lsls	r5, r5, #31
  40808c:	d53e      	bpl.n	40810c <_free_r+0xd0>
  40808e:	f043 0201 	orr.w	r2, r3, #1
  408092:	6062      	str	r2, [r4, #4]
  408094:	50e3      	str	r3, [r4, r3]
  408096:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40809a:	d217      	bcs.n	4080cc <_free_r+0x90>
  40809c:	08db      	lsrs	r3, r3, #3
  40809e:	1c58      	adds	r0, r3, #1
  4080a0:	109a      	asrs	r2, r3, #2
  4080a2:	684d      	ldr	r5, [r1, #4]
  4080a4:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  4080a8:	60a7      	str	r7, [r4, #8]
  4080aa:	2301      	movs	r3, #1
  4080ac:	4093      	lsls	r3, r2
  4080ae:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  4080b2:	432b      	orrs	r3, r5
  4080b4:	3a08      	subs	r2, #8
  4080b6:	60e2      	str	r2, [r4, #12]
  4080b8:	604b      	str	r3, [r1, #4]
  4080ba:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  4080be:	60fc      	str	r4, [r7, #12]
  4080c0:	4640      	mov	r0, r8
  4080c2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4080c6:	f7ff ba5f 	b.w	407588 <__malloc_unlock>
  4080ca:	4770      	bx	lr
  4080cc:	0a5a      	lsrs	r2, r3, #9
  4080ce:	2a04      	cmp	r2, #4
  4080d0:	d852      	bhi.n	408178 <_free_r+0x13c>
  4080d2:	099a      	lsrs	r2, r3, #6
  4080d4:	f102 0739 	add.w	r7, r2, #57	; 0x39
  4080d8:	00ff      	lsls	r7, r7, #3
  4080da:	f102 0538 	add.w	r5, r2, #56	; 0x38
  4080de:	19c8      	adds	r0, r1, r7
  4080e0:	59ca      	ldr	r2, [r1, r7]
  4080e2:	3808      	subs	r0, #8
  4080e4:	4290      	cmp	r0, r2
  4080e6:	d04f      	beq.n	408188 <_free_r+0x14c>
  4080e8:	6851      	ldr	r1, [r2, #4]
  4080ea:	f021 0103 	bic.w	r1, r1, #3
  4080ee:	428b      	cmp	r3, r1
  4080f0:	d232      	bcs.n	408158 <_free_r+0x11c>
  4080f2:	6892      	ldr	r2, [r2, #8]
  4080f4:	4290      	cmp	r0, r2
  4080f6:	d1f7      	bne.n	4080e8 <_free_r+0xac>
  4080f8:	68c3      	ldr	r3, [r0, #12]
  4080fa:	60a0      	str	r0, [r4, #8]
  4080fc:	60e3      	str	r3, [r4, #12]
  4080fe:	609c      	str	r4, [r3, #8]
  408100:	60c4      	str	r4, [r0, #12]
  408102:	4640      	mov	r0, r8
  408104:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  408108:	f7ff ba3e 	b.w	407588 <__malloc_unlock>
  40810c:	6895      	ldr	r5, [r2, #8]
  40810e:	4f3b      	ldr	r7, [pc, #236]	; (4081fc <_free_r+0x1c0>)
  408110:	42bd      	cmp	r5, r7
  408112:	4403      	add	r3, r0
  408114:	d040      	beq.n	408198 <_free_r+0x15c>
  408116:	68d0      	ldr	r0, [r2, #12]
  408118:	60e8      	str	r0, [r5, #12]
  40811a:	f043 0201 	orr.w	r2, r3, #1
  40811e:	6085      	str	r5, [r0, #8]
  408120:	6062      	str	r2, [r4, #4]
  408122:	50e3      	str	r3, [r4, r3]
  408124:	e7b7      	b.n	408096 <_free_r+0x5a>
  408126:	07ff      	lsls	r7, r7, #31
  408128:	4403      	add	r3, r0
  40812a:	d407      	bmi.n	40813c <_free_r+0x100>
  40812c:	f855 2c08 	ldr.w	r2, [r5, #-8]
  408130:	1aa4      	subs	r4, r4, r2
  408132:	4413      	add	r3, r2
  408134:	68a0      	ldr	r0, [r4, #8]
  408136:	68e2      	ldr	r2, [r4, #12]
  408138:	60c2      	str	r2, [r0, #12]
  40813a:	6090      	str	r0, [r2, #8]
  40813c:	4a30      	ldr	r2, [pc, #192]	; (408200 <_free_r+0x1c4>)
  40813e:	6812      	ldr	r2, [r2, #0]
  408140:	f043 0001 	orr.w	r0, r3, #1
  408144:	4293      	cmp	r3, r2
  408146:	6060      	str	r0, [r4, #4]
  408148:	608c      	str	r4, [r1, #8]
  40814a:	d3b9      	bcc.n	4080c0 <_free_r+0x84>
  40814c:	4b2d      	ldr	r3, [pc, #180]	; (408204 <_free_r+0x1c8>)
  40814e:	4640      	mov	r0, r8
  408150:	6819      	ldr	r1, [r3, #0]
  408152:	f7ff ff23 	bl	407f9c <_malloc_trim_r>
  408156:	e7b3      	b.n	4080c0 <_free_r+0x84>
  408158:	4610      	mov	r0, r2
  40815a:	e7cd      	b.n	4080f8 <_free_r+0xbc>
  40815c:	1811      	adds	r1, r2, r0
  40815e:	6849      	ldr	r1, [r1, #4]
  408160:	07c9      	lsls	r1, r1, #31
  408162:	d444      	bmi.n	4081ee <_free_r+0x1b2>
  408164:	6891      	ldr	r1, [r2, #8]
  408166:	68d2      	ldr	r2, [r2, #12]
  408168:	60ca      	str	r2, [r1, #12]
  40816a:	4403      	add	r3, r0
  40816c:	f043 0001 	orr.w	r0, r3, #1
  408170:	6091      	str	r1, [r2, #8]
  408172:	6060      	str	r0, [r4, #4]
  408174:	50e3      	str	r3, [r4, r3]
  408176:	e7a3      	b.n	4080c0 <_free_r+0x84>
  408178:	2a14      	cmp	r2, #20
  40817a:	d816      	bhi.n	4081aa <_free_r+0x16e>
  40817c:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  408180:	00ff      	lsls	r7, r7, #3
  408182:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  408186:	e7aa      	b.n	4080de <_free_r+0xa2>
  408188:	10aa      	asrs	r2, r5, #2
  40818a:	2301      	movs	r3, #1
  40818c:	684d      	ldr	r5, [r1, #4]
  40818e:	4093      	lsls	r3, r2
  408190:	432b      	orrs	r3, r5
  408192:	604b      	str	r3, [r1, #4]
  408194:	4603      	mov	r3, r0
  408196:	e7b0      	b.n	4080fa <_free_r+0xbe>
  408198:	f043 0201 	orr.w	r2, r3, #1
  40819c:	614c      	str	r4, [r1, #20]
  40819e:	610c      	str	r4, [r1, #16]
  4081a0:	60e5      	str	r5, [r4, #12]
  4081a2:	60a5      	str	r5, [r4, #8]
  4081a4:	6062      	str	r2, [r4, #4]
  4081a6:	50e3      	str	r3, [r4, r3]
  4081a8:	e78a      	b.n	4080c0 <_free_r+0x84>
  4081aa:	2a54      	cmp	r2, #84	; 0x54
  4081ac:	d806      	bhi.n	4081bc <_free_r+0x180>
  4081ae:	0b1a      	lsrs	r2, r3, #12
  4081b0:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  4081b4:	00ff      	lsls	r7, r7, #3
  4081b6:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  4081ba:	e790      	b.n	4080de <_free_r+0xa2>
  4081bc:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4081c0:	d806      	bhi.n	4081d0 <_free_r+0x194>
  4081c2:	0bda      	lsrs	r2, r3, #15
  4081c4:	f102 0778 	add.w	r7, r2, #120	; 0x78
  4081c8:	00ff      	lsls	r7, r7, #3
  4081ca:	f102 0577 	add.w	r5, r2, #119	; 0x77
  4081ce:	e786      	b.n	4080de <_free_r+0xa2>
  4081d0:	f240 5054 	movw	r0, #1364	; 0x554
  4081d4:	4282      	cmp	r2, r0
  4081d6:	d806      	bhi.n	4081e6 <_free_r+0x1aa>
  4081d8:	0c9a      	lsrs	r2, r3, #18
  4081da:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  4081de:	00ff      	lsls	r7, r7, #3
  4081e0:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  4081e4:	e77b      	b.n	4080de <_free_r+0xa2>
  4081e6:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  4081ea:	257e      	movs	r5, #126	; 0x7e
  4081ec:	e777      	b.n	4080de <_free_r+0xa2>
  4081ee:	f043 0101 	orr.w	r1, r3, #1
  4081f2:	6061      	str	r1, [r4, #4]
  4081f4:	6013      	str	r3, [r2, #0]
  4081f6:	e763      	b.n	4080c0 <_free_r+0x84>
  4081f8:	20000440 	.word	0x20000440
  4081fc:	20000448 	.word	0x20000448
  408200:	2000084c 	.word	0x2000084c
  408204:	20001c34 	.word	0x20001c34

00408208 <__ascii_mbtowc>:
  408208:	b082      	sub	sp, #8
  40820a:	b149      	cbz	r1, 408220 <__ascii_mbtowc+0x18>
  40820c:	b15a      	cbz	r2, 408226 <__ascii_mbtowc+0x1e>
  40820e:	b16b      	cbz	r3, 40822c <__ascii_mbtowc+0x24>
  408210:	7813      	ldrb	r3, [r2, #0]
  408212:	600b      	str	r3, [r1, #0]
  408214:	7812      	ldrb	r2, [r2, #0]
  408216:	1c10      	adds	r0, r2, #0
  408218:	bf18      	it	ne
  40821a:	2001      	movne	r0, #1
  40821c:	b002      	add	sp, #8
  40821e:	4770      	bx	lr
  408220:	a901      	add	r1, sp, #4
  408222:	2a00      	cmp	r2, #0
  408224:	d1f3      	bne.n	40820e <__ascii_mbtowc+0x6>
  408226:	4610      	mov	r0, r2
  408228:	b002      	add	sp, #8
  40822a:	4770      	bx	lr
  40822c:	f06f 0001 	mvn.w	r0, #1
  408230:	e7f4      	b.n	40821c <__ascii_mbtowc+0x14>
  408232:	bf00      	nop

00408234 <memmove>:
  408234:	4288      	cmp	r0, r1
  408236:	b5f0      	push	{r4, r5, r6, r7, lr}
  408238:	d90d      	bls.n	408256 <memmove+0x22>
  40823a:	188b      	adds	r3, r1, r2
  40823c:	4298      	cmp	r0, r3
  40823e:	d20a      	bcs.n	408256 <memmove+0x22>
  408240:	1884      	adds	r4, r0, r2
  408242:	2a00      	cmp	r2, #0
  408244:	d051      	beq.n	4082ea <memmove+0xb6>
  408246:	4622      	mov	r2, r4
  408248:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  40824c:	f802 4d01 	strb.w	r4, [r2, #-1]!
  408250:	4299      	cmp	r1, r3
  408252:	d1f9      	bne.n	408248 <memmove+0x14>
  408254:	bdf0      	pop	{r4, r5, r6, r7, pc}
  408256:	2a0f      	cmp	r2, #15
  408258:	d948      	bls.n	4082ec <memmove+0xb8>
  40825a:	ea41 0300 	orr.w	r3, r1, r0
  40825e:	079b      	lsls	r3, r3, #30
  408260:	d146      	bne.n	4082f0 <memmove+0xbc>
  408262:	f100 0410 	add.w	r4, r0, #16
  408266:	f101 0310 	add.w	r3, r1, #16
  40826a:	4615      	mov	r5, r2
  40826c:	f853 6c10 	ldr.w	r6, [r3, #-16]
  408270:	f844 6c10 	str.w	r6, [r4, #-16]
  408274:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  408278:	f844 6c0c 	str.w	r6, [r4, #-12]
  40827c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  408280:	f844 6c08 	str.w	r6, [r4, #-8]
  408284:	3d10      	subs	r5, #16
  408286:	f853 6c04 	ldr.w	r6, [r3, #-4]
  40828a:	f844 6c04 	str.w	r6, [r4, #-4]
  40828e:	2d0f      	cmp	r5, #15
  408290:	f103 0310 	add.w	r3, r3, #16
  408294:	f104 0410 	add.w	r4, r4, #16
  408298:	d8e8      	bhi.n	40826c <memmove+0x38>
  40829a:	f1a2 0310 	sub.w	r3, r2, #16
  40829e:	f023 030f 	bic.w	r3, r3, #15
  4082a2:	f002 0e0f 	and.w	lr, r2, #15
  4082a6:	3310      	adds	r3, #16
  4082a8:	f1be 0f03 	cmp.w	lr, #3
  4082ac:	4419      	add	r1, r3
  4082ae:	4403      	add	r3, r0
  4082b0:	d921      	bls.n	4082f6 <memmove+0xc2>
  4082b2:	1f1e      	subs	r6, r3, #4
  4082b4:	460d      	mov	r5, r1
  4082b6:	4674      	mov	r4, lr
  4082b8:	3c04      	subs	r4, #4
  4082ba:	f855 7b04 	ldr.w	r7, [r5], #4
  4082be:	f846 7f04 	str.w	r7, [r6, #4]!
  4082c2:	2c03      	cmp	r4, #3
  4082c4:	d8f8      	bhi.n	4082b8 <memmove+0x84>
  4082c6:	f1ae 0404 	sub.w	r4, lr, #4
  4082ca:	f024 0403 	bic.w	r4, r4, #3
  4082ce:	3404      	adds	r4, #4
  4082d0:	4421      	add	r1, r4
  4082d2:	4423      	add	r3, r4
  4082d4:	f002 0203 	and.w	r2, r2, #3
  4082d8:	b162      	cbz	r2, 4082f4 <memmove+0xc0>
  4082da:	3b01      	subs	r3, #1
  4082dc:	440a      	add	r2, r1
  4082de:	f811 4b01 	ldrb.w	r4, [r1], #1
  4082e2:	f803 4f01 	strb.w	r4, [r3, #1]!
  4082e6:	428a      	cmp	r2, r1
  4082e8:	d1f9      	bne.n	4082de <memmove+0xaa>
  4082ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4082ec:	4603      	mov	r3, r0
  4082ee:	e7f3      	b.n	4082d8 <memmove+0xa4>
  4082f0:	4603      	mov	r3, r0
  4082f2:	e7f2      	b.n	4082da <memmove+0xa6>
  4082f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4082f6:	4672      	mov	r2, lr
  4082f8:	e7ee      	b.n	4082d8 <memmove+0xa4>
  4082fa:	bf00      	nop

004082fc <_realloc_r>:
  4082fc:	2900      	cmp	r1, #0
  4082fe:	f000 8095 	beq.w	40842c <_realloc_r+0x130>
  408302:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  408306:	460d      	mov	r5, r1
  408308:	4616      	mov	r6, r2
  40830a:	b083      	sub	sp, #12
  40830c:	4680      	mov	r8, r0
  40830e:	f106 070b 	add.w	r7, r6, #11
  408312:	f7ff f937 	bl	407584 <__malloc_lock>
  408316:	f855 ec04 	ldr.w	lr, [r5, #-4]
  40831a:	2f16      	cmp	r7, #22
  40831c:	f02e 0403 	bic.w	r4, lr, #3
  408320:	f1a5 0908 	sub.w	r9, r5, #8
  408324:	d83c      	bhi.n	4083a0 <_realloc_r+0xa4>
  408326:	2210      	movs	r2, #16
  408328:	4617      	mov	r7, r2
  40832a:	42be      	cmp	r6, r7
  40832c:	d83d      	bhi.n	4083aa <_realloc_r+0xae>
  40832e:	4294      	cmp	r4, r2
  408330:	da43      	bge.n	4083ba <_realloc_r+0xbe>
  408332:	4bc4      	ldr	r3, [pc, #784]	; (408644 <_realloc_r+0x348>)
  408334:	6899      	ldr	r1, [r3, #8]
  408336:	eb09 0004 	add.w	r0, r9, r4
  40833a:	4288      	cmp	r0, r1
  40833c:	f000 80b4 	beq.w	4084a8 <_realloc_r+0x1ac>
  408340:	6843      	ldr	r3, [r0, #4]
  408342:	f023 0101 	bic.w	r1, r3, #1
  408346:	4401      	add	r1, r0
  408348:	6849      	ldr	r1, [r1, #4]
  40834a:	07c9      	lsls	r1, r1, #31
  40834c:	d54c      	bpl.n	4083e8 <_realloc_r+0xec>
  40834e:	f01e 0f01 	tst.w	lr, #1
  408352:	f000 809b 	beq.w	40848c <_realloc_r+0x190>
  408356:	4631      	mov	r1, r6
  408358:	4640      	mov	r0, r8
  40835a:	f7fe fd43 	bl	406de4 <_malloc_r>
  40835e:	4606      	mov	r6, r0
  408360:	2800      	cmp	r0, #0
  408362:	d03a      	beq.n	4083da <_realloc_r+0xde>
  408364:	f855 3c04 	ldr.w	r3, [r5, #-4]
  408368:	f023 0301 	bic.w	r3, r3, #1
  40836c:	444b      	add	r3, r9
  40836e:	f1a0 0208 	sub.w	r2, r0, #8
  408372:	429a      	cmp	r2, r3
  408374:	f000 8121 	beq.w	4085ba <_realloc_r+0x2be>
  408378:	1f22      	subs	r2, r4, #4
  40837a:	2a24      	cmp	r2, #36	; 0x24
  40837c:	f200 8107 	bhi.w	40858e <_realloc_r+0x292>
  408380:	2a13      	cmp	r2, #19
  408382:	f200 80db 	bhi.w	40853c <_realloc_r+0x240>
  408386:	4603      	mov	r3, r0
  408388:	462a      	mov	r2, r5
  40838a:	6811      	ldr	r1, [r2, #0]
  40838c:	6019      	str	r1, [r3, #0]
  40838e:	6851      	ldr	r1, [r2, #4]
  408390:	6059      	str	r1, [r3, #4]
  408392:	6892      	ldr	r2, [r2, #8]
  408394:	609a      	str	r2, [r3, #8]
  408396:	4629      	mov	r1, r5
  408398:	4640      	mov	r0, r8
  40839a:	f7ff fe4f 	bl	40803c <_free_r>
  40839e:	e01c      	b.n	4083da <_realloc_r+0xde>
  4083a0:	f027 0707 	bic.w	r7, r7, #7
  4083a4:	2f00      	cmp	r7, #0
  4083a6:	463a      	mov	r2, r7
  4083a8:	dabf      	bge.n	40832a <_realloc_r+0x2e>
  4083aa:	2600      	movs	r6, #0
  4083ac:	230c      	movs	r3, #12
  4083ae:	4630      	mov	r0, r6
  4083b0:	f8c8 3000 	str.w	r3, [r8]
  4083b4:	b003      	add	sp, #12
  4083b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4083ba:	462e      	mov	r6, r5
  4083bc:	1be3      	subs	r3, r4, r7
  4083be:	2b0f      	cmp	r3, #15
  4083c0:	d81e      	bhi.n	408400 <_realloc_r+0x104>
  4083c2:	f8d9 3004 	ldr.w	r3, [r9, #4]
  4083c6:	f003 0301 	and.w	r3, r3, #1
  4083ca:	4323      	orrs	r3, r4
  4083cc:	444c      	add	r4, r9
  4083ce:	f8c9 3004 	str.w	r3, [r9, #4]
  4083d2:	6863      	ldr	r3, [r4, #4]
  4083d4:	f043 0301 	orr.w	r3, r3, #1
  4083d8:	6063      	str	r3, [r4, #4]
  4083da:	4640      	mov	r0, r8
  4083dc:	f7ff f8d4 	bl	407588 <__malloc_unlock>
  4083e0:	4630      	mov	r0, r6
  4083e2:	b003      	add	sp, #12
  4083e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4083e8:	f023 0303 	bic.w	r3, r3, #3
  4083ec:	18e1      	adds	r1, r4, r3
  4083ee:	4291      	cmp	r1, r2
  4083f0:	db1f      	blt.n	408432 <_realloc_r+0x136>
  4083f2:	68c3      	ldr	r3, [r0, #12]
  4083f4:	6882      	ldr	r2, [r0, #8]
  4083f6:	462e      	mov	r6, r5
  4083f8:	60d3      	str	r3, [r2, #12]
  4083fa:	460c      	mov	r4, r1
  4083fc:	609a      	str	r2, [r3, #8]
  4083fe:	e7dd      	b.n	4083bc <_realloc_r+0xc0>
  408400:	f8d9 2004 	ldr.w	r2, [r9, #4]
  408404:	eb09 0107 	add.w	r1, r9, r7
  408408:	f002 0201 	and.w	r2, r2, #1
  40840c:	444c      	add	r4, r9
  40840e:	f043 0301 	orr.w	r3, r3, #1
  408412:	4317      	orrs	r7, r2
  408414:	f8c9 7004 	str.w	r7, [r9, #4]
  408418:	604b      	str	r3, [r1, #4]
  40841a:	6863      	ldr	r3, [r4, #4]
  40841c:	f043 0301 	orr.w	r3, r3, #1
  408420:	3108      	adds	r1, #8
  408422:	6063      	str	r3, [r4, #4]
  408424:	4640      	mov	r0, r8
  408426:	f7ff fe09 	bl	40803c <_free_r>
  40842a:	e7d6      	b.n	4083da <_realloc_r+0xde>
  40842c:	4611      	mov	r1, r2
  40842e:	f7fe bcd9 	b.w	406de4 <_malloc_r>
  408432:	f01e 0f01 	tst.w	lr, #1
  408436:	d18e      	bne.n	408356 <_realloc_r+0x5a>
  408438:	f855 1c08 	ldr.w	r1, [r5, #-8]
  40843c:	eba9 0a01 	sub.w	sl, r9, r1
  408440:	f8da 1004 	ldr.w	r1, [sl, #4]
  408444:	f021 0103 	bic.w	r1, r1, #3
  408448:	440b      	add	r3, r1
  40844a:	4423      	add	r3, r4
  40844c:	4293      	cmp	r3, r2
  40844e:	db25      	blt.n	40849c <_realloc_r+0x1a0>
  408450:	68c2      	ldr	r2, [r0, #12]
  408452:	6881      	ldr	r1, [r0, #8]
  408454:	4656      	mov	r6, sl
  408456:	60ca      	str	r2, [r1, #12]
  408458:	6091      	str	r1, [r2, #8]
  40845a:	f8da 100c 	ldr.w	r1, [sl, #12]
  40845e:	f856 0f08 	ldr.w	r0, [r6, #8]!
  408462:	1f22      	subs	r2, r4, #4
  408464:	2a24      	cmp	r2, #36	; 0x24
  408466:	60c1      	str	r1, [r0, #12]
  408468:	6088      	str	r0, [r1, #8]
  40846a:	f200 8094 	bhi.w	408596 <_realloc_r+0x29a>
  40846e:	2a13      	cmp	r2, #19
  408470:	d96f      	bls.n	408552 <_realloc_r+0x256>
  408472:	6829      	ldr	r1, [r5, #0]
  408474:	f8ca 1008 	str.w	r1, [sl, #8]
  408478:	6869      	ldr	r1, [r5, #4]
  40847a:	f8ca 100c 	str.w	r1, [sl, #12]
  40847e:	2a1b      	cmp	r2, #27
  408480:	f200 80a2 	bhi.w	4085c8 <_realloc_r+0x2cc>
  408484:	3508      	adds	r5, #8
  408486:	f10a 0210 	add.w	r2, sl, #16
  40848a:	e063      	b.n	408554 <_realloc_r+0x258>
  40848c:	f855 3c08 	ldr.w	r3, [r5, #-8]
  408490:	eba9 0a03 	sub.w	sl, r9, r3
  408494:	f8da 1004 	ldr.w	r1, [sl, #4]
  408498:	f021 0103 	bic.w	r1, r1, #3
  40849c:	1863      	adds	r3, r4, r1
  40849e:	4293      	cmp	r3, r2
  4084a0:	f6ff af59 	blt.w	408356 <_realloc_r+0x5a>
  4084a4:	4656      	mov	r6, sl
  4084a6:	e7d8      	b.n	40845a <_realloc_r+0x15e>
  4084a8:	6841      	ldr	r1, [r0, #4]
  4084aa:	f021 0b03 	bic.w	fp, r1, #3
  4084ae:	44a3      	add	fp, r4
  4084b0:	f107 0010 	add.w	r0, r7, #16
  4084b4:	4583      	cmp	fp, r0
  4084b6:	da56      	bge.n	408566 <_realloc_r+0x26a>
  4084b8:	f01e 0f01 	tst.w	lr, #1
  4084bc:	f47f af4b 	bne.w	408356 <_realloc_r+0x5a>
  4084c0:	f855 1c08 	ldr.w	r1, [r5, #-8]
  4084c4:	eba9 0a01 	sub.w	sl, r9, r1
  4084c8:	f8da 1004 	ldr.w	r1, [sl, #4]
  4084cc:	f021 0103 	bic.w	r1, r1, #3
  4084d0:	448b      	add	fp, r1
  4084d2:	4558      	cmp	r0, fp
  4084d4:	dce2      	bgt.n	40849c <_realloc_r+0x1a0>
  4084d6:	4656      	mov	r6, sl
  4084d8:	f8da 100c 	ldr.w	r1, [sl, #12]
  4084dc:	f856 0f08 	ldr.w	r0, [r6, #8]!
  4084e0:	1f22      	subs	r2, r4, #4
  4084e2:	2a24      	cmp	r2, #36	; 0x24
  4084e4:	60c1      	str	r1, [r0, #12]
  4084e6:	6088      	str	r0, [r1, #8]
  4084e8:	f200 808f 	bhi.w	40860a <_realloc_r+0x30e>
  4084ec:	2a13      	cmp	r2, #19
  4084ee:	f240 808a 	bls.w	408606 <_realloc_r+0x30a>
  4084f2:	6829      	ldr	r1, [r5, #0]
  4084f4:	f8ca 1008 	str.w	r1, [sl, #8]
  4084f8:	6869      	ldr	r1, [r5, #4]
  4084fa:	f8ca 100c 	str.w	r1, [sl, #12]
  4084fe:	2a1b      	cmp	r2, #27
  408500:	f200 808a 	bhi.w	408618 <_realloc_r+0x31c>
  408504:	3508      	adds	r5, #8
  408506:	f10a 0210 	add.w	r2, sl, #16
  40850a:	6829      	ldr	r1, [r5, #0]
  40850c:	6011      	str	r1, [r2, #0]
  40850e:	6869      	ldr	r1, [r5, #4]
  408510:	6051      	str	r1, [r2, #4]
  408512:	68a9      	ldr	r1, [r5, #8]
  408514:	6091      	str	r1, [r2, #8]
  408516:	eb0a 0107 	add.w	r1, sl, r7
  40851a:	ebab 0207 	sub.w	r2, fp, r7
  40851e:	f042 0201 	orr.w	r2, r2, #1
  408522:	6099      	str	r1, [r3, #8]
  408524:	604a      	str	r2, [r1, #4]
  408526:	f8da 3004 	ldr.w	r3, [sl, #4]
  40852a:	f003 0301 	and.w	r3, r3, #1
  40852e:	431f      	orrs	r7, r3
  408530:	4640      	mov	r0, r8
  408532:	f8ca 7004 	str.w	r7, [sl, #4]
  408536:	f7ff f827 	bl	407588 <__malloc_unlock>
  40853a:	e751      	b.n	4083e0 <_realloc_r+0xe4>
  40853c:	682b      	ldr	r3, [r5, #0]
  40853e:	6003      	str	r3, [r0, #0]
  408540:	686b      	ldr	r3, [r5, #4]
  408542:	6043      	str	r3, [r0, #4]
  408544:	2a1b      	cmp	r2, #27
  408546:	d82d      	bhi.n	4085a4 <_realloc_r+0x2a8>
  408548:	f100 0308 	add.w	r3, r0, #8
  40854c:	f105 0208 	add.w	r2, r5, #8
  408550:	e71b      	b.n	40838a <_realloc_r+0x8e>
  408552:	4632      	mov	r2, r6
  408554:	6829      	ldr	r1, [r5, #0]
  408556:	6011      	str	r1, [r2, #0]
  408558:	6869      	ldr	r1, [r5, #4]
  40855a:	6051      	str	r1, [r2, #4]
  40855c:	68a9      	ldr	r1, [r5, #8]
  40855e:	6091      	str	r1, [r2, #8]
  408560:	461c      	mov	r4, r3
  408562:	46d1      	mov	r9, sl
  408564:	e72a      	b.n	4083bc <_realloc_r+0xc0>
  408566:	eb09 0107 	add.w	r1, r9, r7
  40856a:	ebab 0b07 	sub.w	fp, fp, r7
  40856e:	f04b 0201 	orr.w	r2, fp, #1
  408572:	6099      	str	r1, [r3, #8]
  408574:	604a      	str	r2, [r1, #4]
  408576:	f855 3c04 	ldr.w	r3, [r5, #-4]
  40857a:	f003 0301 	and.w	r3, r3, #1
  40857e:	431f      	orrs	r7, r3
  408580:	4640      	mov	r0, r8
  408582:	f845 7c04 	str.w	r7, [r5, #-4]
  408586:	f7fe ffff 	bl	407588 <__malloc_unlock>
  40858a:	462e      	mov	r6, r5
  40858c:	e728      	b.n	4083e0 <_realloc_r+0xe4>
  40858e:	4629      	mov	r1, r5
  408590:	f7ff fe50 	bl	408234 <memmove>
  408594:	e6ff      	b.n	408396 <_realloc_r+0x9a>
  408596:	4629      	mov	r1, r5
  408598:	4630      	mov	r0, r6
  40859a:	461c      	mov	r4, r3
  40859c:	46d1      	mov	r9, sl
  40859e:	f7ff fe49 	bl	408234 <memmove>
  4085a2:	e70b      	b.n	4083bc <_realloc_r+0xc0>
  4085a4:	68ab      	ldr	r3, [r5, #8]
  4085a6:	6083      	str	r3, [r0, #8]
  4085a8:	68eb      	ldr	r3, [r5, #12]
  4085aa:	60c3      	str	r3, [r0, #12]
  4085ac:	2a24      	cmp	r2, #36	; 0x24
  4085ae:	d017      	beq.n	4085e0 <_realloc_r+0x2e4>
  4085b0:	f100 0310 	add.w	r3, r0, #16
  4085b4:	f105 0210 	add.w	r2, r5, #16
  4085b8:	e6e7      	b.n	40838a <_realloc_r+0x8e>
  4085ba:	f850 3c04 	ldr.w	r3, [r0, #-4]
  4085be:	f023 0303 	bic.w	r3, r3, #3
  4085c2:	441c      	add	r4, r3
  4085c4:	462e      	mov	r6, r5
  4085c6:	e6f9      	b.n	4083bc <_realloc_r+0xc0>
  4085c8:	68a9      	ldr	r1, [r5, #8]
  4085ca:	f8ca 1010 	str.w	r1, [sl, #16]
  4085ce:	68e9      	ldr	r1, [r5, #12]
  4085d0:	f8ca 1014 	str.w	r1, [sl, #20]
  4085d4:	2a24      	cmp	r2, #36	; 0x24
  4085d6:	d00c      	beq.n	4085f2 <_realloc_r+0x2f6>
  4085d8:	3510      	adds	r5, #16
  4085da:	f10a 0218 	add.w	r2, sl, #24
  4085de:	e7b9      	b.n	408554 <_realloc_r+0x258>
  4085e0:	692b      	ldr	r3, [r5, #16]
  4085e2:	6103      	str	r3, [r0, #16]
  4085e4:	696b      	ldr	r3, [r5, #20]
  4085e6:	6143      	str	r3, [r0, #20]
  4085e8:	f105 0218 	add.w	r2, r5, #24
  4085ec:	f100 0318 	add.w	r3, r0, #24
  4085f0:	e6cb      	b.n	40838a <_realloc_r+0x8e>
  4085f2:	692a      	ldr	r2, [r5, #16]
  4085f4:	f8ca 2018 	str.w	r2, [sl, #24]
  4085f8:	696a      	ldr	r2, [r5, #20]
  4085fa:	f8ca 201c 	str.w	r2, [sl, #28]
  4085fe:	3518      	adds	r5, #24
  408600:	f10a 0220 	add.w	r2, sl, #32
  408604:	e7a6      	b.n	408554 <_realloc_r+0x258>
  408606:	4632      	mov	r2, r6
  408608:	e77f      	b.n	40850a <_realloc_r+0x20e>
  40860a:	4629      	mov	r1, r5
  40860c:	4630      	mov	r0, r6
  40860e:	9301      	str	r3, [sp, #4]
  408610:	f7ff fe10 	bl	408234 <memmove>
  408614:	9b01      	ldr	r3, [sp, #4]
  408616:	e77e      	b.n	408516 <_realloc_r+0x21a>
  408618:	68a9      	ldr	r1, [r5, #8]
  40861a:	f8ca 1010 	str.w	r1, [sl, #16]
  40861e:	68e9      	ldr	r1, [r5, #12]
  408620:	f8ca 1014 	str.w	r1, [sl, #20]
  408624:	2a24      	cmp	r2, #36	; 0x24
  408626:	d003      	beq.n	408630 <_realloc_r+0x334>
  408628:	3510      	adds	r5, #16
  40862a:	f10a 0218 	add.w	r2, sl, #24
  40862e:	e76c      	b.n	40850a <_realloc_r+0x20e>
  408630:	692a      	ldr	r2, [r5, #16]
  408632:	f8ca 2018 	str.w	r2, [sl, #24]
  408636:	696a      	ldr	r2, [r5, #20]
  408638:	f8ca 201c 	str.w	r2, [sl, #28]
  40863c:	3518      	adds	r5, #24
  40863e:	f10a 0220 	add.w	r2, sl, #32
  408642:	e762      	b.n	40850a <_realloc_r+0x20e>
  408644:	20000440 	.word	0x20000440

00408648 <__ascii_wctomb>:
  408648:	b121      	cbz	r1, 408654 <__ascii_wctomb+0xc>
  40864a:	2aff      	cmp	r2, #255	; 0xff
  40864c:	d804      	bhi.n	408658 <__ascii_wctomb+0x10>
  40864e:	700a      	strb	r2, [r1, #0]
  408650:	2001      	movs	r0, #1
  408652:	4770      	bx	lr
  408654:	4608      	mov	r0, r1
  408656:	4770      	bx	lr
  408658:	238a      	movs	r3, #138	; 0x8a
  40865a:	6003      	str	r3, [r0, #0]
  40865c:	f04f 30ff 	mov.w	r0, #4294967295
  408660:	4770      	bx	lr
  408662:	bf00      	nop

00408664 <__gedf2>:
  408664:	f04f 3cff 	mov.w	ip, #4294967295
  408668:	e006      	b.n	408678 <__cmpdf2+0x4>
  40866a:	bf00      	nop

0040866c <__ledf2>:
  40866c:	f04f 0c01 	mov.w	ip, #1
  408670:	e002      	b.n	408678 <__cmpdf2+0x4>
  408672:	bf00      	nop

00408674 <__cmpdf2>:
  408674:	f04f 0c01 	mov.w	ip, #1
  408678:	f84d cd04 	str.w	ip, [sp, #-4]!
  40867c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  408680:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  408684:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  408688:	bf18      	it	ne
  40868a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  40868e:	d01b      	beq.n	4086c8 <__cmpdf2+0x54>
  408690:	b001      	add	sp, #4
  408692:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  408696:	bf0c      	ite	eq
  408698:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  40869c:	ea91 0f03 	teqne	r1, r3
  4086a0:	bf02      	ittt	eq
  4086a2:	ea90 0f02 	teqeq	r0, r2
  4086a6:	2000      	moveq	r0, #0
  4086a8:	4770      	bxeq	lr
  4086aa:	f110 0f00 	cmn.w	r0, #0
  4086ae:	ea91 0f03 	teq	r1, r3
  4086b2:	bf58      	it	pl
  4086b4:	4299      	cmppl	r1, r3
  4086b6:	bf08      	it	eq
  4086b8:	4290      	cmpeq	r0, r2
  4086ba:	bf2c      	ite	cs
  4086bc:	17d8      	asrcs	r0, r3, #31
  4086be:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  4086c2:	f040 0001 	orr.w	r0, r0, #1
  4086c6:	4770      	bx	lr
  4086c8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4086cc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4086d0:	d102      	bne.n	4086d8 <__cmpdf2+0x64>
  4086d2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  4086d6:	d107      	bne.n	4086e8 <__cmpdf2+0x74>
  4086d8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4086dc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4086e0:	d1d6      	bne.n	408690 <__cmpdf2+0x1c>
  4086e2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  4086e6:	d0d3      	beq.n	408690 <__cmpdf2+0x1c>
  4086e8:	f85d 0b04 	ldr.w	r0, [sp], #4
  4086ec:	4770      	bx	lr
  4086ee:	bf00      	nop

004086f0 <__aeabi_cdrcmple>:
  4086f0:	4684      	mov	ip, r0
  4086f2:	4610      	mov	r0, r2
  4086f4:	4662      	mov	r2, ip
  4086f6:	468c      	mov	ip, r1
  4086f8:	4619      	mov	r1, r3
  4086fa:	4663      	mov	r3, ip
  4086fc:	e000      	b.n	408700 <__aeabi_cdcmpeq>
  4086fe:	bf00      	nop

00408700 <__aeabi_cdcmpeq>:
  408700:	b501      	push	{r0, lr}
  408702:	f7ff ffb7 	bl	408674 <__cmpdf2>
  408706:	2800      	cmp	r0, #0
  408708:	bf48      	it	mi
  40870a:	f110 0f00 	cmnmi.w	r0, #0
  40870e:	bd01      	pop	{r0, pc}

00408710 <__aeabi_dcmpeq>:
  408710:	f84d ed08 	str.w	lr, [sp, #-8]!
  408714:	f7ff fff4 	bl	408700 <__aeabi_cdcmpeq>
  408718:	bf0c      	ite	eq
  40871a:	2001      	moveq	r0, #1
  40871c:	2000      	movne	r0, #0
  40871e:	f85d fb08 	ldr.w	pc, [sp], #8
  408722:	bf00      	nop

00408724 <__aeabi_dcmplt>:
  408724:	f84d ed08 	str.w	lr, [sp, #-8]!
  408728:	f7ff ffea 	bl	408700 <__aeabi_cdcmpeq>
  40872c:	bf34      	ite	cc
  40872e:	2001      	movcc	r0, #1
  408730:	2000      	movcs	r0, #0
  408732:	f85d fb08 	ldr.w	pc, [sp], #8
  408736:	bf00      	nop

00408738 <__aeabi_dcmple>:
  408738:	f84d ed08 	str.w	lr, [sp, #-8]!
  40873c:	f7ff ffe0 	bl	408700 <__aeabi_cdcmpeq>
  408740:	bf94      	ite	ls
  408742:	2001      	movls	r0, #1
  408744:	2000      	movhi	r0, #0
  408746:	f85d fb08 	ldr.w	pc, [sp], #8
  40874a:	bf00      	nop

0040874c <__aeabi_dcmpge>:
  40874c:	f84d ed08 	str.w	lr, [sp, #-8]!
  408750:	f7ff ffce 	bl	4086f0 <__aeabi_cdrcmple>
  408754:	bf94      	ite	ls
  408756:	2001      	movls	r0, #1
  408758:	2000      	movhi	r0, #0
  40875a:	f85d fb08 	ldr.w	pc, [sp], #8
  40875e:	bf00      	nop

00408760 <__aeabi_dcmpgt>:
  408760:	f84d ed08 	str.w	lr, [sp, #-8]!
  408764:	f7ff ffc4 	bl	4086f0 <__aeabi_cdrcmple>
  408768:	bf34      	ite	cc
  40876a:	2001      	movcc	r0, #1
  40876c:	2000      	movcs	r0, #0
  40876e:	f85d fb08 	ldr.w	pc, [sp], #8
  408772:	bf00      	nop

00408774 <__aeabi_dcmpun>:
  408774:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  408778:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  40877c:	d102      	bne.n	408784 <__aeabi_dcmpun+0x10>
  40877e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  408782:	d10a      	bne.n	40879a <__aeabi_dcmpun+0x26>
  408784:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  408788:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  40878c:	d102      	bne.n	408794 <__aeabi_dcmpun+0x20>
  40878e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  408792:	d102      	bne.n	40879a <__aeabi_dcmpun+0x26>
  408794:	f04f 0000 	mov.w	r0, #0
  408798:	4770      	bx	lr
  40879a:	f04f 0001 	mov.w	r0, #1
  40879e:	4770      	bx	lr

004087a0 <__aeabi_d2iz>:
  4087a0:	ea4f 0241 	mov.w	r2, r1, lsl #1
  4087a4:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  4087a8:	d215      	bcs.n	4087d6 <__aeabi_d2iz+0x36>
  4087aa:	d511      	bpl.n	4087d0 <__aeabi_d2iz+0x30>
  4087ac:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  4087b0:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  4087b4:	d912      	bls.n	4087dc <__aeabi_d2iz+0x3c>
  4087b6:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  4087ba:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  4087be:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  4087c2:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4087c6:	fa23 f002 	lsr.w	r0, r3, r2
  4087ca:	bf18      	it	ne
  4087cc:	4240      	negne	r0, r0
  4087ce:	4770      	bx	lr
  4087d0:	f04f 0000 	mov.w	r0, #0
  4087d4:	4770      	bx	lr
  4087d6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  4087da:	d105      	bne.n	4087e8 <__aeabi_d2iz+0x48>
  4087dc:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  4087e0:	bf08      	it	eq
  4087e2:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  4087e6:	4770      	bx	lr
  4087e8:	f04f 0000 	mov.w	r0, #0
  4087ec:	4770      	bx	lr
  4087ee:	bf00      	nop
  4087f0:	736f6c63 	.word	0x736f6c63
  4087f4:	6c612065 	.word	0x6c612065
  4087f8:	000a0d6c 	.word	0x000a0d6c
  4087fc:	73626577 	.word	0x73626577
  408800:	656b636f 	.word	0x656b636f
  408804:	6c635f74 	.word	0x6c635f74
  408808:	746e6569 	.word	0x746e6569
  40880c:	73737720 	.word	0x73737720
  408810:	622f2f3a 	.word	0x622f2f3a
  408814:	72626769 	.word	0x72626769
  408818:	6568746f 	.word	0x6568746f
  40881c:	65657372 	.word	0x65657372
  408820:	656d2e73 	.word	0x656d2e73
  408824:	756f732f 	.word	0x756f732f
  408828:	5f656372 	.word	0x5f656372
  40882c:	69647561 	.word	0x69647561
  408830:	6f735f6f 	.word	0x6f735f6f
  408834:	74656b63 	.word	0x74656b63
  408838:	00000000 	.word	0x00000000
  40883c:	74697277 	.word	0x74697277
  408840:	20302065 	.word	0x20302065
  408844:	0a0d6425 	.word	0x0a0d6425
  408848:	00000000 	.word	0x00000000
  40884c:	000e1000 	.word	0x000e1000
  408850:	000000c0 	.word	0x000000c0
  408854:	00000800 	.word	0x00000800
	...
  408864:	20656466 	.word	0x20656466
  408868:	67616d69 	.word	0x67616d69
  40886c:	706a2e65 	.word	0x706a2e65
  408870:	000a0d67 	.word	0x000a0d67
  408874:	20726366 	.word	0x20726366
  408878:	67616d69 	.word	0x67616d69
  40887c:	706a2e65 	.word	0x706a2e65
  408880:	64252067 	.word	0x64252067
  408884:	00000a0d 	.word	0x00000a0d
  408888:	736f6c63 	.word	0x736f6c63
  40888c:	6c612065 	.word	0x6c612065
  408890:	000a0d6c 	.word	0x000a0d6c
  408894:	70747468 	.word	0x70747468
  408898:	736f705f 	.word	0x736f705f
  40889c:	6f2d2074 	.word	0x6f2d2074
  4088a0:	74746820 	.word	0x74746820
  4088a4:	2f3a7370 	.word	0x2f3a7370
  4088a8:	6769622f 	.word	0x6769622f
  4088ac:	746f7262 	.word	0x746f7262
  4088b0:	73726568 	.word	0x73726568
  4088b4:	2e736565 	.word	0x2e736565
  4088b8:	702f656d 	.word	0x702f656d
  4088bc:	5f74736f 	.word	0x5f74736f
  4088c0:	67616d69 	.word	0x67616d69
  4088c4:	70612065 	.word	0x70612065
  4088c8:	63696c70 	.word	0x63696c70
  4088cc:	6f697461 	.word	0x6f697461
  4088d0:	736a2f6e 	.word	0x736a2f6e
  4088d4:	0a0d6e6f 	.word	0x0a0d6e6f
  4088d8:	00000000 	.word	0x00000000
  4088dc:	70747468 	.word	0x70747468
  4088e0:	6464615f 	.word	0x6464615f
  4088e4:	6165685f 	.word	0x6165685f
  4088e8:	20726564 	.word	0x20726564
  4088ec:	656d2030 	.word	0x656d2030
  4088f0:	67617373 	.word	0x67617373
  4088f4:	79742d65 	.word	0x79742d65
  4088f8:	69206570 	.word	0x69206570
  4088fc:	6567616d 	.word	0x6567616d
  408900:	6e69622d 	.word	0x6e69622d
  408904:	00000a0d 	.word	0x00000a0d
  408908:	74697277 	.word	0x74697277
  40890c:	20302065 	.word	0x20302065
  408910:	0a0d6425 	.word	0x0a0d6425
  408914:	00000000 	.word	0x00000000
  408918:	70747468 	.word	0x70747468
  40891c:	6165725f 	.word	0x6165725f
  408920:	74735f64 	.word	0x74735f64
  408924:	73757461 	.word	0x73757461
  408928:	0a0d3020 	.word	0x0a0d3020
  40892c:	00000000 	.word	0x00000000
  408930:	20656466 	.word	0x20656466
  408934:	6d746162 	.word	0x6d746162
  408938:	742e6e61 	.word	0x742e6e61
  40893c:	0a0d7478 	.word	0x0a0d7478
  408940:	00000000 	.word	0x00000000
  408944:	20726366 	.word	0x20726366
  408948:	6d746162 	.word	0x6d746162
  40894c:	742e6e61 	.word	0x742e6e61
  408950:	25207478 	.word	0x25207478
  408954:	000a0d64 	.word	0x000a0d64
  408958:	75746573 	.word	0x75746573
  40895c:	65772070 	.word	0x65772070
  408960:	000a0d62 	.word	0x000a0d62
  408964:	7373415b 	.word	0x7373415b
  408968:	6169636f 	.word	0x6169636f
  40896c:	5d646574 	.word	0x5d646574
  408970:	00000a0d 	.word	0x00000a0d
  408974:	6f626572 	.word	0x6f626572
  408978:	0a0d746f 	.word	0x0a0d746f
  40897c:	00000000 	.word	0x00000000
  408980:	20746573 	.word	0x20746573
  408984:	63207973 	.word	0x63207973
  408988:	6f206520 	.word	0x6f206520
  40898c:	0a0d6666 	.word	0x0a0d6666
  408990:	00000000 	.word	0x00000000
  408994:	20746573 	.word	0x20746573
  408998:	63207973 	.word	0x63207973
  40899c:	6f207020 	.word	0x6f207020
  4089a0:	0a0d6666 	.word	0x0a0d6666
  4089a4:	00000000 	.word	0x00000000

004089a8 <npio2_hw>:
  4089a8:	3fc90f00 40490f00 4096cb00 40c90f00     ...?..I@...@...@
  4089b8:	40fb5300 4116cb00 412fed00 41490f00     .S.@...A../A..IA
  4089c8:	41623100 417b5300 418a3a00 4196cb00     .1bA.S{A.:.A...A
  4089d8:	41a35c00 41afed00 41bc7e00 41c90f00     .\.A...A.~.A...A
  4089e8:	41d5a000 41e23100 41eec200 41fb5300     ...A.1.A...A.S.A
  4089f8:	4203f200 420a3a00 42108300 4216cb00     ...B.:.B...B...B
  408a08:	421d1400 42235c00 4229a500 422fed00     ...B.\#B..)B../B
  408a18:	42363600 423c7e00 4242c700 42490f00     .66B.~<B..BB..IB

00408a28 <two_over_pi>:
  408a28:	000000a2 000000f9 00000083 0000006e     ............n...
  408a38:	0000004e 00000044 00000015 00000029     N...D.......)...
  408a48:	000000fc 00000027 00000057 000000d1     ....'...W.......
  408a58:	000000f5 00000034 000000dd 000000c0     ....4...........
  408a68:	000000db 00000062 00000095 00000099     ....b...........
  408a78:	0000003c 00000043 00000090 00000041     <...C.......A...
  408a88:	000000fe 00000051 00000063 000000ab     ....Q...c.......
  408a98:	000000de 000000bb 000000c5 00000061     ............a...
  408aa8:	000000b7 00000024 0000006e 0000003a     ....$...n...:...
  408ab8:	00000042 0000004d 000000d2 000000e0     B...M...........
  408ac8:	00000006 00000049 0000002e 000000ea     ....I...........
  408ad8:	00000009 000000d1 00000092 0000001c     ................
  408ae8:	000000fe 0000001d 000000eb 0000001c     ................
  408af8:	000000b1 00000029 000000a7 0000003e     ....).......>...
  408b08:	000000e8 00000082 00000035 000000f5     ........5.......
  408b18:	0000002e 000000bb 00000044 00000084     ........D.......
  408b28:	000000e9 0000009c 00000070 00000026     ........p...&...
  408b38:	000000b4 0000005f 0000007e 00000041     ...._...~...A...
  408b48:	00000039 00000091 000000d6 00000039     9...........9...
  408b58:	00000083 00000053 00000039 000000f4     ....S...9.......
  408b68:	0000009c 00000084 0000005f 0000008b     ........_.......
  408b78:	000000bd 000000f9 00000028 0000003b     ........(...;...
  408b88:	0000001f 000000f8 00000097 000000ff     ................
  408b98:	000000de 00000005 00000098 0000000f     ................
  408ba8:	000000ef 0000002f 00000011 0000008b     ..../...........
  408bb8:	0000005a 0000000a 0000006d 0000001f     Z.......m.......
  408bc8:	0000006d 00000036 0000007e 000000cf     m...6...~.......
  408bd8:	00000027 000000cb 00000009 000000b7     '...............
  408be8:	0000004f 00000046 0000003f 00000066     O...F...?...f...
  408bf8:	0000009e 0000005f 000000ea 0000002d     ...._.......-...
  408c08:	00000075 00000027 000000ba 000000c7     u...'...........
  408c18:	000000eb 000000e5 000000f1 0000007b     ............{...
  408c28:	0000003d 00000007 00000039 000000f7     =.......9.......
  408c38:	0000008a 00000052 00000092 000000ea     ....R...........
  408c48:	0000006b 000000fb 0000005f 000000b1     k......._.......
  408c58:	0000001f 0000008d 0000005d 00000008     ........].......
  408c68:	00000056 00000003 00000030 00000046     V.......0...F...
  408c78:	000000fc 0000007b 0000006b 000000ab     ....{...k.......
  408c88:	000000f0 000000cf 000000bc 00000020     ............ ...
  408c98:	0000009a 000000f4 00000036 0000001d     ........6.......
  408ca8:	000000a9 000000e3 00000091 00000061     ............a...
  408cb8:	0000005e 000000e6 0000001b 00000008     ^...............
  408cc8:	00000065 00000099 00000085 0000005f     e..........._...
  408cd8:	00000014 000000a0 00000068 00000040     ........h...@...
  408ce8:	0000008d 000000ff 000000d8 00000080     ................
  408cf8:	0000004d 00000073 00000027 00000031     M...s...'...1...
  408d08:	00000006 00000006 00000015 00000056     ............V...
  408d18:	000000ca 00000073 000000a8 000000c9     ....s...........
  408d28:	00000060 000000e2 0000007b 000000c0     `.......{.......
  408d38:	0000008c 0000006b                       ....k...

00408d40 <PIo2>:
  408d40:	3fc90000 39f00000 37da0000 33a20000     ...?...9...7...3
  408d50:	2e840000 2b500000 27c20000 22d00000     ......P+...'..."
  408d60:	1fc40000 1bc60000 17440000              ..........D.

00408d6c <init_jk>:
  408d6c:	00000004 00000007 00000009              ............

00408d78 <_global_impure_ptr>:
  408d78:	20000018 00464e49 00666e69 004e414e     ... INF.inf.NAN.
  408d88:	006e616e 33323130 37363534 42413938     nan.0123456789AB
  408d98:	46454443 00000000 33323130 37363534     CDEF....01234567
  408da8:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
  408db8:	0000296c 00000030                       l)..0...

00408dc0 <blanks.7208>:
  408dc0:	20202020 20202020 20202020 20202020                     

00408dd0 <zeroes.7209>:
  408dd0:	30303030 30303030 30303030 30303030     0000000000000000
  408de0:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.

00408df0 <__mprec_bigtens>:
  408df0:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
  408e00:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
  408e10:	7f73bf3c 75154fdd                       <.s..O.u

00408e18 <__mprec_tens>:
  408e18:	00000000 3ff00000 00000000 40240000     .......?......$@
  408e28:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
  408e38:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
  408e48:	00000000 412e8480 00000000 416312d0     .......A......cA
  408e58:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
  408e68:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
  408e78:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
  408e88:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
  408e98:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
  408ea8:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
  408eb8:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
  408ec8:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
  408ed8:	79d99db4 44ea7843                       ...yCx.D

00408ee0 <p05.6040>:
  408ee0:	00000005 00000019 0000007d 00000043     ........}...C...
  408ef0:	49534f50 00000058 0000002e              POSIX.......

00408efc <_ctype_>:
  408efc:	20202000 20202020 28282020 20282828     .         ((((( 
  408f0c:	20202020 20202020 20202020 20202020                     
  408f1c:	10108820 10101010 10101010 10101010      ...............
  408f2c:	04040410 04040404 10040404 10101010     ................
  408f3c:	41411010 41414141 01010101 01010101     ..AAAAAA........
  408f4c:	01010101 01010101 01010101 10101010     ................
  408f5c:	42421010 42424242 02020202 02020202     ..BBBBBB........
  408f6c:	02020202 02020202 02020202 10101010     ................
  408f7c:	00000020 00000000 00000000 00000000      ...............
	...

00409000 <_init>:
  409000:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  409002:	bf00      	nop
  409004:	bcf8      	pop	{r3, r4, r5, r6, r7}
  409006:	bc08      	pop	{r3}
  409008:	469e      	mov	lr, r3
  40900a:	4770      	bx	lr

0040900c <__init_array_start>:
  40900c:	00405df9 	.word	0x00405df9

00409010 <__frame_dummy_init_array_entry>:
  409010:	004000f1                                ..@.

00409014 <_fini>:
  409014:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  409016:	bf00      	nop
  409018:	bcf8      	pop	{r3, r4, r5, r6, r7}
  40901a:	bc08      	pop	{r3}
  40901c:	469e      	mov	lr, r3
  40901e:	4770      	bx	lr

00409020 <__fini_array_start>:
  409020:	004000cd 	.word	0x004000cd

Disassembly of section .relocate:

20000000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20000000:	f3bf 8f5f 	dmb	sy
20000004:	3801      	subs	r0, #1
20000006:	d1fb      	bne.n	20000000 <portable_delay_cycles>
20000008:	4770      	bx	lr
	...

2000000c <SystemCoreClock>:
2000000c:	0900 003d                                   ..=.

20000010 <_impure_ptr>:
20000010:	0018 2000 0000 0000                         ... ....

20000018 <impure_data>:
20000018:	0000 0000 0304 2000 036c 2000 03d4 2000     ....... l.. ... 
	...
200000c0:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
200000d0:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20000440 <__malloc_av_>:
	...
20000448:	0440 2000 0440 2000 0448 2000 0448 2000     @.. @.. H.. H.. 
20000458:	0450 2000 0450 2000 0458 2000 0458 2000     P.. P.. X.. X.. 
20000468:	0460 2000 0460 2000 0468 2000 0468 2000     `.. `.. h.. h.. 
20000478:	0470 2000 0470 2000 0478 2000 0478 2000     p.. p.. x.. x.. 
20000488:	0480 2000 0480 2000 0488 2000 0488 2000     ... ... ... ... 
20000498:	0490 2000 0490 2000 0498 2000 0498 2000     ... ... ... ... 
200004a8:	04a0 2000 04a0 2000 04a8 2000 04a8 2000     ... ... ... ... 
200004b8:	04b0 2000 04b0 2000 04b8 2000 04b8 2000     ... ... ... ... 
200004c8:	04c0 2000 04c0 2000 04c8 2000 04c8 2000     ... ... ... ... 
200004d8:	04d0 2000 04d0 2000 04d8 2000 04d8 2000     ... ... ... ... 
200004e8:	04e0 2000 04e0 2000 04e8 2000 04e8 2000     ... ... ... ... 
200004f8:	04f0 2000 04f0 2000 04f8 2000 04f8 2000     ... ... ... ... 
20000508:	0500 2000 0500 2000 0508 2000 0508 2000     ... ... ... ... 
20000518:	0510 2000 0510 2000 0518 2000 0518 2000     ... ... ... ... 
20000528:	0520 2000 0520 2000 0528 2000 0528 2000      ..  .. (.. (.. 
20000538:	0530 2000 0530 2000 0538 2000 0538 2000     0.. 0.. 8.. 8.. 
20000548:	0540 2000 0540 2000 0548 2000 0548 2000     @.. @.. H.. H.. 
20000558:	0550 2000 0550 2000 0558 2000 0558 2000     P.. P.. X.. X.. 
20000568:	0560 2000 0560 2000 0568 2000 0568 2000     `.. `.. h.. h.. 
20000578:	0570 2000 0570 2000 0578 2000 0578 2000     p.. p.. x.. x.. 
20000588:	0580 2000 0580 2000 0588 2000 0588 2000     ... ... ... ... 
20000598:	0590 2000 0590 2000 0598 2000 0598 2000     ... ... ... ... 
200005a8:	05a0 2000 05a0 2000 05a8 2000 05a8 2000     ... ... ... ... 
200005b8:	05b0 2000 05b0 2000 05b8 2000 05b8 2000     ... ... ... ... 
200005c8:	05c0 2000 05c0 2000 05c8 2000 05c8 2000     ... ... ... ... 
200005d8:	05d0 2000 05d0 2000 05d8 2000 05d8 2000     ... ... ... ... 
200005e8:	05e0 2000 05e0 2000 05e8 2000 05e8 2000     ... ... ... ... 
200005f8:	05f0 2000 05f0 2000 05f8 2000 05f8 2000     ... ... ... ... 
20000608:	0600 2000 0600 2000 0608 2000 0608 2000     ... ... ... ... 
20000618:	0610 2000 0610 2000 0618 2000 0618 2000     ... ... ... ... 
20000628:	0620 2000 0620 2000 0628 2000 0628 2000      ..  .. (.. (.. 
20000638:	0630 2000 0630 2000 0638 2000 0638 2000     0.. 0.. 8.. 8.. 
20000648:	0640 2000 0640 2000 0648 2000 0648 2000     @.. @.. H.. H.. 
20000658:	0650 2000 0650 2000 0658 2000 0658 2000     P.. P.. X.. X.. 
20000668:	0660 2000 0660 2000 0668 2000 0668 2000     `.. `.. h.. h.. 
20000678:	0670 2000 0670 2000 0678 2000 0678 2000     p.. p.. x.. x.. 
20000688:	0680 2000 0680 2000 0688 2000 0688 2000     ... ... ... ... 
20000698:	0690 2000 0690 2000 0698 2000 0698 2000     ... ... ... ... 
200006a8:	06a0 2000 06a0 2000 06a8 2000 06a8 2000     ... ... ... ... 
200006b8:	06b0 2000 06b0 2000 06b8 2000 06b8 2000     ... ... ... ... 
200006c8:	06c0 2000 06c0 2000 06c8 2000 06c8 2000     ... ... ... ... 
200006d8:	06d0 2000 06d0 2000 06d8 2000 06d8 2000     ... ... ... ... 
200006e8:	06e0 2000 06e0 2000 06e8 2000 06e8 2000     ... ... ... ... 
200006f8:	06f0 2000 06f0 2000 06f8 2000 06f8 2000     ... ... ... ... 
20000708:	0700 2000 0700 2000 0708 2000 0708 2000     ... ... ... ... 
20000718:	0710 2000 0710 2000 0718 2000 0718 2000     ... ... ... ... 
20000728:	0720 2000 0720 2000 0728 2000 0728 2000      ..  .. (.. (.. 
20000738:	0730 2000 0730 2000 0738 2000 0738 2000     0.. 0.. 8.. 8.. 
20000748:	0740 2000 0740 2000 0748 2000 0748 2000     @.. @.. H.. H.. 
20000758:	0750 2000 0750 2000 0758 2000 0758 2000     P.. P.. X.. X.. 
20000768:	0760 2000 0760 2000 0768 2000 0768 2000     `.. `.. h.. h.. 
20000778:	0770 2000 0770 2000 0778 2000 0778 2000     p.. p.. x.. x.. 
20000788:	0780 2000 0780 2000 0788 2000 0788 2000     ... ... ... ... 
20000798:	0790 2000 0790 2000 0798 2000 0798 2000     ... ... ... ... 
200007a8:	07a0 2000 07a0 2000 07a8 2000 07a8 2000     ... ... ... ... 
200007b8:	07b0 2000 07b0 2000 07b8 2000 07b8 2000     ... ... ... ... 
200007c8:	07c0 2000 07c0 2000 07c8 2000 07c8 2000     ... ... ... ... 
200007d8:	07d0 2000 07d0 2000 07d8 2000 07d8 2000     ... ... ... ... 
200007e8:	07e0 2000 07e0 2000 07e8 2000 07e8 2000     ... ... ... ... 
200007f8:	07f0 2000 07f0 2000 07f8 2000 07f8 2000     ... ... ... ... 
20000808:	0800 2000 0800 2000 0808 2000 0808 2000     ... ... ... ... 
20000818:	0810 2000 0810 2000 0818 2000 0818 2000     ... ... ... ... 
20000828:	0820 2000 0820 2000 0828 2000 0828 2000      ..  .. (.. (.. 
20000838:	0830 2000 0830 2000 0838 2000 0838 2000     0.. 0.. 8.. 8.. 

20000848 <__malloc_sbrk_base>:
20000848:	ffff ffff                                   ....

2000084c <__malloc_trim_threshold>:
2000084c:	0000 0002                                   ....

20000850 <__global_locale>:
20000850:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000870:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000890:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008b0:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008d0:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008f0:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000910:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000930:	8649 0040 8209 0040 0000 0000 8efc 0040     I.@...@.......@.
20000940:	8ef8 0040 8d9c 0040 8d9c 0040 8d9c 0040     ..@...@...@...@.
20000950:	8d9c 0040 8d9c 0040 8d9c 0040 8d9c 0040     ..@...@...@...@.
20000960:	8d9c 0040 8d9c 0040 ffff ffff ffff ffff     ..@...@.........
20000970:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
20000998:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...
